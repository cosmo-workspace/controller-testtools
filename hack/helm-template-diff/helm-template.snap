['sdiff <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_certmanager_enabled.yaml -n default) ../../example/app1/test/__snapshots__/test_certmanager_enabled.snap']
SnapShot = """
---                                                           <
# Source: app1/templates/serviceaccount.yaml                  <
apiVersion: v1                                                  apiVersion: v1
                                                              > automountServiceAccountToken: true
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true                            |     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
---                                                             ---
# Source: app1/templates/service.yaml                         <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  type: ClusterIP                                             <
  ports:                                                          ports:
    - port: 80                                                |     - name: http
      targetPort: http                                        |       port: 80
      protocol: TCP                                                   protocol: TCP
      name: http                                              |       targetPort: http
  selector:                                                       selector:
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: app1
                                                              >   type: ClusterIP
---                                                             ---
# Source: app1/templates/deployment.yaml                      <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/name: app1                            <
      app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >       app.kubernetes.io/name: app1
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
        helm.sh/chart: app1-0.1.0                             <
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.16.0\"                   <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >         app.kubernetes.io/name: app1
                                                              >         app.kubernetes.io/version: 1.16.0
                                                              >         helm.sh/chart: app1-0.1.0
    spec:                                                           spec:
      serviceAccountName: chartsnap-app1                      <
      securityContext:                                        <
        {}                                                    <
      containers:                                                     containers:
        - name: app1                                          |         - image: nginx:1.16.0
          securityContext:                                    <
            {}                                                <
          image: \"nginx:1.16.0\"                               <
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
          ports:                                              <
            - name: http                                      <
              containerPort: 80                               <
              protocol: TCP                                   <
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
                                                              >           name: app1
                                                              >           ports:
                                                              >             - containerPort: 80
                                                              >               name: http
                                                              >               protocol: TCP
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources:                                          |           resources: {}
            {}                                                |           securityContext: {}
                                                              >       securityContext: {}
                                                              >       serviceAccountName: chartsnap-app1
---                                                             ---
# Source: app1/templates/cert.yaml                            <
apiVersion: cert-manager.io/v1                                  apiVersion: cert-manager.io/v1
kind: Certificate                                               kind: Certificate
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
  name: app1-cert                                                 name: app1-cert
  namespace: default                                              namespace: default
spec:                                                           spec:
  dnsNames:                                                       dnsNames:
    - chartsnap-app1.default.svc                                    - chartsnap-app1.default.svc
    - chartsnap-app1.default.svc.cluster.local                      - chartsnap-app1.default.svc.cluster.local
  issuerRef:                                                      issuerRef:
    kind: Issuer                                                    kind: Issuer
    name: nameOfClusterIssuer                                       name: nameOfClusterIssuer
  secretName: app1-cert                                           secretName: app1-cert
---                                                             ---
# Source: app1/templates/tests/test-connection.yaml           <
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  name: \"chartsnap-app1-test-connection\"                      |   annotations:
                                                              >     helm.sh/hook: test
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
  annotations:                                                |     app.kubernetes.io/name: app1
    \"helm.sh/hook\": test                                      |     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1-test-connection
spec:                                                           spec:
  containers:                                                     containers:
    - name: wget                                              |     - args:
                                                              >         - chartsnap-app1:80
                                                              >       command:
                                                              >         - wget
      image: busybox                                                  image: busybox
      command: ['wget']                                       |       name: wget
      args: ['chartsnap-app1:80']                             <
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_hpa_enabled.yaml -n default) ../../example/app1/test/__snapshots__/test_hpa_enabled.snap']
SnapShot = """
---                                                           <
# Source: app1/templates/serviceaccount.yaml                  <
apiVersion: v1                                                  apiVersion: v1
                                                              > automountServiceAccountToken: true
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true                            |     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
---                                                             ---
# Source: app1/templates/cert.yaml                            <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   ca.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==
                                                              >   tls.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==
                                                              >   tls.key: IyMjRFlOQU1JQ19GSUVMRCMjIw==
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: app1-cert                                             <
  namespace: default                                          <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: app1-cert
                                                              >   namespace: default
type: kubernetes.io/tls                                         type: kubernetes.io/tls
data:                                                         <
  ca.crt: '###DYNAMIC_FIELD###'                               <
  tls.crt: '###DYNAMIC_FIELD###'                              <
  tls.key: '###DYNAMIC_FIELD###'                              <
---                                                             ---
# Source: app1/templates/service.yaml                         <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  type: ClusterIP                                             <
  ports:                                                          ports:
    - port: 80                                                |     - name: http
      targetPort: http                                        |       port: 80
      protocol: TCP                                                   protocol: TCP
      name: http                                              |       targetPort: http
  selector:                                                       selector:
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: app1
                                                              >   type: ClusterIP
---                                                             ---
# Source: app1/templates/deployment.yaml                      <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/name: app1                            <
      app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >       app.kubernetes.io/name: app1
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
        helm.sh/chart: app1-0.1.0                             <
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.16.0\"                   <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >         app.kubernetes.io/name: app1
                                                              >         app.kubernetes.io/version: 1.16.0
                                                              >         helm.sh/chart: app1-0.1.0
    spec:                                                           spec:
      serviceAccountName: chartsnap-app1                      <
      securityContext:                                        <
        {}                                                    <
      containers:                                                     containers:
        - name: app1                                          |         - image: nginx:1.16.0
          securityContext:                                    <
            {}                                                <
          image: \"nginx:1.16.0\"                               <
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
          ports:                                              <
            - name: http                                      <
              containerPort: 80                               <
              protocol: TCP                                   <
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
                                                              >           name: app1
                                                              >           ports:
                                                              >             - containerPort: 80
                                                              >               name: http
                                                              >               protocol: TCP
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources:                                          |           resources: {}
            {}                                                |           securityContext: {}
                                                              >       securityContext: {}
                                                              >       serviceAccountName: chartsnap-app1
---                                                             ---
# Source: app1/templates/hpa.yaml                             <
apiVersion: autoscaling/v2                                      apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler                                   kind: HorizontalPodAutoscaler
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  scaleTargetRef:                                             <
    apiVersion: apps/v1                                       <
    kind: Deployment                                          <
    name: chartsnap-app1                                      <
  minReplicas: 1                                              <
  maxReplicas: 10                                                 maxReplicas: 10
  metrics:                                                        metrics:
    - type: Resource                                          |     - resource:
      resource:                                               <
        name: cpu                                                       name: cpu
        target:                                                         target:
          type: Utilization                                   <
          averageUtilization: 65                                          averageUtilization: 65
                                                              >           type: Utilization
                                                              >       type: Resource
                                                              >   minReplicas: 1
                                                              >   scaleTargetRef:
                                                              >     apiVersion: apps/v1
                                                              >     kind: Deployment
                                                              >     name: chartsnap-app1
---                                                             ---
# Source: app1/templates/tests/test-connection.yaml           <
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  name: \"chartsnap-app1-test-connection\"                      |   annotations:
                                                              >     helm.sh/hook: test
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
  annotations:                                                |     app.kubernetes.io/name: app1
    \"helm.sh/hook\": test                                      |     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1-test-connection
spec:                                                           spec:
  containers:                                                     containers:
    - name: wget                                              |     - args:
                                                              >         - chartsnap-app1:80
                                                              >       command:
                                                              >         - wget
      image: busybox                                                  image: busybox
      command: ['wget']                                       |       name: wget
      args: ['chartsnap-app1:80']                             <
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_ingress_enabled.yaml -n default) ../../example/app1/test/__snapshots__/test_ingress_enabled.snap']
SnapShot = """
---                                                           <
# Source: app1/templates/serviceaccount.yaml                  <
apiVersion: v1                                                  apiVersion: v1
                                                              > automountServiceAccountToken: true
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true                            |     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
---                                                             ---
# Source: app1/templates/cert.yaml                            <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   ca.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==
                                                              >   tls.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==
                                                              >   tls.key: IyMjRFlOQU1JQ19GSUVMRCMjIw==
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: app1-cert                                             <
  namespace: default                                          <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: app1-cert
                                                              >   namespace: default
type: kubernetes.io/tls                                         type: kubernetes.io/tls
data:                                                         <
  ca.crt: '###DYNAMIC_FIELD###'                               <
  tls.crt: '###DYNAMIC_FIELD###'                              <
  tls.key: '###DYNAMIC_FIELD###'                              <
---                                                             ---
# Source: app1/templates/service.yaml                         <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  type: ClusterIP                                             <
  ports:                                                          ports:
    - port: 80                                                |     - name: http
      targetPort: http                                        |       port: 80
      protocol: TCP                                                   protocol: TCP
      name: http                                              |       targetPort: http
  selector:                                                       selector:
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: app1
                                                              >   type: ClusterIP
---                                                             ---
# Source: app1/templates/deployment.yaml                      <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: chartsnap-app1                                        <
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/name: app1                            <
      app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >       app.kubernetes.io/name: app1
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
        helm.sh/chart: app1-0.1.0                             <
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.16.0\"                   <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >         app.kubernetes.io/name: app1
                                                              >         app.kubernetes.io/version: 1.16.0
                                                              >         helm.sh/chart: app1-0.1.0
    spec:                                                           spec:
      serviceAccountName: chartsnap-app1                      <
      securityContext:                                        <
        {}                                                    <
      containers:                                                     containers:
        - name: app1                                          |         - image: nginx:1.16.0
          securityContext:                                    <
            {}                                                <
          image: \"nginx:1.16.0\"                               <
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
          ports:                                              <
            - name: http                                      <
              containerPort: 80                               <
              protocol: TCP                                   <
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
                                                              >           name: app1
                                                              >           ports:
                                                              >             - containerPort: 80
                                                              >               name: http
                                                              >               protocol: TCP
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources:                                          |           resources: {}
            {}                                                |           securityContext: {}
                                                              >       securityContext: {}
                                                              >       serviceAccountName: chartsnap-app1
---                                                             ---
# Source: app1/templates/ingress.yaml                         <
apiVersion: networking.k8s.io/v1                                apiVersion: networking.k8s.io/v1
kind: Ingress                                                   kind: Ingress
metadata:                                                       metadata:
  name: chartsnap-app1                                        |   annotations:
                                                              >     cert-manager.io/cluster-issuer: nameOfClusterIssuer
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
  annotations:                                                |     app.kubernetes.io/name: app1
    cert-manager.io/cluster-issuer: nameOfClusterIssuer       |     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1
spec:                                                           spec:
  ingressClassName: nginx                                         ingressClassName: nginx
  tls:                                                        <
    - hosts:                                                  <
        - \"chart-example.local\"                               <
      secretName: chart-example-tls                           <
  rules:                                                          rules:
    - host: \"chart-example.local\"                             |     - host: chart-example.local
      http:                                                           http:
        paths:                                                          paths:
          - path: /                                           |           - backend:
            pathType: ImplementationSpecific                  <
            backend:                                          <
              service:                                                        service:
                name: chartsnap-app1                                            name: chartsnap-app1
                port:                                                           port:
                  number: 80                                                      number: 80
                                                              >             path: /
                                                              >             pathType: ImplementationSpecific
                                                              >   tls:
                                                              >     - hosts:
                                                              >         - chart-example.local
                                                              >       secretName: chart-example-tls
---                                                             ---
# Source: app1/templates/tests/test-connection.yaml           <
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  name: \"chartsnap-app1-test-connection\"                      |   annotations:
                                                              >     helm.sh/hook: test
  labels:                                                         labels:
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
  annotations:                                                |     app.kubernetes.io/name: app1
    \"helm.sh/hook\": test                                      |     app.kubernetes.io/version: 1.16.0
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >   name: chartsnap-app1-test-connection
spec:                                                           spec:
  containers:                                                     containers:
    - name: wget                                              |     - args:
                                                              >         - chartsnap-app1:80
                                                              >       command:
                                                              >         - wget
      image: busybox                                                  image: busybox
      command: ['wget']                                       |       name: wget
      args: ['chartsnap-app1:80']                             <
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff <(helm template chartsnap ../../example/app1 -n default) ../../example/app1/__snapshots__/default.snap']
SnapShot = """
---                                                           | [default]
# Source: app1/templates/serviceaccount.yaml                  | SnapShot = \"\"\"
apiVersion: v1                                                | - object:
kind: ServiceAccount                                          |     apiVersion: apps/v1
metadata:                                                     |     kind: Deployment
  name: chartsnap-app1                                        <
  labels:                                                     <
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                        <
automountServiceAccountToken: true                            <
---                                                           <
# Source: app1/templates/cert.yaml                            <
apiVersion: v1                                                <
kind: Secret                                                  <
metadata:                                                     <
  name: app1-cert                                             <
  namespace: default                                          <
  labels:                                                     <
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                        <
type: kubernetes.io/tls                                       <
data:                                                         <
  ca.crt: '###DYNAMIC_FIELD###'                               <
  tls.crt: '###DYNAMIC_FIELD###'                              <
  tls.key: '###DYNAMIC_FIELD###'                              <
---                                                           <
# Source: app1/templates/service.yaml                         <
apiVersion: v1                                                <
kind: Service                                                 <
metadata:                                                     <
  name: chartsnap-app1                                        <
  labels:                                                     <
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                        <
spec:                                                         <
  type: ClusterIP                                             <
  ports:                                                      <
    - port: 80                                                <
      targetPort: http                                        <
      protocol: TCP                                           <
      name: http                                              <
  selector:                                                   <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
---                                                           <
# Source: app1/templates/deployment.yaml                      <
apiVersion: apps/v1                                           <
kind: Deployment                                              <
metadata:                                                     <
  name: chartsnap-app1                                        <
  labels:                                                     <
    helm.sh/chart: app1-0.1.0                                 <
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                        <
spec:                                                         <
  replicas: 1                                                 <
  selector:                                                   <
    matchLabels:                                              <
      app.kubernetes.io/name: app1                            <
      app.kubernetes.io/instance: chartsnap                   <
  template:                                                   <
    metadata:                                                       metadata:
      labels:                                                 |         labels:
        helm.sh/chart: app1-0.1.0                             |             app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/name: app1                          |             app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: chartsnap                 |             app.kubernetes.io/name: app1
        app.kubernetes.io/version: \"1.16.0\"                   |             app.kubernetes.io/version: 1.16.0
        app.kubernetes.io/managed-by: Helm                    |             helm.sh/chart: app1-0.1.0
                                                              >         name: chartsnap-app1
    spec:                                                           spec:
      serviceAccountName: chartsnap-app1                      |         replicas: 1
      securityContext:                                        |         selector:
        {}                                                    |             matchLabels:
      containers:                                             |                 app.kubernetes.io/instance: chartsnap
        - name: app1                                          |                 app.kubernetes.io/name: app1
          securityContext:                                    |         template:
            {}                                                |             metadata:
          image: \"nginx:1.16.0\"                               |                 labels:
          imagePullPolicy: IfNotPresent                       |                     app.kubernetes.io/instance: chartsnap
          ports:                                              |                     app.kubernetes.io/managed-by: Helm
                                                              >                     app.kubernetes.io/name: app1
                                                              >                     app.kubernetes.io/version: 1.16.0
                                                              >                     helm.sh/chart: app1-0.1.0
                                                              >             spec:
                                                              >                 containers:
                                                              >                     - image: nginx:1.16.0
                                                              >                       imagePullPolicy: IfNotPresent
                                                              >                       livenessProbe:
                                                              >                         httpGet:
                                                              >                             path: /
                                                              >                             port: http
                                                              >                       name: app1
                                                              >                       ports:
                                                              >                         - containerPort: 80
                                                              >                           name: http
                                                              >                           protocol: TCP
                                                              >                       readinessProbe:
                                                              >                         httpGet:
                                                              >                             path: /
                                                              >                             port: http
                                                              >                       resources: {}
                                                              >                       securityContext: {}
                                                              >                 securityContext: {}
                                                              >                 serviceAccountName: chartsnap-app1
                                                              > - object:
                                                              >     apiVersion: v1
                                                              >     kind: Pod
                                                              >     metadata:
                                                              >         annotations:
                                                              >             helm.sh/hook: test
                                                              >         labels:
                                                              >             app.kubernetes.io/instance: chartsnap
                                                              >             app.kubernetes.io/managed-by: Helm
                                                              >             app.kubernetes.io/name: app1
                                                              >             app.kubernetes.io/version: 1.16.0
                                                              >             helm.sh/chart: app1-0.1.0
                                                              >         name: chartsnap-app1-test-connection
                                                              >     spec:
                                                              >         containers:
                                                              >             - args:
                                                              >                 - chartsnap-app1:80
                                                              >               command:
                                                              >                 - wget
                                                              >               image: busybox
                                                              >               name: wget
                                                              >         restartPolicy: Never
                                                              > - object:
                                                              >     apiVersion: v1
                                                              >     data:
                                                              >         ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFR
                                                              >         tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURh
                                                              >         tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpN
                                                              >     kind: Secret
                                                              >     metadata:
                                                              >         labels:
                                                              >             app.kubernetes.io/instance: chartsnap
                                                              >             app.kubernetes.io/managed-by: Helm
                                                              >             app.kubernetes.io/name: app1
                                                              >             app.kubernetes.io/version: 1.16.0
                                                              >             helm.sh/chart: app1-0.1.0
                                                              >         name: app1-cert
                                                              >         namespace: default
                                                              >     type: kubernetes.io/tls
                                                              > - object:
                                                              >     apiVersion: v1
                                                              >     kind: Service
                                                              >     metadata:
                                                              >         labels:
                                                              >             app.kubernetes.io/instance: chartsnap
                                                              >             app.kubernetes.io/managed-by: Helm
                                                              >             app.kubernetes.io/name: app1
                                                              >             app.kubernetes.io/version: 1.16.0
                                                              >             helm.sh/chart: app1-0.1.0
                                                              >         name: chartsnap-app1
                                                              >     spec:
                                                              >         ports:
            - name: http                                                    - name: http
              containerPort: 80                               |               port: 80
              protocol: TCP                                                   protocol: TCP
          livenessProbe:                                      |               targetPort: http
            httpGet:                                          |         selector:
              path: /                                         |             app.kubernetes.io/instance: chartsnap
              port: http                                      |             app.kubernetes.io/name: app1
          readinessProbe:                                     |         type: ClusterIP
            httpGet:                                          | - object:
              path: /                                         |     apiVersion: v1
              port: http                                      |     automountServiceAccountToken: true
          resources:                                          |     kind: ServiceAccount
            {}                                                |     metadata:
---                                                           |         labels:
# Source: app1/templates/tests/test-connection.yaml           |             app.kubernetes.io/instance: chartsnap
apiVersion: v1                                                |             app.kubernetes.io/managed-by: Helm
kind: Pod                                                     |             app.kubernetes.io/name: app1
metadata:                                                     |             app.kubernetes.io/version: 1.16.0
  name: \"chartsnap-app1-test-connection\"                      |             helm.sh/chart: app1-0.1.0
  labels:                                                     |         name: chartsnap-app1
    helm.sh/chart: app1-0.1.0                                 | \"\"\"
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/version: \"1.16.0\"                       <
    app.kubernetes.io/managed-by: Helm                        <
  annotations:                                                <
    \"helm.sh/hook\": test                                      <
spec:                                                         <
  containers:                                                 <
    - name: wget                                              <
      image: busybox                                          <
      command: ['wget']                                       <
      args: ['chartsnap-app1:80']                             <
  restartPolicy: Never                                        <
"""

['sdiff <(helm template chartsnap cilium -f ../../example/remote/cilium.values.yaml -n kube-system --repo https://helm.cilium.io) ../../example/remote/__snapshots__/cilium.values.snap']
SnapShot = """
---                                                           <
# Source: cilium/templates/cilium-agent/serviceaccount.yaml   <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: \"cilium\"                                              |   name: cilium
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
# Source: cilium/templates/cilium-operator/serviceaccount.yam <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: \"cilium-operator\"                                     |   name: cilium-operator
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml   <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: \"hubble-relay\"                                        |   name: hubble-relay
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml      <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: \"hubble-ui\"                                           |   name: hubble-ui
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
# Source: cilium/templates/cilium-ca-secret.yaml              <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   ca.crt: '###DYNAMIC_FIELD###'
                                                              >   ca.key: '###DYNAMIC_FIELD###'
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: cilium-ca                                                 name: cilium-ca
  namespace: kube-system                                          namespace: kube-system
data:                                                         <
  ca.crt: '###DYNAMIC_FIELD###'                               <
  ca.key: '###DYNAMIC_FIELD###'                               <
---                                                             ---
# Source: cilium/templates/hubble/tls-helm/relay-client-secre <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   ca.crt: '###DYNAMIC_FIELD###'
                                                              >   tls.crt: '###DYNAMIC_FIELD###'
                                                              >   tls.key: '###DYNAMIC_FIELD###'
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: hubble-relay-client-certs                                 name: hubble-relay-client-certs
  namespace: kube-system                                          namespace: kube-system
type: kubernetes.io/tls                                         type: kubernetes.io/tls
                                                              > ---
                                                              > apiVersion: v1
data:                                                           data:
  ca.crt:  '###DYNAMIC_FIELD###'                              |   ca.crt: '###DYNAMIC_FIELD###'
  tls.crt: '###DYNAMIC_FIELD###'                                  tls.crt: '###DYNAMIC_FIELD###'
  tls.key: '###DYNAMIC_FIELD###'                                  tls.key: '###DYNAMIC_FIELD###'
---                                                           <
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml <
apiVersion: v1                                                <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: hubble-server-certs                                       name: hubble-server-certs
  namespace: kube-system                                          namespace: kube-system
type: kubernetes.io/tls                                         type: kubernetes.io/tls
data:                                                         <
  ca.crt:  '###DYNAMIC_FIELD###'                              <
  tls.crt: '###DYNAMIC_FIELD###'                              <
  tls.key: '###DYNAMIC_FIELD###'                              <
---                                                             ---
# Source: cilium/templates/cilium-configmap.yaml              <
apiVersion: v1                                                  apiVersion: v1
kind: ConfigMap                                               <
metadata:                                                     <
  name: cilium-config                                         <
  namespace: kube-system                                      <
data:                                                           data:
                                                              |   agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  # Identity allocation mode selects how identities are share |   arping-refresh-period: 30s
  # nodes by setting how they are stored. The options are \"cr |   auto-create-cilium-node-resource: \"true\"
  # - \"crd\" stores identities in kubernetes as CRDs (custom r |   auto-direct-node-routes: \"false\"
  #   These can be queried with:                              |   bpf-lb-acceleration: disabled
  #     kubectl get ciliumid                                  |   bpf-lb-external-clusterip: \"false\"
  # - \"kvstore\" stores identities in an etcd kvstore, that is |   bpf-lb-map-max: \"65536\"
  #   configured below. Cilium versions before 1.6 supported  |   bpf-lb-sock: \"false\"
  #   backend. Upgrades from these older cilium versions shou <
  #   the kvstore by commenting out the identity-allocation-m <
  #   setting it to \"kvstore\".                                <
  identity-allocation-mode: crd                               <
  identity-heartbeat-timeout: \"30m0s\"                         <
  identity-gc-interval: \"15m0s\"                               <
  cilium-endpoint-gc-interval: \"5m0s\"                         <
  nodes-gc-interval: \"5m0s\"                                   <
  skip-cnp-status-startup-clean: \"false\"                      <
                                                              <
  # If you want to run cilium in debug mode change this value <
  debug: \"false\"                                              <
  debug-verbose: \"\"                                           <
  # The agent can be put into the following three policy enfo <
  # default, always and never.                                <
  # https://docs.cilium.io/en/latest/security/policy/intro/#p <
  enable-policy: \"default\"                                    <
  policy-cidr-match-mode: \"\"                                  <
  # Port to expose Envoy metrics (e.g. \"9964\"). Envoy metrics <
  # field is not set.                                         <
  proxy-prometheus-port: \"9964\"                               <
  # If you want metrics enabled in cilium-operator, set the p <
  # which the Cilium Operator will have their metrics exposed <
  # NOTE that this will open the port on the nodes where Cili <
  # is scheduled.                                             <
  operator-prometheus-serve-addr: \":9963\"                     <
  enable-metrics: \"true\"                                      <
                                                              <
  # Enable IPv4 addressing. If enabled, all endpoints are all <
  # address.                                                  <
  enable-ipv4: \"true\"                                         <
                                                              <
  # Enable IPv6 addressing. If enabled, all endpoints are all <
  # address.                                                  <
  enable-ipv6: \"false\"                                        <
  # Users who wish to specify their own custom CNI configurat <
  # custom-cni-conf to \"true\", otherwise Cilium may overwrite <
  custom-cni-conf: \"false\"                                    <
  enable-bpf-clock-probe: \"false\"                             <
  # If you want cilium monitor to aggregate tracing for packe <
  # to \"low\", \"medium\", or \"maximum\". The higher the level, t <
  # that will be seen in monitor output.                      <
  monitor-aggregation: medium                                 <
                                                              <
  # The monitor aggregation interval governs the typical time <
  # notification events for each allowed connection.          <
  #                                                           <
  # Only effective when monitor aggregation is set to \"medium <
  monitor-aggregation-interval: \"5s\"                          <
                                                              <
  # The monitor aggregation flags determine which TCP flags w <
  # first observation, cause monitor notifications to be gene <
  #                                                           <
  # Only effective when monitor aggregation is set to \"medium <
  monitor-aggregation-flags: all                              <
  # Specifies the ratio (0.0-1.0] of total system memory to u <
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps <
  bpf-map-dynamic-size-ratio: \"0.0025\"                            bpf-map-dynamic-size-ratio: \"0.0025\"
  # bpf-policy-map-max specifies the maximum number of entrie <
  # policy map (per endpoint)                                 <
  bpf-policy-map-max: \"16384\"                                     bpf-policy-map-max: \"16384\"
  # bpf-lb-map-max specifies the maximum number of entries in |   bpf-root: /sys/fs/bpf
  # backend and affinity maps.                                |   cgroup-root: /run/cilium/cgroupv2
  bpf-lb-map-max: \"65536\"                                     |   cilium-endpoint-gc-interval: 5m0s
  bpf-lb-external-clusterip: \"false\"                          <
                                                              <
  # Pre-allocation of map entries allows per-packet latency t <
  # the expense of up-front memory allocation for the entries <
  # default value below will minimize memory usage in the def <
  # users who are sensitive to latency may consider setting t <
  #                                                           <
  # This option was introduced in Cilium 1.4. Cilium 1.3 and  <
  # this option and behave as though it is set to \"true\".     <
  #                                                           <
  # If this value is modified, then during the next Cilium st <
  # of existing endpoints and tracking of ongoing connections <
  # As a result, reply packets may be dropped and the load-ba <
  # for established connections may change.                   <
  #                                                           <
  # If this option is set to \"false\" during an upgrade from 1 <
  # 1.4 or later, then it may cause one-time disruptions duri <
  preallocate-bpf-maps: \"false\"                               <
                                                              <
  # Regular expression matching compatible Istio sidecar isti <
  # container image names                                     <
  sidecar-istio-proxy-image: \"cilium/istio_proxy\"             <
                                                              <
  # Name of the cluster. Only relevant when building a mesh o <
  cluster-name: default                                       <
  # Unique ID of the cluster. Must be unique across all conne <
  # in the range of 1 and 255. Only relevant when building a  <
  cluster-id: \"0\"                                                 cluster-id: \"0\"
                                                              |   cluster-name: default
  # Encapsulation mode for communication between nodes        |   cni-exclusive: \"true\"
  # Possible values:                                          |   cni-log-file: /var/run/cilium/cilium-cni.log
  #   - disabled                                              |   custom-cni-conf: \"false\"
  #   - vxlan (default)                                       |   debug: \"false\"
  #   - geneve                                                |   debug-verbose: \"\"
  routing-mode: \"native\"                                      |   dnsproxy-enable-transparent-mode: \"true\"
  service-no-backend-response: \"reject\"                       <
  enable-endpoint-routes: \"true\"                              <
  auto-create-cilium-node-resource: \"true\"                    <
  update-ec2-adapter-limit-via-api: \"true\"                    <
  ec2-api-endpoint: \"\"                                            ec2-api-endpoint: \"\"
  eni-tags: \"{}\"                                              |   egress-gateway-reconciliation-trigger-interval: 1s
                                                              |   egress-masquerade-interfaces: eth0
                                                              |   enable-auto-protect-node-port-range: \"true\"
  # Enables L7 proxy for L7 policy enforcement and visibility |   enable-bgp-control-plane: \"false\"
  enable-l7-proxy: \"true\"                                     |   enable-bpf-clock-probe: \"false\"
                                                              |   enable-endpoint-health-checking: \"true\"
  enable-ipv4-masquerade: \"true\"                              |   enable-endpoint-routes: \"true\"
                                                              >   enable-external-ips: \"false\"
                                                              >   enable-health-check-loadbalancer-ip: \"false\"
                                                              >   enable-health-check-nodeport: \"true\"
                                                              >   enable-health-checking: \"true\"
                                                              >   enable-host-port: \"false\"
                                                              >   enable-hubble: \"true\"
                                                              >   enable-ipv4: \"true\"
  enable-ipv4-big-tcp: \"false\"                                    enable-ipv4-big-tcp: \"false\"
                                                              >   enable-ipv4-masquerade: \"true\"
                                                              >   enable-ipv6: \"false\"
  enable-ipv6-big-tcp: \"false\"                                    enable-ipv6-big-tcp: \"false\"
  enable-ipv6-masquerade: \"true\"                                  enable-ipv6-masquerade: \"true\"
  enable-masquerade-to-route-source: \"false\"                  |   enable-k8s-networkpolicy: \"true\"
  egress-masquerade-interfaces: eth0                          |   enable-k8s-terminating-endpoint: \"true\"
                                                              |   enable-l2-neigh-discovery: \"true\"
  enable-xt-socket-fallback: \"true\"                           |   enable-l7-proxy: \"true\"
  install-no-conntrack-iptables-rules: \"false\"                <
                                                              <
  auto-direct-node-routes: \"false\"                            <
  enable-local-redirect-policy: \"false\"                           enable-local-redirect-policy: \"false\"
                                                              |   enable-masquerade-to-route-source: \"false\"
  kube-proxy-replacement: \"false\"                             |   enable-metrics: \"true\"
  kube-proxy-replacement-healthz-bind-address: \"\"             <
  bpf-lb-sock: \"false\"                                        <
  enable-host-port: \"false\"                                   <
  enable-external-ips: \"false\"                                <
  enable-node-port: \"false\"                                       enable-node-port: \"false\"
  enable-health-check-nodeport: \"true\"                        |   enable-policy: default
  enable-health-check-loadbalancer-ip: \"false\"                |   enable-remote-node-identity: \"true\"
  node-port-bind-protection: \"true\"                           |   enable-sctp: \"false\"
  enable-auto-protect-node-port-range: \"true\"                 <
  bpf-lb-acceleration: \"disabled\"                             <
  enable-svc-source-range-check: \"true\"                           enable-svc-source-range-check: \"true\"
  enable-l2-neigh-discovery: \"true\"                           |   enable-vtep: \"false\"
  arping-refresh-period: \"30s\"                                <
  enable-k8s-networkpolicy: \"true\"                            <
  # Tell the agent to generate and write a CNI configuration  <
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.co <
  cni-exclusive: \"true\"                                       <
  cni-log-file: \"/var/run/cilium/cilium-cni.log\"              <
  enable-endpoint-health-checking: \"true\"                     <
  enable-health-checking: \"true\"                              <
  enable-well-known-identities: \"false\"                           enable-well-known-identities: \"false\"
  enable-remote-node-identity: \"true\"                         |   enable-xt-socket-fallback: \"true\"
  synchronize-k8s-nodes: \"true\"                               |   eni-tags: '{}'
  operator-api-serve-addr: \"127.0.0.1:9234\"                   |   external-envoy-proxy: \"false\"
  # Enable Hubble gRPC service.                               <
  enable-hubble: \"true\"                                       <
  # UNIX domain socket for Hubble server to listen to.        <
  hubble-socket-path: \"/var/run/cilium/hubble.sock\"           <
  hubble-export-file-max-size-mb: \"10\"                        <
  hubble-export-file-max-backups: \"5\"                         <
  # An additional address for Hubble server to listen to (e.g <
  hubble-listen-address: \":4244\"                              <
  hubble-disable-tls: \"false\"                                     hubble-disable-tls: \"false\"
                                                              >   hubble-export-file-max-backups: \"5\"
                                                              >   hubble-export-file-max-size-mb: \"10\"
                                                              >   hubble-listen-address: :4244
                                                              >   hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt     hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key  <
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/clie     hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/clie
  ipam: \"eni\"                                                 |   hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  ipam-cilium-node-update-rate: \"15s\"                         |   identity-allocation-mode: crd
  egress-gateway-reconciliation-trigger-interval: \"1s\"        |   identity-gc-interval: 15m0s
  enable-vtep: \"false\"                                        |   identity-heartbeat-timeout: 30m0s
  vtep-endpoint: \"\"                                           |   install-no-conntrack-iptables-rules: \"false\"
  vtep-cidr: \"\"                                               |   ipam: eni
  vtep-mask: \"\"                                               |   ipam-cilium-node-update-rate: 15s
  vtep-mac: \"\"                                                <
  enable-bgp-control-plane: \"false\"                           <
  procfs: \"/host/proc\"                                        <
  bpf-root: \"/sys/fs/bpf\"                                     <
  cgroup-root: \"/run/cilium/cgroupv2\"                         <
  enable-k8s-terminating-endpoint: \"true\"                     <
  enable-sctp: \"false\"                                        <
                                                              <
  k8s-client-qps: \"10\"                                        <
  k8s-client-burst: \"20\"                                          k8s-client-burst: \"20\"
  remove-cilium-node-taints: \"true\"                           |   k8s-client-qps: \"10\"
  set-cilium-node-taints: \"true\"                              |   kube-proxy-replacement: \"false\"
  set-cilium-is-up-condition: \"true\"                          |   kube-proxy-replacement-healthz-bind-address: \"\"
  unmanaged-pod-watcher-interval: \"15\"                        |   max-connected-clusters: \"255\"
  # default DNS proxy to transparent mode in non-chaining mod <
  dnsproxy-enable-transparent-mode: \"true\"                    <
  tofqdns-dns-reject-response-code: \"refused\"                 <
  tofqdns-enable-dns-compression: \"true\"                      <
  tofqdns-endpoint-max-ip-per-hostname: \"50\"                  <
  tofqdns-idle-connection-grace-period: \"0s\"                  <
  tofqdns-max-deferred-connection-deletes: \"10000\"            <
  tofqdns-proxy-response-max-delay: \"100ms\"                   <
  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\" <
                                                              <
  mesh-auth-enabled: \"true\"                                       mesh-auth-enabled: \"true\"
                                                              >   mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: \"1024\"                                    mesh-auth-queue-size: \"1024\"
  mesh-auth-rotated-identities-queue-size: \"1024\"                 mesh-auth-rotated-identities-queue-size: \"1024\"
  mesh-auth-gc-interval: \"5m0s\"                               |   monitor-aggregation: medium
                                                              |   monitor-aggregation-flags: all
                                                              >   monitor-aggregation-interval: 5s
                                                              >   node-port-bind-protection: \"true\"
                                                              >   nodes-gc-interval: 5m0s
                                                              >   operator-api-serve-addr: 127.0.0.1:9234
                                                              >   operator-prometheus-serve-addr: :9963
                                                              >   policy-cidr-match-mode: \"\"
                                                              >   preallocate-bpf-maps: \"false\"
                                                              >   procfs: /host/proc
  proxy-connect-timeout: \"2\"                                      proxy-connect-timeout: \"2\"
  proxy-max-requests-per-connection: \"0\"                      <
  proxy-max-connection-duration-seconds: \"0\"                      proxy-max-connection-duration-seconds: \"0\"
                                                              |   proxy-max-requests-per-connection: \"0\"
  external-envoy-proxy: \"false\"                               |   proxy-prometheus-port: \"9964\"
  max-connected-clusters: \"255\"                               |   remove-cilium-node-taints: \"true\"
                                                              |   routing-mode: native
# Extra config allows adding arbitrary properties to the cili |   service-no-backend-response: reject
# By putting it at the end of the ConfigMap, it's also possib |   set-cilium-is-up-condition: \"true\"
                                                              >   set-cilium-node-taints: \"true\"
                                                              >   sidecar-istio-proxy-image: cilium/istio_proxy
                                                              >   skip-cnp-status-startup-clean: \"false\"
                                                              >   synchronize-k8s-nodes: \"true\"
                                                              >   tofqdns-dns-reject-response-code: refused
                                                              >   tofqdns-enable-dns-compression: \"true\"
                                                              >   tofqdns-endpoint-max-ip-per-hostname: \"50\"
                                                              >   tofqdns-idle-connection-grace-period: 0s
                                                              >   tofqdns-max-deferred-connection-deletes: \"10000\"
                                                              >   tofqdns-proxy-response-max-delay: 100ms
                                                              >   unmanaged-pod-watcher-interval: \"15\"
                                                              >   update-ec2-adapter-limit-via-api: \"true\"
                                                              >   vtep-cidr: \"\"
                                                              >   vtep-endpoint: \"\"
                                                              >   vtep-mac: \"\"
                                                              >   vtep-mask: \"\"
                                                              >   write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.co
                                                              > kind: ConfigMap
                                                              > metadata:
                                                              >   name: cilium-config
                                                              >   namespace: kube-system
---                                                             ---
# Source: cilium/templates/hubble-relay/configmap.yaml        <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   config.yaml: \"cluster-name: default\\npeer-service: \\\"hubble
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  name: hubble-relay-config                                       name: hubble-relay-config
  namespace: kube-system                                          namespace: kube-system
data:                                                         <
  config.yaml: |                                              <
    cluster-name: default                                     <
    peer-service: \"hubble-peer.kube-system.svc.cluster.local: <
    listen-address: :4245                                     <
    gops: true                                                <
    gops-port: \"9893\"                                         <
    dial-timeout:                                             <
    retry-timeout:                                            <
    sort-buffer-len-max:                                      <
    sort-buffer-drain-timeout:                                <
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/cl <
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/cli <
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hub <
    disable-server-tls: true                                  <
---                                                             ---
# Source: cilium/templates/hubble-ui/configmap.yaml           <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   nginx.conf: \"server {\\n    listen       8081;\\n    listen  
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  name: hubble-ui-nginx                                           name: hubble-ui-nginx
  namespace: kube-system                                          namespace: kube-system
data:                                                         <
  nginx.conf: \"server {\\n    listen       8081;\\n    listen   <
---                                                             ---
# Source: cilium/templates/cilium-agent/clusterrole.yaml      <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  name: cilium                                                <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium
rules:                                                          rules:
- apiGroups:                                                  |   - apiGroups:
  - networking.k8s.io                                         |       - networking.k8s.io
  resources:                                                  |     resources:
  - networkpolicies                                           |       - networkpolicies
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - discovery.k8s.io                                          |       - discovery.k8s.io
  resources:                                                  |     resources:
  - endpointslices                                            |       - endpointslices
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - namespaces                                                |       - namespaces
  - services                                                  |       - services
  - pods                                                      |       - pods
  - endpoints                                                 |       - endpoints
  - nodes                                                     |       - nodes
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - apiextensions.k8s.io                                      |       - apiextensions.k8s.io
  resources:                                                  |     resources:
  - customresourcedefinitions                                 |       - customresourcedefinitions
  verbs:                                                      |     verbs:
  - list                                                      |       - list
  - watch                                                     |       - watch
  # This is used when validating policies in preflight. This  |       - get
  # until we figure out how to avoid \"get\" inside the preflig |   - apiGroups:
  # should be removed ideally.                                |       - cilium.io
  - get                                                       |     resources:
- apiGroups:                                                  |       - ciliumloadbalancerippools
  - cilium.io                                                 |       - ciliumbgppeeringpolicies
  resources:                                                  |       - ciliumbgpnodeconfigs
  - ciliumloadbalancerippools                                 |       - ciliumbgpadvertisements
  - ciliumbgppeeringpolicies                                  |       - ciliumbgppeerconfigs
  - ciliumbgpnodeconfigs                                      |       - ciliumclusterwideenvoyconfigs
  - ciliumbgpadvertisements                                   |       - ciliumclusterwidenetworkpolicies
  - ciliumbgppeerconfigs                                      |       - ciliumegressgatewaypolicies
  - ciliumclusterwideenvoyconfigs                             |       - ciliumendpoints
  - ciliumclusterwidenetworkpolicies                          |       - ciliumendpointslices
  - ciliumegressgatewaypolicies                               |       - ciliumenvoyconfigs
  - ciliumendpoints                                           |       - ciliumidentities
  - ciliumendpointslices                                      |       - ciliumlocalredirectpolicies
  - ciliumenvoyconfigs                                        |       - ciliumnetworkpolicies
  - ciliumidentities                                          |       - ciliumnodes
  - ciliumlocalredirectpolicies                               |       - ciliumnodeconfigs
  - ciliumnetworkpolicies                                     |       - ciliumcidrgroups
  - ciliumnodes                                               |       - ciliuml2announcementpolicies
  - ciliumnodeconfigs                                         |       - ciliumpodippools
  - ciliumcidrgroups                                          |     verbs:
  - ciliuml2announcementpolicies                              |       - list
  - ciliumpodippools                                          |       - watch
  verbs:                                                      |   - apiGroups:
  - list                                                      |       - cilium.io
  - watch                                                     |     resources:
- apiGroups:                                                  |       - ciliumidentities
  - cilium.io                                                 |       - ciliumendpoints
  resources:                                                  |       - ciliumnodes
  - ciliumidentities                                          |     verbs:
  - ciliumendpoints                                           |       - create
  - ciliumnodes                                               |   - apiGroups:
  verbs:                                                      |       - cilium.io
  - create                                                    |     resources:
- apiGroups:                                                  |       - ciliumidentities
  - cilium.io                                                 |     verbs:
  # To synchronize garbage collection of such resources       |       - update
  resources:                                                  |   - apiGroups:
  - ciliumidentities                                          |       - cilium.io
  verbs:                                                      |     resources:
  - update                                                    |       - ciliumendpoints
- apiGroups:                                                  |     verbs:
  - cilium.io                                                 |       - delete
  resources:                                                  |       - get
  - ciliumendpoints                                           |   - apiGroups:
  verbs:                                                      |       - cilium.io
  - delete                                                    |     resources:
  - get                                                       |       - ciliumnodes
- apiGroups:                                                  |       - ciliumnodes/status
  - cilium.io                                                 |     verbs:
  resources:                                                  |       - get
  - ciliumnodes                                               |       - update
  - ciliumnodes/status                                        |   - apiGroups:
  verbs:                                                      |       - cilium.io
  - get                                                       |     resources:
  - update                                                    |       - ciliumnetworkpolicies/status
- apiGroups:                                                  |       - ciliumclusterwidenetworkpolicies/status
  - cilium.io                                                 |       - ciliumendpoints/status
  resources:                                                  |       - ciliumendpoints
  - ciliumnetworkpolicies/status                              |       - ciliuml2announcementpolicies/status
  - ciliumclusterwidenetworkpolicies/status                   |       - ciliumbgpnodeconfigs/status
  - ciliumendpoints/status                                    |     verbs:
  - ciliumendpoints                                           |       - patch
  - ciliuml2announcementpolicies/status                       <
  - ciliumbgpnodeconfigs/status                               <
  verbs:                                                      <
  - patch                                                     <
---                                                             ---
# Source: cilium/templates/cilium-operator/clusterrole.yaml   <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  name: cilium-operator                                       <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium-operator
rules:                                                          rules:
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - pods                                                      |       - pods
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
  # to automatically delete [core|kube]dns pods so that are s |       - delete
  # managed by Cilium                                         |   - apiGroups:
  - delete                                                    |       - \"\"
- apiGroups:                                                  |     resources:
  - \"\"                                                        |       - nodes
  resources:                                                  |     verbs:
  - nodes                                                     |       - list
  verbs:                                                      |       - watch
  - list                                                      |   - apiGroups:
  - watch                                                     |       - \"\"
- apiGroups:                                                  |     resources:
  - \"\"                                                        |       - nodes
  resources:                                                  |       - nodes/status
  # To remove node taints                                     |     verbs:
  - nodes                                                     |       - patch
  # To set NetworkUnavailable false on startup                |   - apiGroups:
  - nodes/status                                              |       - discovery.k8s.io
  verbs:                                                      |     resources:
  - patch                                                     |       - endpointslices
- apiGroups:                                                  |     verbs:
  - discovery.k8s.io                                          |       - get
  resources:                                                  |       - list
  - endpointslices                                            |       - watch
  verbs:                                                      |   - apiGroups:
  - get                                                       |       - \"\"
  - list                                                      |     resources:
  - watch                                                     |       - services/status
- apiGroups:                                                  |     verbs:
  - \"\"                                                        |       - update
  resources:                                                  |       - patch
  # to perform LB IP allocation for BGP                       |   - apiGroups:
  - services/status                                           |       - \"\"
  verbs:                                                      |     resources:
  - update                                                    |       - namespaces
  - patch                                                     |     verbs:
- apiGroups:                                                  |       - get
  - \"\"                                                        |       - list
  resources:                                                  |       - watch
  # to check apiserver connectivity                           |   - apiGroups:
  - namespaces                                                |       - \"\"
  verbs:                                                      |     resources:
  - get                                                       |       - services
  - list                                                      |       - endpoints
  - watch                                                     |     verbs:
- apiGroups:                                                  |       - get
  - \"\"                                                        |       - list
  resources:                                                  |       - watch
  # to perform the translation of a CNP that contains `ToGrou |   - apiGroups:
  - services                                                  |       - cilium.io
  - endpoints                                                 |     resources:
  verbs:                                                      |       - ciliumnetworkpolicies
  - get                                                       |       - ciliumclusterwidenetworkpolicies
  - list                                                      |     verbs:
  - watch                                                     |       - create
- apiGroups:                                                  |       - update
  - cilium.io                                                 |       - deletecollection
  resources:                                                  |       - patch
  - ciliumnetworkpolicies                                     |       - get
  - ciliumclusterwidenetworkpolicies                          |       - list
  verbs:                                                      |       - watch
  # Create auto-generated CNPs and CCNPs from Policies that h |   - apiGroups:
  - create                                                    |       - cilium.io
  - update                                                    |     resources:
  - deletecollection                                          |       - ciliumnetworkpolicies/status
  # To update the status of the CNPs and CCNPs                |       - ciliumclusterwidenetworkpolicies/status
  - patch                                                     |     verbs:
  - get                                                       |       - patch
  - list                                                      |       - update
  - watch                                                     |   - apiGroups:
- apiGroups:                                                  |       - cilium.io
  - cilium.io                                                 |     resources:
  resources:                                                  |       - ciliumendpoints
  - ciliumnetworkpolicies/status                              |       - ciliumidentities
  - ciliumclusterwidenetworkpolicies/status                   |     verbs:
  verbs:                                                      |       - delete
  # Update the auto-generated CNPs and CCNPs status.          |       - list
  - patch                                                     |       - watch
  - update                                                    |   - apiGroups:
- apiGroups:                                                  |       - cilium.io
  - cilium.io                                                 |     resources:
  resources:                                                  |       - ciliumidentities
  - ciliumendpoints                                           |     verbs:
  - ciliumidentities                                          |       - update
  verbs:                                                      |   - apiGroups:
  # To perform garbage collection of such resources           |       - cilium.io
  - delete                                                    |     resources:
  - list                                                      |       - ciliumnodes
  - watch                                                     |     verbs:
- apiGroups:                                                  |       - create
  - cilium.io                                                 |       - update
  resources:                                                  |       - get
  - ciliumidentities                                          |       - list
  verbs:                                                      |       - watch
  # To synchronize garbage collection of such resources       |       - delete
  - update                                                    |   - apiGroups:
- apiGroups:                                                  |       - cilium.io
  - cilium.io                                                 |     resources:
  resources:                                                  |       - ciliumnodes/status
  - ciliumnodes                                               |     verbs:
  verbs:                                                      |       - update
  - create                                                    |   - apiGroups:
  - update                                                    |       - cilium.io
  - get                                                       |     resources:
  - list                                                      |       - ciliumendpointslices
  - watch                                                     |       - ciliumenvoyconfigs
    # To perform CiliumNode garbage collector                 |       - ciliumbgppeerconfigs
  - delete                                                    |       - ciliumbgpadvertisements
- apiGroups:                                                  |       - ciliumbgpnodeconfigs
  - cilium.io                                                 |     verbs:
  resources:                                                  |       - create
  - ciliumnodes/status                                        |       - update
  verbs:                                                      |       - get
  - update                                                    |       - list
- apiGroups:                                                  |       - watch
  - cilium.io                                                 |       - delete
  resources:                                                  |       - patch
  - ciliumendpointslices                                      |   - apiGroups:
  - ciliumenvoyconfigs                                        |       - apiextensions.k8s.io
  - ciliumbgppeerconfigs                                      |     resources:
  - ciliumbgpadvertisements                                   |       - customresourcedefinitions
  - ciliumbgpnodeconfigs                                      |     verbs:
  verbs:                                                      |       - create
  - create                                                    |       - get
  - update                                                    |       - list
  - get                                                       |       - watch
  - list                                                      |   - apiGroups:
  - watch                                                     |       - apiextensions.k8s.io
  - delete                                                    |     resourceNames:
  - patch                                                     |       - ciliumloadbalancerippools.cilium.io
- apiGroups:                                                  |       - ciliumbgppeeringpolicies.cilium.io
  - apiextensions.k8s.io                                      |       - ciliumbgpclusterconfigs.cilium.io
  resources:                                                  |       - ciliumbgppeerconfigs.cilium.io
  - customresourcedefinitions                                 |       - ciliumbgpadvertisements.cilium.io
  verbs:                                                      |       - ciliumbgpnodeconfigs.cilium.io
  - create                                                    |       - ciliumbgpnodeconfigoverrides.cilium.io
  - get                                                       |       - ciliumclusterwideenvoyconfigs.cilium.io
  - list                                                      |       - ciliumclusterwidenetworkpolicies.cilium.io
  - watch                                                     |       - ciliumegressgatewaypolicies.cilium.io
- apiGroups:                                                  |       - ciliumendpoints.cilium.io
  - apiextensions.k8s.io                                      |       - ciliumendpointslices.cilium.io
  resources:                                                  |       - ciliumenvoyconfigs.cilium.io
  - customresourcedefinitions                                 |       - ciliumexternalworkloads.cilium.io
  verbs:                                                      |       - ciliumidentities.cilium.io
  - update                                                    |       - ciliumlocalredirectpolicies.cilium.io
  resourceNames:                                              |       - ciliumnetworkpolicies.cilium.io
  - ciliumloadbalancerippools.cilium.io                       |       - ciliumnodes.cilium.io
  - ciliumbgppeeringpolicies.cilium.io                        |       - ciliumnodeconfigs.cilium.io
  - ciliumbgpclusterconfigs.cilium.io                         |       - ciliumcidrgroups.cilium.io
  - ciliumbgppeerconfigs.cilium.io                            |       - ciliuml2announcementpolicies.cilium.io
  - ciliumbgpadvertisements.cilium.io                         |       - ciliumpodippools.cilium.io
  - ciliumbgpnodeconfigs.cilium.io                            |     resources:
  - ciliumbgpnodeconfigoverrides.cilium.io                    |       - customresourcedefinitions
  - ciliumclusterwideenvoyconfigs.cilium.io                   |     verbs:
  - ciliumclusterwidenetworkpolicies.cilium.io                |       - update
  - ciliumegressgatewaypolicies.cilium.io                     |   - apiGroups:
  - ciliumendpoints.cilium.io                                 |       - cilium.io
  - ciliumendpointslices.cilium.io                            |     resources:
  - ciliumenvoyconfigs.cilium.io                              |       - ciliumloadbalancerippools
  - ciliumexternalworkloads.cilium.io                         |       - ciliumpodippools
  - ciliumidentities.cilium.io                                |       - ciliumbgpclusterconfigs
  - ciliumlocalredirectpolicies.cilium.io                     |       - ciliumbgpnodeconfigoverrides
  - ciliumnetworkpolicies.cilium.io                           |     verbs:
  - ciliumnodes.cilium.io                                     |       - get
  - ciliumnodeconfigs.cilium.io                               |       - list
  - ciliumcidrgroups.cilium.io                                |       - watch
  - ciliuml2announcementpolicies.cilium.io                    |   - apiGroups:
  - ciliumpodippools.cilium.io                                |       - cilium.io
- apiGroups:                                                  |     resources:
  - cilium.io                                                 |       - ciliumpodippools
  resources:                                                  |     verbs:
  - ciliumloadbalancerippools                                 |       - create
  - ciliumpodippools                                          |   - apiGroups:
  - ciliumbgpclusterconfigs                                   |       - cilium.io
  - ciliumbgpnodeconfigoverrides                              |     resources:
  verbs:                                                      |       - ciliumloadbalancerippools/status
  - get                                                       |     verbs:
  - list                                                      |       - patch
  - watch                                                     |   - apiGroups:
- apiGroups:                                                  |       - coordination.k8s.io
    - cilium.io                                               |     resources:
  resources:                                                  |       - leases
    - ciliumpodippools                                        |     verbs:
  verbs:                                                      |       - create
    - create                                                  |       - get
- apiGroups:                                                  |       - update
  - cilium.io                                                 <
  resources:                                                  <
  - ciliumloadbalancerippools/status                          <
  verbs:                                                      <
  - patch                                                     <
# For cilium-operator running in HA mode.                     <
#                                                             <
# Cilium operator running in HA mode requires the use of Reso <
# between multiple running instances.                         <
# The preferred way of doing this is to use LeasesResourceLoc <
# common and fewer objects in the cluster watch \"all Leases\". <
- apiGroups:                                                  <
  - coordination.k8s.io                                       <
  resources:                                                  <
  - leases                                                    <
  verbs:                                                      <
  - create                                                    <
  - get                                                       <
  - update                                                    <
---                                                             ---
# Source: cilium/templates/hubble-ui/clusterrole.yaml         <
kind: ClusterRole                                             <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
                                                              > kind: ClusterRole
metadata:                                                       metadata:
  name: hubble-ui                                             <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: hubble-ui
rules:                                                          rules:
- apiGroups:                                                  |   - apiGroups:
  - networking.k8s.io                                         |       - networking.k8s.io
  resources:                                                  |     resources:
  - networkpolicies                                           |       - networkpolicies
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - componentstatuses                                         |       - componentstatuses
  - endpoints                                                 |       - endpoints
  - namespaces                                                |       - namespaces
  - nodes                                                     |       - nodes
  - pods                                                      |       - pods
  - services                                                  |       - services
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - apiextensions.k8s.io                                      |       - apiextensions.k8s.io
  resources:                                                  |     resources:
  - customresourcedefinitions                                 |       - customresourcedefinitions
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - cilium.io                                                 |       - cilium.io
  resources:                                                  |     resources:
  - \"*\"                                                       |       - '*'
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
---                                                             ---
# Source: cilium/templates/cilium-agent/clusterrolebinding.ya <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  name: cilium                                                <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: cilium                                                    name: cilium
subjects:                                                       subjects:
- kind: ServiceAccount                                        |   - kind: ServiceAccount
  name: \"cilium\"                                              |     name: cilium
  namespace: kube-system                                      |     namespace: kube-system
---                                                             ---
# Source: cilium/templates/cilium-operator/clusterrolebinding <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  name: cilium-operator                                       <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium-operator
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: cilium-operator                                           name: cilium-operator
subjects:                                                       subjects:
- kind: ServiceAccount                                        |   - kind: ServiceAccount
  name: \"cilium-operator\"                                     |     name: cilium-operator
  namespace: kube-system                                      |     namespace: kube-system
---                                                             ---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml  <
kind: ClusterRoleBinding                                      <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
                                                              > kind: ClusterRoleBinding
metadata:                                                       metadata:
  name: hubble-ui                                             <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: hubble-ui
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: hubble-ui                                                 name: hubble-ui
subjects:                                                       subjects:
- kind: ServiceAccount                                        |   - kind: ServiceAccount
  name: \"hubble-ui\"                                           |     name: hubble-ui
  namespace: kube-system                                      |     namespace: kube-system
---                                                             ---
# Source: cilium/templates/cilium-agent/role.yaml             <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
  name: cilium-config-agent                                   <
  namespace: kube-system                                      <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium-config-agent
                                                              >   namespace: kube-system
rules:                                                          rules:
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - configmaps                                                |       - configmaps
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
---                                                             ---
# Source: cilium/templates/cilium-agent/rolebinding.yaml      <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
  name: cilium-config-agent                                   <
  namespace: kube-system                                      <
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >   name: cilium-config-agent
                                                              >   namespace: kube-system
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: cilium-config-agent                                       name: cilium-config-agent
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: \"cilium\"                                            |     name: cilium
    namespace: kube-system                                          namespace: kube-system
---                                                             ---
# Source: cilium/templates/hubble-relay/service.yaml          <
kind: Service                                                 <
apiVersion: v1                                                  apiVersion: v1
                                                              > kind: Service
metadata:                                                       metadata:
  name: hubble-relay                                          <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: hubble-relay                                     <
    app.kubernetes.io/name: hubble-relay                            app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >     k8s-app: hubble-relay
                                                              >   name: hubble-relay
                                                              >   namespace: kube-system
spec:                                                           spec:
  type: \"ClusterIP\"                                           |   ports:
                                                              >     - port: 80
                                                              >       protocol: TCP
                                                              >       targetPort: 4245
  selector:                                                       selector:
    k8s-app: hubble-relay                                           k8s-app: hubble-relay
  ports:                                                      |   type: ClusterIP
  - protocol: TCP                                             <
    port: 80                                                  <
    targetPort: 4245                                          <
---                                                             ---
# Source: cilium/templates/hubble-ui/service.yaml             <
kind: Service                                                 <
apiVersion: v1                                                  apiVersion: v1
                                                              > kind: Service
metadata:                                                       metadata:
  name: hubble-ui                                             <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: hubble-ui                                        <
    app.kubernetes.io/name: hubble-ui                               app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
spec:                                                         <
  type: \"ClusterIP\"                                           <
  selector:                                                   <
    k8s-app: hubble-ui                                              k8s-app: hubble-ui
                                                              >   name: hubble-ui
                                                              >   namespace: kube-system
                                                              > spec:
  ports:                                                          ports:
    - name: http                                                    - name: http
      port: 80                                                        port: 80
      targetPort: 8081                                                targetPort: 8081
                                                              >   selector:
                                                              >     k8s-app: hubble-ui
                                                              >   type: ClusterIP
---                                                             ---
# Source: cilium/templates/hubble/peer-service.yaml           <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  name: hubble-peer                                           <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: cilium                                           <
    app.kubernetes.io/part-of: cilium                         <
    app.kubernetes.io/name: hubble-peer                             app.kubernetes.io/name: hubble-peer
                                                              >     app.kubernetes.io/part-of: cilium
                                                              >     k8s-app: cilium
                                                              >   name: hubble-peer
                                                              >   namespace: kube-system
spec:                                                           spec:
                                                              >   internalTrafficPolicy: Local
                                                              >   ports:
                                                              >     - name: peer-service
                                                              >       port: 443
                                                              >       protocol: TCP
                                                              >       targetPort: 4244
  selector:                                                       selector:
    k8s-app: cilium                                                 k8s-app: cilium
  ports:                                                      <
  - name: peer-service                                        <
    port: 443                                                 <
    protocol: TCP                                             <
    targetPort: 4244                                          <
  internalTrafficPolicy: Local                                <
---                                                             ---
# Source: cilium/templates/cilium-agent/daemonset.yaml        <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: DaemonSet                                                 kind: DaemonSet
metadata:                                                       metadata:
  name: cilium                                                <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: cilium                                           <
    app.kubernetes.io/part-of: cilium                         <
    app.kubernetes.io/name: cilium-agent                            app.kubernetes.io/name: cilium-agent
                                                              >     app.kubernetes.io/part-of: cilium
                                                              >     k8s-app: cilium
                                                              >   name: cilium
                                                              >   namespace: kube-system
spec:                                                           spec:
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      k8s-app: cilium                                                 k8s-app: cilium
  updateStrategy:                                             <
    rollingUpdate:                                            <
      maxUnavailable: 2                                       <
    type: RollingUpdate                                       <
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                                    annotations:
        # Set app AppArmor's profile to \"unconfined\". The val |         container.apparmor.security.beta.kubernetes.io/apply-
        # can be modified as long users know which profiles t |         container.apparmor.security.beta.kubernetes.io/cilium
        # in AppArmor.                                        |         container.apparmor.security.beta.kubernetes.io/clean-
        container.apparmor.security.beta.kubernetes.io/cilium |         container.apparmor.security.beta.kubernetes.io/mount-
        container.apparmor.security.beta.kubernetes.io/clean- <
        container.apparmor.security.beta.kubernetes.io/mount- <
        container.apparmor.security.beta.kubernetes.io/apply- <
      labels:                                                         labels:
        k8s-app: cilium                                       <
        app.kubernetes.io/name: cilium-agent                            app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >         k8s-app: cilium
    spec:                                                           spec:
      containers:                                             <
      - name: cilium-agent                                    <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        command:                                              <
        - cilium-agent                                        <
        args:                                                 <
        - --config-dir=/tmp/cilium/config-map                 <
        startupProbe:                                         <
          httpGet:                                            <
            host: \"127.0.0.1\"                                 <
            path: /healthz                                    <
            port: 9879                                        <
            scheme: HTTP                                      <
            httpHeaders:                                      <
            - name: \"brief\"                                   <
              value: \"true\"                                   <
          failureThreshold: 105                               <
          periodSeconds: 2                                    <
          successThreshold: 1                                 <
          initialDelaySeconds: 5                              <
        livenessProbe:                                        <
          httpGet:                                            <
            host: \"127.0.0.1\"                                 <
            path: /healthz                                    <
            port: 9879                                        <
            scheme: HTTP                                      <
            httpHeaders:                                      <
            - name: \"brief\"                                   <
              value: \"true\"                                   <
          periodSeconds: 30                                   <
          successThreshold: 1                                 <
          failureThreshold: 10                                <
          timeoutSeconds: 5                                   <
        readinessProbe:                                       <
          httpGet:                                            <
            host: \"127.0.0.1\"                                 <
            path: /healthz                                    <
            port: 9879                                        <
            scheme: HTTP                                      <
            httpHeaders:                                      <
            - name: \"brief\"                                   <
              value: \"true\"                                   <
          periodSeconds: 30                                   <
          successThreshold: 1                                 <
          failureThreshold: 3                                 <
          timeoutSeconds: 5                                   <
        env:                                                  <
        - name: K8S_NODE_NAME                                 <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: spec.nodeName                        <
        - name: CILIUM_K8S_NAMESPACE                          <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: metadata.namespace                   <
        - name: CILIUM_CLUSTERMESH_CONFIG                     <
          value: /var/lib/cilium/clustermesh/                 <
        - name: GOMEMLIMIT                                    <
          valueFrom:                                          <
            resourceFieldRef:                                 <
              resource: limits.memory                         <
              divisor: '1'                                    <
        lifecycle:                                            <
          postStart:                                          <
            exec:                                             <
              command:                                        <
              - \"bash\"                                        <
              - \"-c\"                                          <
              - |                                             <
                    set -o errexit                            <
                    set -o pipefail                           <
                    set -o nounset                            <
                                                              <
                    # When running in AWS ENI mode, it's like <
                    # had a chance to install SNAT iptables r <
                    # in dropped traffic, so we should attemp <
                    # We do it using a 'postStart' hook since <
                    # for nodes which might have already been <
                    # have dangling rules. This is safe becau <
                    # dependencies on anything that is part o <
                    # itself, and can be safely run multiple  <
                    # case of a restart).                     <
                    if [[ \"$(iptables-save | grep -E -c 'AWS- <
                    then                                      <
                        echo 'Deleting iptables rules created <
                        iptables-save | grep -E -v 'AWS-SNAT- <
                    fi                                        <
                    echo 'Done!'                              <
                                                              <
          preStop:                                            <
            exec:                                             <
              command:                                        <
              - /cni-uninstall.sh                             <
        securityContext:                                      <
          seLinuxOptions:                                     <
            level: s0                                         <
            type: spc_t                                       <
          capabilities:                                       <
            add:                                              <
              - CHOWN                                         <
              - KILL                                          <
              - NET_ADMIN                                     <
              - NET_RAW                                       <
              - IPC_LOCK                                      <
              - SYS_MODULE                                    <
              - SYS_ADMIN                                     <
              - SYS_RESOURCE                                  <
              - DAC_OVERRIDE                                  <
              - FOWNER                                        <
              - SETGID                                        <
              - SETUID                                        <
            drop:                                             <
              - ALL                                           <
        terminationMessagePolicy: FallbackToLogsOnError       <
        volumeMounts:                                         <
        # Unprivileged containers need to mount /proc/sys/net <
        # to have write access                                <
        - mountPath: /host/proc/sys/net                       <
          name: host-proc-sys-net                             <
        # Unprivileged containers need to mount /proc/sys/ker <
        # to have write access                                <
        - mountPath: /host/proc/sys/kernel                    <
          name: host-proc-sys-kernel                          <
        - name: bpf-maps                                      <
          mountPath: /sys/fs/bpf                              <
          # Unprivileged containers can't set mount propagati <
          # in this case we will mount the bpf fs from an ini <
          # is privileged and set the mount propagation from  <
          # in Cilium.                                        <
          mountPropagation: HostToContainer                   <
        - name: cilium-run                                    <
          mountPath: /var/run/cilium                          <
        - name: etc-cni-netd                                  <
          mountPath: /host/etc/cni/net.d                      <
        - name: clustermesh-secrets                           <
          mountPath: /var/lib/cilium/clustermesh              <
          readOnly: true                                      <
          # Needed to be able to load kernel modules          <
        - name: lib-modules                                   <
          mountPath: /lib/modules                             <
          readOnly: true                                      <
        - name: xtables-lock                                  <
          mountPath: /run/xtables.lock                        <
        - name: hubble-tls                                    <
          mountPath: /var/lib/cilium/tls/hubble               <
          readOnly: true                                      <
        - name: tmp                                           <
          mountPath: /tmp                                     <
      initContainers:                                         <
      - name: config                                          <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        command:                                              <
        - cilium-dbg                                          <
        - build-config                                        <
        env:                                                  <
        - name: K8S_NODE_NAME                                 <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: spec.nodeName                        <
        - name: CILIUM_K8S_NAMESPACE                          <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: metadata.namespace                   <
        volumeMounts:                                         <
        - name: tmp                                           <
          mountPath: /tmp                                     <
        terminationMessagePolicy: FallbackToLogsOnError       <
      # Required to mount cgroup2 filesystem on the underlyin <
      # We use nsenter command with host's cgroup and mount n <
      - name: mount-cgroup                                    <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        env:                                                  <
        - name: CGROUP_ROOT                                   <
          value: /run/cilium/cgroupv2                         <
        - name: BIN_PATH                                      <
          value: /opt/cni/bin                                 <
        command:                                              <
        - sh                                                  <
        - -ec                                                 <
        # The statically linked Go program binary is invoked  <
        # dependency on utilities like sh and mount that can  <
        # distros installed on the underlying host. Copy the  <
        # same directory where we install cilium cni plugin s <
        # are available.                                      <
        - |                                                   <
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;     <
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hos <
          rm /hostbin/cilium-mount                            <
        volumeMounts:                                         <
        - name: hostproc                                      <
          mountPath: /hostproc                                <
        - name: cni-path                                      <
          mountPath: /hostbin                                 <
        terminationMessagePolicy: FallbackToLogsOnError       <
        securityContext:                                      <
          seLinuxOptions:                                     <
            level: s0                                         <
            type: spc_t                                       <
          capabilities:                                       <
            add:                                              <
              - SYS_ADMIN                                     <
              - SYS_CHROOT                                    <
              - SYS_PTRACE                                    <
            drop:                                             <
              - ALL                                           <
      - name: apply-sysctl-overwrites                         <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        env:                                                  <
        - name: BIN_PATH                                      <
          value: /opt/cni/bin                                 <
        command:                                              <
        - sh                                                  <
        - -ec                                                 <
        # The statically linked Go program binary is invoked  <
        # dependency on utilities like sh that can be missing <
        # distros installed on the underlying host. Copy the  <
        # same directory where we install cilium cni plugin s <
        # are available.                                      <
        - |                                                   <
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctl <
          nsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cil <
          rm /hostbin/cilium-sysctlfix                        <
        volumeMounts:                                         <
        - name: hostproc                                      <
          mountPath: /hostproc                                <
        - name: cni-path                                      <
          mountPath: /hostbin                                 <
        terminationMessagePolicy: FallbackToLogsOnError       <
        securityContext:                                      <
          seLinuxOptions:                                     <
            level: s0                                         <
            type: spc_t                                       <
          capabilities:                                       <
            add:                                              <
              - SYS_ADMIN                                     <
              - SYS_CHROOT                                    <
              - SYS_PTRACE                                    <
            drop:                                             <
              - ALL                                           <
      # Mount the bpf fs if it is not mounted. We will perfor <
      # from a privileged container because the mount propaga <
      # only works from privileged containers.                <
      - name: mount-bpf-fs                                    <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        args:                                                 <
        - 'mount | grep \"/sys/fs/bpf type bpf\" || mount -t bp <
        command:                                              <
        - /bin/bash                                           <
        - -c                                                  <
        - --                                                  <
        terminationMessagePolicy: FallbackToLogsOnError       <
        securityContext:                                      <
          privileged: true                                    <
        volumeMounts:                                         <
        - name: bpf-maps                                      <
          mountPath: /sys/fs/bpf                              <
          mountPropagation: Bidirectional                     <
      - name: clean-cilium-state                              <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        command:                                              <
        - /init-container.sh                                  <
        env:                                                  <
        - name: CILIUM_ALL_STATE                              <
          valueFrom:                                          <
            configMapKeyRef:                                  <
              name: cilium-config                             <
              key: clean-cilium-state                         <
              optional: true                                  <
        - name: CILIUM_BPF_STATE                              <
          valueFrom:                                          <
            configMapKeyRef:                                  <
              name: cilium-config                             <
              key: clean-cilium-bpf-state                     <
              optional: true                                  <
        - name: WRITE_CNI_CONF_WHEN_READY                     <
          valueFrom:                                          <
            configMapKeyRef:                                  <
              name: cilium-config                             <
              key: write-cni-conf-when-ready                  <
              optional: true                                  <
        terminationMessagePolicy: FallbackToLogsOnError       <
        securityContext:                                      <
          seLinuxOptions:                                     <
            level: s0                                         <
            type: spc_t                                       <
          capabilities:                                       <
            add:                                              <
              - NET_ADMIN                                     <
              - SYS_MODULE                                    <
              - SYS_ADMIN                                     <
              - SYS_RESOURCE                                  <
            drop:                                             <
              - ALL                                           <
        volumeMounts:                                         <
        - name: bpf-maps                                      <
          mountPath: /sys/fs/bpf                              <
          # Required to mount cgroup filesystem from the host <
        - name: cilium-cgroup                                 <
          mountPath: /run/cilium/cgroupv2                     <
          mountPropagation: HostToContainer                   <
        - name: cilium-run                                    <
          mountPath: /var/run/cilium # wait-for-kube-proxy    <
      # Install the CNI binaries in an InitContainer so we do <
      - name: install-cni-binaries                            <
        image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483 <
        imagePullPolicy: IfNotPresent                         <
        command:                                              <
          - \"/install-plugin.sh\"                              <
        resources:                                            <
          requests:                                           <
            cpu: 100m                                         <
            memory: 10Mi                                      <
        securityContext:                                      <
          seLinuxOptions:                                     <
            level: s0                                         <
            type: spc_t                                       <
          capabilities:                                       <
            drop:                                             <
              - ALL                                           <
        terminationMessagePolicy: FallbackToLogsOnError       <
        volumeMounts:                                         <
          - name: cni-path                                    <
            mountPath: /host/opt/cni/bin # .Values.cni.instal <
      restartPolicy: Always                                   <
      priorityClassName: system-node-critical                 <
      serviceAccount: \"cilium\"                                <
      serviceAccountName: \"cilium\"                            <
      automountServiceAccountToken: true                      <
      terminationGracePeriodSeconds: 1                        <
      hostNetwork: true                                       <
      affinity:                                                       affinity:
        podAntiAffinity:                                                podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:                 requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:                                    |             - labelSelector:
              matchLabels:                                    |                 matchLabels:
                k8s-app: cilium                               |                   k8s-app: cilium
            topologyKey: kubernetes.io/hostname               |               topologyKey: kubernetes.io/hostname
                                                              >       automountServiceAccountToken: true
                                                              >       containers:
                                                              >         - args:
                                                              >             - --config-dir=/tmp/cilium/config-map
                                                              >           command:
                                                              >             - cilium-agent
                                                              >           env:
                                                              >             - name: K8S_NODE_NAME
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: spec.nodeName
                                                              >             - name: CILIUM_K8S_NAMESPACE
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: metadata.namespace
                                                              >             - name: CILIUM_CLUSTERMESH_CONFIG
                                                              >               value: /var/lib/cilium/clustermesh/
                                                              >             - name: GOMEMLIMIT
                                                              >               valueFrom:
                                                              >                 resourceFieldRef:
                                                              >                   divisor: \"1\"
                                                              >                   resource: limits.memory
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           lifecycle:
                                                              >             postStart:
                                                              >               exec:
                                                              >                 command:
                                                              >                   - bash
                                                              >                   - -c
                                                              >                   - |
                                                              >                     set -o errexit
                                                              >                     set -o pipefail
                                                              >                     set -o nounset
                                                              > 
                                                              >                     # When running in AWS ENI mode, it's like
                                                              >                     # had a chance to install SNAT iptables r
                                                              >                     # in dropped traffic, so we should attemp
                                                              >                     # We do it using a 'postStart' hook since
                                                              >                     # for nodes which might have already been
                                                              >                     # have dangling rules. This is safe becau
                                                              >                     # dependencies on anything that is part o
                                                              >                     # itself, and can be safely run multiple 
                                                              >                     # case of a restart).
                                                              >                     if [[ \"$(iptables-save | grep -E -c 'AWS-
                                                              >                     then
                                                              >                         echo 'Deleting iptables rules created
                                                              >                         iptables-save | grep -E -v 'AWS-SNAT-
                                                              >                     fi
                                                              >                     echo 'Done!'
                                                              >             preStop:
                                                              >               exec:
                                                              >                 command:
                                                              >                   - /cni-uninstall.sh
                                                              >           livenessProbe:
                                                              >             failureThreshold: 10
                                                              >             httpGet:
                                                              >               host: 127.0.0.1
                                                              >               httpHeaders:
                                                              >                 - name: brief
                                                              >                   value: \"true\"
                                                              >               path: /healthz
                                                              >               port: 9879
                                                              >               scheme: HTTP
                                                              >             periodSeconds: 30
                                                              >             successThreshold: 1
                                                              >             timeoutSeconds: 5
                                                              >           name: cilium-agent
                                                              >           readinessProbe:
                                                              >             failureThreshold: 3
                                                              >             httpGet:
                                                              >               host: 127.0.0.1
                                                              >               httpHeaders:
                                                              >                 - name: brief
                                                              >                   value: \"true\"
                                                              >               path: /healthz
                                                              >               port: 9879
                                                              >               scheme: HTTP
                                                              >             periodSeconds: 30
                                                              >             successThreshold: 1
                                                              >             timeoutSeconds: 5
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               add:
                                                              >                 - CHOWN
                                                              >                 - KILL
                                                              >                 - NET_ADMIN
                                                              >                 - NET_RAW
                                                              >                 - IPC_LOCK
                                                              >                 - SYS_MODULE
                                                              >                 - SYS_ADMIN
                                                              >                 - SYS_RESOURCE
                                                              >                 - DAC_OVERRIDE
                                                              >                 - FOWNER
                                                              >                 - SETGID
                                                              >                 - SETUID
                                                              >               drop:
                                                              >                 - ALL
                                                              >             seLinuxOptions:
                                                              >               level: s0
                                                              >               type: spc_t
                                                              >           startupProbe:
                                                              >             failureThreshold: 105
                                                              >             httpGet:
                                                              >               host: 127.0.0.1
                                                              >               httpHeaders:
                                                              >                 - name: brief
                                                              >                   value: \"true\"
                                                              >               path: /healthz
                                                              >               port: 9879
                                                              >               scheme: HTTP
                                                              >             initialDelaySeconds: 5
                                                              >             periodSeconds: 2
                                                              >             successThreshold: 1
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /host/proc/sys/net
                                                              >               name: host-proc-sys-net
                                                              >             - mountPath: /host/proc/sys/kernel
                                                              >               name: host-proc-sys-kernel
                                                              >             - mountPath: /sys/fs/bpf
                                                              >               mountPropagation: HostToContainer
                                                              >               name: bpf-maps
                                                              >             - mountPath: /var/run/cilium
                                                              >               name: cilium-run
                                                              >             - mountPath: /host/etc/cni/net.d
                                                              >               name: etc-cni-netd
                                                              >             - mountPath: /var/lib/cilium/clustermesh
                                                              >               name: clustermesh-secrets
                                                              >               readOnly: true
                                                              >             - mountPath: /lib/modules
                                                              >               name: lib-modules
                                                              >               readOnly: true
                                                              >             - mountPath: /run/xtables.lock
                                                              >               name: xtables-lock
                                                              >             - mountPath: /var/lib/cilium/tls/hubble
                                                              >               name: hubble-tls
                                                              >               readOnly: true
                                                              >             - mountPath: /tmp
                                                              >               name: tmp
                                                              >       hostNetwork: true
                                                              >       initContainers:
                                                              >         - command:
                                                              >             - cilium-dbg
                                                              >             - build-config
                                                              >           env:
                                                              >             - name: K8S_NODE_NAME
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: spec.nodeName
                                                              >             - name: CILIUM_K8S_NAMESPACE
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: metadata.namespace
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: config
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /tmp
                                                              >               name: tmp
                                                              >         - command:
                                                              >             - sh
                                                              >             - -ec
                                                              >             - |
                                                              >               cp /usr/bin/cilium-mount /hostbin/cilium-mount;
                                                              >               nsenter --cgroup=/hostproc/1/ns/cgroup --mount=
                                                              >               rm /hostbin/cilium-mount
                                                              >           env:
                                                              >             - name: CGROUP_ROOT
                                                              >               value: /run/cilium/cgroupv2
                                                              >             - name: BIN_PATH
                                                              >               value: /opt/cni/bin
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: mount-cgroup
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               add:
                                                              >                 - SYS_ADMIN
                                                              >                 - SYS_CHROOT
                                                              >                 - SYS_PTRACE
                                                              >               drop:
                                                              >                 - ALL
                                                              >             seLinuxOptions:
                                                              >               level: s0
                                                              >               type: spc_t
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /hostproc
                                                              >               name: hostproc
                                                              >             - mountPath: /hostbin
                                                              >               name: cni-path
                                                              >         - command:
                                                              >             - sh
                                                              >             - -ec
                                                              >             - |
                                                              >               cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sy
                                                              >               nsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}
                                                              >               rm /hostbin/cilium-sysctlfix
                                                              >           env:
                                                              >             - name: BIN_PATH
                                                              >               value: /opt/cni/bin
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: apply-sysctl-overwrites
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               add:
                                                              >                 - SYS_ADMIN
                                                              >                 - SYS_CHROOT
                                                              >                 - SYS_PTRACE
                                                              >               drop:
                                                              >                 - ALL
                                                              >             seLinuxOptions:
                                                              >               level: s0
                                                              >               type: spc_t
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /hostproc
                                                              >               name: hostproc
                                                              >             - mountPath: /hostbin
                                                              >               name: cni-path
                                                              >         - args:
                                                              >             - mount | grep \"/sys/fs/bpf type bpf\" || mount -t
                                                              >           command:
                                                              >             - /bin/bash
                                                              >             - -c
                                                              >             - --
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: mount-bpf-fs
                                                              >           securityContext:
                                                              >             privileged: true
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /sys/fs/bpf
                                                              >               mountPropagation: Bidirectional
                                                              >               name: bpf-maps
                                                              >         - command:
                                                              >             - /init-container.sh
                                                              >           env:
                                                              >             - name: CILIUM_ALL_STATE
                                                              >               valueFrom:
                                                              >                 configMapKeyRef:
                                                              >                   key: clean-cilium-state
                                                              >                   name: cilium-config
                                                              >                   optional: true
                                                              >             - name: CILIUM_BPF_STATE
                                                              >               valueFrom:
                                                              >                 configMapKeyRef:
                                                              >                   key: clean-cilium-bpf-state
                                                              >                   name: cilium-config
                                                              >                   optional: true
                                                              >             - name: WRITE_CNI_CONF_WHEN_READY
                                                              >               valueFrom:
                                                              >                 configMapKeyRef:
                                                              >                   key: write-cni-conf-when-ready
                                                              >                   name: cilium-config
                                                              >                   optional: true
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: clean-cilium-state
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               add:
                                                              >                 - NET_ADMIN
                                                              >                 - SYS_MODULE
                                                              >                 - SYS_ADMIN
                                                              >                 - SYS_RESOURCE
                                                              >               drop:
                                                              >                 - ALL
                                                              >             seLinuxOptions:
                                                              >               level: s0
                                                              >               type: spc_t
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /sys/fs/bpf
                                                              >               name: bpf-maps
                                                              >             - mountPath: /run/cilium/cgroupv2
                                                              >               mountPropagation: HostToContainer
                                                              >               name: cilium-cgroup
                                                              >             - mountPath: /var/run/cilium
                                                              >               name: cilium-run
                                                              >         - command:
                                                              >             - /install-plugin.sh
                                                              >           image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: install-cni-binaries
                                                              >           resources:
                                                              >             requests:
                                                              >               cpu: 100m
                                                              >               memory: 10Mi
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               drop:
                                                              >                 - ALL
                                                              >             seLinuxOptions:
                                                              >               level: s0
                                                              >               type: spc_t
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /host/opt/cni/bin
                                                              >               name: cni-path
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
                                                              >       priorityClassName: system-node-critical
                                                              >       restartPolicy: Always
                                                              >       serviceAccount: cilium
                                                              >       serviceAccountName: cilium
                                                              >       terminationGracePeriodSeconds: 1
      tolerations:                                                    tolerations:
        - operator: Exists                                              - operator: Exists
      volumes:                                                        volumes:
        # For sharing configuration between the \"config\" init |         - emptyDir: {}
      - name: tmp                                             |           name: tmp
        emptyDir: {}                                          |         - hostPath:
        # To keep state between restarts / upgrades           |             path: /var/run/cilium
      - name: cilium-run                                      |             type: DirectoryOrCreate
        hostPath:                                             |           name: cilium-run
          path: /var/run/cilium                               |         - hostPath:
          type: DirectoryOrCreate                             |             path: /sys/fs/bpf
        # To keep state between restarts / upgrades for bpf m |             type: DirectoryOrCreate
      - name: bpf-maps                                        |           name: bpf-maps
        hostPath:                                             |         - hostPath:
          path: /sys/fs/bpf                                   |             path: /proc
          type: DirectoryOrCreate                             |             type: Directory
      # To mount cgroup2 filesystem on the host               |           name: hostproc
      - name: hostproc                                        |         - hostPath:
        hostPath:                                             |             path: /run/cilium/cgroupv2
          path: /proc                                         |             type: DirectoryOrCreate
          type: Directory                                     |           name: cilium-cgroup
      # To keep state between restarts / upgrades for cgroup2 |         - hostPath:
      - name: cilium-cgroup                                   |             path: /opt/cni/bin
        hostPath:                                             |             type: DirectoryOrCreate
          path: /run/cilium/cgroupv2                          |           name: cni-path
          type: DirectoryOrCreate                             |         - hostPath:
      # To install cilium cni plugin in the host              |             path: /etc/cni/net.d
      - name: cni-path                                        |             type: DirectoryOrCreate
        hostPath:                                             |           name: etc-cni-netd
          path:  /opt/cni/bin                                 |         - hostPath:
          type: DirectoryOrCreate                             |             path: /lib/modules
        # To install cilium cni configuration in the host     |           name: lib-modules
      - name: etc-cni-netd                                    |         - hostPath:
        hostPath:                                             |             path: /run/xtables.lock
          path: /etc/cni/net.d                                |             type: FileOrCreate
          type: DirectoryOrCreate                             |           name: xtables-lock
        # To be able to load kernel modules                   |         - name: clustermesh-secrets
      - name: lib-modules                                     |           projected:
        hostPath:                                             |             defaultMode: 256
          path: /lib/modules                                  |             sources:
        # To access iptables concurrently with other processe |               - secret:
      - name: xtables-lock                                    |                   name: cilium-clustermesh
        hostPath:                                             |                   optional: true
          path: /run/xtables.lock                             |               - secret:
          type: FileOrCreate                                  |                   items:
        # To read the clustermesh configuration               |                     - key: tls.key
      - name: clustermesh-secrets                             |                       path: common-etcd-client.key
        projected:                                            |                     - key: tls.crt
          # note: the leading zero means this number is in oc |                       path: common-etcd-client.crt
          defaultMode: 0400                                   |                     - key: ca.crt
          sources:                                            |                       path: common-etcd-client-ca.crt
          - secret:                                           |                   name: clustermesh-apiserver-remote-cert
              name: cilium-clustermesh                        |                   optional: true
              optional: true                                  |         - hostPath:
              # note: items are not explicitly listed here, s |             path: /proc/sys/net
              # depend on the peers configured, and that woul |             type: Directory
              # at every addition/removal. Leaving the field  |           name: host-proc-sys-net
              # to be automatically projected into the volume |         - hostPath:
          - secret:                                           |             path: /proc/sys/kernel
              name: clustermesh-apiserver-remote-cert         |             type: Directory
              optional: true                                  |           name: host-proc-sys-kernel
              items:                                          |         - name: hubble-tls
              - key: tls.key                                  |           projected:
                path: common-etcd-client.key                  |             defaultMode: 256
              - key: tls.crt                                  |             sources:
                path: common-etcd-client.crt                  |               - secret:
              - key: ca.crt                                   |                   items:
                path: common-etcd-client-ca.crt               |                     - key: tls.crt
      - name: host-proc-sys-net                               |                       path: server.crt
        hostPath:                                             |                     - key: tls.key
          path: /proc/sys/net                                 |                       path: server.key
          type: Directory                                     |                     - key: ca.crt
      - name: host-proc-sys-kernel                            |                       path: client-ca.crt
        hostPath:                                             |                   name: hubble-server-certs
          path: /proc/sys/kernel                              |                   optional: true
          type: Directory                                     |   updateStrategy:
      - name: hubble-tls                                      |     rollingUpdate:
        projected:                                            |       maxUnavailable: 2
          # note: the leading zero means this number is in oc |     type: RollingUpdate
          defaultMode: 0400                                   <
          sources:                                            <
          - secret:                                           <
              name: hubble-server-certs                       <
              optional: true                                  <
              items:                                          <
              - key: tls.crt                                  <
                path: server.crt                              <
              - key: tls.key                                  <
                path: server.key                              <
              - key: ca.crt                                   <
                path: client-ca.crt                           <
---                                                             ---
# Source: cilium/templates/cilium-operator/deployment.yaml    <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: cilium-operator                                       <
  namespace: kube-system                                      <
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: cilium-operator
                                                              >     app.kubernetes.io/part-of: cilium
    io.cilium/app: operator                                         io.cilium/app: operator
    name: cilium-operator                                           name: cilium-operator
    app.kubernetes.io/part-of: cilium                         |   name: cilium-operator
    app.kubernetes.io/name: cilium-operator                   |   namespace: kube-system
spec:                                                           spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file <
  # for more details.                                         <
  replicas: 2                                                     replicas: 2
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      io.cilium/app: operator                                         io.cilium/app: operator
      name: cilium-operator                                           name: cilium-operator
  # ensure operator update on single node k8s clusters, by us <
  # of one replica and no user configured Recreate strategy.  <
  # otherwise an update might get stuck due to the default ma <
  # podAntiAffinity which prevents deployments of multiple op <
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxSurge: 25%                                                   maxSurge: 25%
      maxUnavailable: 50%                                             maxUnavailable: 50%
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                                    annotations:
        prometheus.io/port: \"9963\"                                      prometheus.io/port: \"9963\"
        prometheus.io/scrape: \"true\"                                    prometheus.io/scrape: \"true\"
      labels:                                                         labels:
                                                              >         app.kubernetes.io/name: cilium-operator
                                                              >         app.kubernetes.io/part-of: cilium
        io.cilium/app: operator                                         io.cilium/app: operator
        name: cilium-operator                                           name: cilium-operator
        app.kubernetes.io/part-of: cilium                     <
        app.kubernetes.io/name: cilium-operator               <
    spec:                                                           spec:
      containers:                                             <
      - name: cilium-operator                                 <
        image: \"quay.io/cilium/operator-aws:v1.15.4@sha256:86 <
        imagePullPolicy: IfNotPresent                         <
        command:                                              <
        - cilium-operator-aws                                 <
        args:                                                 <
        - --config-dir=/tmp/cilium/config-map                 <
        - --debug=$(CILIUM_DEBUG)                             <
        env:                                                  <
        - name: K8S_NODE_NAME                                 <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: spec.nodeName                        <
        - name: CILIUM_K8S_NAMESPACE                          <
          valueFrom:                                          <
            fieldRef:                                         <
              apiVersion: v1                                  <
              fieldPath: metadata.namespace                   <
        - name: CILIUM_DEBUG                                  <
          valueFrom:                                          <
            configMapKeyRef:                                  <
              key: debug                                      <
              name: cilium-config                             <
              optional: true                                  <
        - name: AWS_ACCESS_KEY_ID                             <
          valueFrom:                                          <
            secretKeyRef:                                     <
              name: cilium-aws                                <
              key: AWS_ACCESS_KEY_ID                          <
              optional: true                                  <
        - name: AWS_SECRET_ACCESS_KEY                         <
          valueFrom:                                          <
            secretKeyRef:                                     <
              name: cilium-aws                                <
              key: AWS_SECRET_ACCESS_KEY                      <
              optional: true                                  <
        - name: AWS_DEFAULT_REGION                            <
          valueFrom:                                          <
            secretKeyRef:                                     <
              name: cilium-aws                                <
              key: AWS_DEFAULT_REGION                         <
              optional: true                                  <
        ports:                                                <
        - name: prometheus                                    <
          containerPort: 9963                                 <
          hostPort: 9963                                      <
          protocol: TCP                                       <
        livenessProbe:                                        <
          httpGet:                                            <
            host: \"127.0.0.1\"                                 <
            path: /healthz                                    <
            port: 9234                                        <
            scheme: HTTP                                      <
          initialDelaySeconds: 60                             <
          periodSeconds: 10                                   <
          timeoutSeconds: 3                                   <
        readinessProbe:                                       <
          httpGet:                                            <
            host: \"127.0.0.1\"                                 <
            path: /healthz                                    <
            port: 9234                                        <
            scheme: HTTP                                      <
          initialDelaySeconds: 0                              <
          periodSeconds: 5                                    <
          timeoutSeconds: 3                                   <
          failureThreshold: 5                                 <
        volumeMounts:                                         <
        - name: cilium-config-path                            <
          mountPath: /tmp/cilium/config-map                   <
          readOnly: true                                      <
        terminationMessagePolicy: FallbackToLogsOnError       <
      hostNetwork: true                                       <
      restartPolicy: Always                                   <
      priorityClassName: system-cluster-critical              <
      serviceAccount: \"cilium-operator\"                       <
      serviceAccountName: \"cilium-operator\"                   <
      automountServiceAccountToken: true                      <
      # In HA mode, cilium-operator pods must not be schedule <
      # node as they will clash with each other.              <
      affinity:                                                       affinity:
        podAntiAffinity:                                                podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:                 requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:                                    |             - labelSelector:
              matchLabels:                                    |                 matchLabels:
                io.cilium/app: operator                       |                   io.cilium/app: operator
            topologyKey: kubernetes.io/hostname               |               topologyKey: kubernetes.io/hostname
                                                              >       automountServiceAccountToken: true
                                                              >       containers:
                                                              >         - args:
                                                              >             - --config-dir=/tmp/cilium/config-map
                                                              >             - --debug=$(CILIUM_DEBUG)
                                                              >           command:
                                                              >             - cilium-operator-aws
                                                              >           env:
                                                              >             - name: K8S_NODE_NAME
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: spec.nodeName
                                                              >             - name: CILIUM_K8S_NAMESPACE
                                                              >               valueFrom:
                                                              >                 fieldRef:
                                                              >                   apiVersion: v1
                                                              >                   fieldPath: metadata.namespace
                                                              >             - name: CILIUM_DEBUG
                                                              >               valueFrom:
                                                              >                 configMapKeyRef:
                                                              >                   key: debug
                                                              >                   name: cilium-config
                                                              >                   optional: true
                                                              >             - name: AWS_ACCESS_KEY_ID
                                                              >               valueFrom:
                                                              >                 secretKeyRef:
                                                              >                   key: AWS_ACCESS_KEY_ID
                                                              >                   name: cilium-aws
                                                              >                   optional: true
                                                              >             - name: AWS_SECRET_ACCESS_KEY
                                                              >               valueFrom:
                                                              >                 secretKeyRef:
                                                              >                   key: AWS_SECRET_ACCESS_KEY
                                                              >                   name: cilium-aws
                                                              >                   optional: true
                                                              >             - name: AWS_DEFAULT_REGION
                                                              >               valueFrom:
                                                              >                 secretKeyRef:
                                                              >                   key: AWS_DEFAULT_REGION
                                                              >                   name: cilium-aws
                                                              >                   optional: true
                                                              >           image: quay.io/cilium/operator-aws:v1.15.4@sha256:8
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           livenessProbe:
                                                              >             httpGet:
                                                              >               host: 127.0.0.1
                                                              >               path: /healthz
                                                              >               port: 9234
                                                              >               scheme: HTTP
                                                              >             initialDelaySeconds: 60
                                                              >             periodSeconds: 10
                                                              >             timeoutSeconds: 3
                                                              >           name: cilium-operator
                                                              >           ports:
                                                              >             - containerPort: 9963
                                                              >               hostPort: 9963
                                                              >               name: prometheus
                                                              >               protocol: TCP
                                                              >           readinessProbe:
                                                              >             failureThreshold: 5
                                                              >             httpGet:
                                                              >               host: 127.0.0.1
                                                              >               path: /healthz
                                                              >               port: 9234
                                                              >               scheme: HTTP
                                                              >             initialDelaySeconds: 0
                                                              >             periodSeconds: 5
                                                              >             timeoutSeconds: 3
                                                              >           terminationMessagePolicy: FallbackToLogsOnError
                                                              >           volumeMounts:
                                                              >             - mountPath: /tmp/cilium/config-map
                                                              >               name: cilium-config-path
                                                              >               readOnly: true
                                                              >       hostNetwork: true
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
                                                              >       priorityClassName: system-cluster-critical
                                                              >       restartPolicy: Always
                                                              >       serviceAccount: cilium-operator
                                                              >       serviceAccountName: cilium-operator
      tolerations:                                                    tolerations:
        - operator: Exists                                              - operator: Exists
      volumes:                                                        volumes:
        # To read the configuration from the config map       |         - configMap:
      - name: cilium-config-path                              |             name: cilium-config
        configMap:                                            |           name: cilium-config-path
          name: cilium-config                                 <
---                                                             ---
# Source: cilium/templates/hubble-relay/deployment.yaml       <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: hubble-relay                                          <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: hubble-relay                                     <
    app.kubernetes.io/name: hubble-relay                            app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >     k8s-app: hubble-relay
                                                              >   name: hubble-relay
                                                              >   namespace: kube-system
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      k8s-app: hubble-relay                                           k8s-app: hubble-relay
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxUnavailable: 1                                               maxUnavailable: 1
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                            |       annotations: null
      labels:                                                         labels:
        k8s-app: hubble-relay                                 <
        app.kubernetes.io/name: hubble-relay                            app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >         k8s-app: hubble-relay
    spec:                                                           spec:
      securityContext:                                        |       affinity:
        fsGroup: 65532                                        |         podAffinity:
                                                              >           requiredDuringSchedulingIgnoredDuringExecution:
                                                              >             - labelSelector:
                                                              >                 matchLabels:
                                                              >                   k8s-app: cilium
                                                              >               topologyKey: kubernetes.io/hostname
                                                              >       automountServiceAccountToken: false
      containers:                                                     containers:
        - name: hubble-relay                                  |         - args:
          securityContext:                                    |             - serve
            capabilities:                                     <
              drop:                                           <
              - ALL                                           <
            runAsGroup: 65532                                 <
            runAsNonRoot: true                                <
            runAsUser: 65532                                  <
          image: \"quay.io/cilium/hubble-relay:v1.15.4@sha256: <
          imagePullPolicy: IfNotPresent                       <
          command:                                                        command:
            - hubble-relay                                                  - hubble-relay
          args:                                               |           image: quay.io/cilium/hubble-relay:v1.15.4@sha256:0
            - serve                                           |           imagePullPolicy: IfNotPresent
          ports:                                              |           livenessProbe:
            - name: grpc                                      <
              containerPort: 4245                             <
          readinessProbe:                                     <
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            timeoutSeconds: 3                                               timeoutSeconds: 3
          livenessProbe:                                      |           name: hubble-relay
                                                              >           ports:
                                                              >             - containerPort: 4245
                                                              >               name: grpc
                                                              >           readinessProbe:
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            timeoutSeconds: 3                                               timeoutSeconds: 3
                                                              >           securityContext:
                                                              >             capabilities:
                                                              >               drop:
                                                              >                 - ALL
                                                              >             runAsGroup: 65532
                                                              >             runAsNonRoot: true
                                                              >             runAsUser: 65532
          startupProbe:                                                   startupProbe:
            # give the relay one minute to start up           |             failureThreshold: 20
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            timeoutSeconds: 3                                 <
            failureThreshold: 20                              <
            periodSeconds: 3                                                periodSeconds: 3
          volumeMounts:                                       |             timeoutSeconds: 3
          - name: config                                      <
            mountPath: /etc/hubble-relay                      <
            readOnly: true                                    <
          - name: tls                                         <
            mountPath: /var/lib/hubble-relay/tls              <
            readOnly: true                                    <
          terminationMessagePolicy: FallbackToLogsOnError                 terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always                                   |           volumeMounts:
      priorityClassName:                                      |             - mountPath: /etc/hubble-relay
      serviceAccount: \"hubble-relay\"                          |               name: config
      serviceAccountName: \"hubble-relay\"                      |               readOnly: true
      automountServiceAccountToken: false                     |             - mountPath: /var/lib/hubble-relay/tls
      terminationGracePeriodSeconds: 1                        |               name: tls
      affinity:                                               |               readOnly: true
        podAffinity:                                          <
          requiredDuringSchedulingIgnoredDuringExecution:     <
          - labelSelector:                                    <
              matchLabels:                                    <
                k8s-app: cilium                               <
            topologyKey: kubernetes.io/hostname               <
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
                                                              >       priorityClassName: null
                                                              >       restartPolicy: Always
                                                              >       securityContext:
                                                              >         fsGroup: 65532
                                                              >       serviceAccount: hubble-relay
                                                              >       serviceAccountName: hubble-relay
                                                              >       terminationGracePeriodSeconds: 1
      volumes:                                                        volumes:
      - name: config                                          |         - configMap:
        configMap:                                            |             items:
          name: hubble-relay-config                           |               - key: config.yaml
          items:                                              |                 path: config.yaml
          - key: config.yaml                                  |             name: hubble-relay-config
            path: config.yaml                                 |           name: config
      - name: tls                                             |         - name: tls
        projected:                                            |           projected:
          # note: the leading zero means this number is in oc |             defaultMode: 256
          defaultMode: 0400                                   |             sources:
          sources:                                            |               - secret:
          - secret:                                           |                   items:
              name: hubble-relay-client-certs                 |                     - key: tls.crt
              items:                                          |                       path: client.crt
                - key: tls.crt                                |                     - key: tls.key
                  path: client.crt                            |                       path: client.key
                - key: tls.key                                |                     - key: ca.crt
                  path: client.key                            |                       path: hubble-server-ca.crt
                - key: ca.crt                                 |                   name: hubble-relay-client-certs
                  path: hubble-server-ca.crt                  <
---                                                             ---
# Source: cilium/templates/hubble-ui/deployment.yaml          <
kind: Deployment                                              <
apiVersion: apps/v1                                             apiVersion: apps/v1
                                                              > kind: Deployment
metadata:                                                       metadata:
  name: hubble-ui                                             <
  namespace: kube-system                                      <
  labels:                                                         labels:
    k8s-app: hubble-ui                                        <
    app.kubernetes.io/name: hubble-ui                               app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >     k8s-app: hubble-ui
                                                              >   name: hubble-ui
                                                              >   namespace: kube-system
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      k8s-app: hubble-ui                                              k8s-app: hubble-ui
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxUnavailable: 1                                               maxUnavailable: 1
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                            |       annotations: null
      labels:                                                         labels:
        k8s-app: hubble-ui                                    <
        app.kubernetes.io/name: hubble-ui                               app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
                                                              >         k8s-app: hubble-ui
    spec:                                                           spec:
      priorityClassName:                                      <
      serviceAccount: \"hubble-ui\"                             <
      serviceAccountName: \"hubble-ui\"                         <
      automountServiceAccountToken: true                              automountServiceAccountToken: true
      containers:                                                     containers:
      - name: frontend                                        |         - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d66
        image: \"quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663 |           imagePullPolicy: IfNotPresent
        imagePullPolicy: IfNotPresent                         |           livenessProbe:
        ports:                                                |             httpGet:
        - name: http                                          |               path: /healthz
          containerPort: 8081                                 |               port: 8081
        livenessProbe:                                        |           name: frontend
          httpGet:                                            |           ports:
            path: /healthz                                    |             - containerPort: 8081
            port: 8081                                        |               name: http
        readinessProbe:                                       |           readinessProbe:
          httpGet:                                            |             httpGet:
            path: /                                           |               path: /
            port: 8081                                        |               port: 8081
        volumeMounts:                                         |           terminationMessagePolicy: FallbackToLogsOnError
        - name: hubble-ui-nginx-conf                          |           volumeMounts:
          mountPath: /etc/nginx/conf.d/default.conf           |             - mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf                                 |               name: hubble-ui-nginx-conf
        - name: tmp-dir                                       |               subPath: nginx.conf
          mountPath: /tmp                                     |             - mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError       |               name: tmp-dir
      - name: backend                                         |         - env:
        image: \"quay.io/cilium/hubble-ui-backend:v0.13.0@sha2 |             - name: EVENTS_SERVER_PORT
        imagePullPolicy: IfNotPresent                         |               value: \"8090\"
        env:                                                  |             - name: FLOWS_API_ADDR
        - name: EVENTS_SERVER_PORT                            |               value: hubble-relay:80
          value: \"8090\"                                       |           image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha
        - name: FLOWS_API_ADDR                                |           imagePullPolicy: IfNotPresent
          value: \"hubble-relay:80\"                            |           name: backend
        ports:                                                |           ports:
        - name: grpc                                          |             - containerPort: 8090
          containerPort: 8090                                 |               name: grpc
        volumeMounts:                                         |           terminationMessagePolicy: FallbackToLogsOnError
        terminationMessagePolicy: FallbackToLogsOnError       |           volumeMounts: null
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
                                                              >       priorityClassName: null
                                                              >       serviceAccount: hubble-ui
                                                              >       serviceAccountName: hubble-ui
      volumes:                                                        volumes:
      - configMap:                                            |         - configMap:
          defaultMode: 420                                    |             defaultMode: 420
          name: hubble-ui-nginx                               |             name: hubble-ui-nginx
        name: hubble-ui-nginx-conf                            |           name: hubble-ui-nginx-conf
      - emptyDir: {}                                          |         - emptyDir: {}
        name: tmp-dir                                         |           name: tmp-dir
"""

['sdiff <(helm template chartsnap ingress-nginx -f ../../example/remote/ingress-nginx.values.yaml --repo https://kubernetes.github.io/ingress-nginx -n ingress-nginx --skip-tests) ../../example/remote/__snapshots__/ingress-nginx.values.snap']
SnapShot = """
---                                                           <
# Source: ingress-nginx/templates/controller-serviceaccount.y <
apiVersion: v1                                                  apiVersion: v1
                                                              > automountServiceAccountToken: true
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
automountServiceAccountToken: true                            <
---                                                             ---
# Source: ingress-nginx/templates/controller-configmap.yaml   <
apiVersion: v1                                                  apiVersion: v1
                                                              > data:
                                                              >   allow-snippet-annotations: \"false\"
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
data:                                                         <
  allow-snippet-annotations: \"false\"                          <
---                                                             ---
# Source: ingress-nginx/templates/clusterrole.yaml            <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       <
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - configmaps                                                    - configmaps
      - endpoints                                                     - endpoints
      - nodes                                                         - nodes
      - pods                                                          - pods
      - secrets                                                       - secrets
      - namespaces                                                    - namespaces
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resources:                                                      resources:
      - leases                                                        - leases
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - nodes                                                         - nodes
    verbs:                                                          verbs:
      - get                                                           - get
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - services                                                      - services
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses                                                     - ingresses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - events                                                        - events
    verbs:                                                          verbs:
      - create                                                        - create
      - patch                                                         - patch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses/status                                              - ingresses/status
    verbs:                                                          verbs:
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingressclasses                                                - ingressclasses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - discovery.k8s.io                                              - discovery.k8s.io
    resources:                                                      resources:
      - endpointslices                                                - endpointslices
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
      - get                                                           - get
---                                                             ---
# Source: ingress-nginx/templates/clusterrolebinding.yaml     <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       <
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/controller-role.yaml        <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - namespaces                                                    - namespaces
    verbs:                                                          verbs:
      - get                                                           - get
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - configmaps                                                    - configmaps
      - pods                                                          - pods
      - secrets                                                       - secrets
      - endpoints                                                     - endpoints
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - services                                                      - services
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses                                                     - ingresses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  # Omit Ingress status permissions if `--update-status` is d <
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses/status                                              - ingresses/status
    verbs:                                                          verbs:
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingressclasses                                                - ingressclasses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resources:                                                <
      - leases                                                <
    resourceNames:                                                  resourceNames:
      - chartsnap-ingress-nginx-leader                                - chartsnap-ingress-nginx-leader
                                                              >     resources:
                                                              >       - leases
    verbs:                                                          verbs:
      - get                                                           - get
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resources:                                                      resources:
      - leases                                                        - leases
    verbs:                                                          verbs:
      - create                                                        - create
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - events                                                        - events
    verbs:                                                          verbs:
      - create                                                        - create
      - patch                                                         - patch
  - apiGroups:                                                    - apiGroups:
      - discovery.k8s.io                                              - discovery.k8s.io
    resources:                                                      resources:
      - endpointslices                                                - endpointslices
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
      - get                                                           - get
---                                                             ---
# Source: ingress-nginx/templates/controller-rolebinding.yaml <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/controller-service-internal <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  annotations:                                                    annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: \"int |     service.beta.kubernetes.io/aws-load-balancer-scheme: inte
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-controller-internal               name: chartsnap-ingress-nginx-controller-internal
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  type: LoadBalancer                                          |   ipFamilies:
  ipFamilyPolicy: SingleStack                                 <
  ipFamilies:                                                 <
    - IPv4                                                          - IPv4
                                                              >   ipFamilyPolicy: SingleStack
  ports:                                                          ports:
    - name: http                                              |     - appProtocol: http
                                                              >       name: http
      port: 80                                                        port: 80
      protocol: TCP                                                   protocol: TCP
      targetPort: http                                                targetPort: http
      appProtocol: http                                       |     - appProtocol: https
    - name: https                                             |       name: https
      port: 443                                                       port: 443
      protocol: TCP                                                   protocol: TCP
      targetPort: https                                               targetPort: https
      appProtocol: https                                      <
  selector:                                                       selector:
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/component: controller                         app.kubernetes.io/component: controller
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: ingress-nginx
                                                              >   type: LoadBalancer
---                                                             ---
# Source: ingress-nginx/templates/controller-service-webhook. <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-controller-admission              name: chartsnap-ingress-nginx-controller-admission
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  type: ClusterIP                                             <
  ports:                                                          ports:
    - name: https-webhook                                     |     - appProtocol: https
                                                              >       name: https-webhook
      port: 443                                                       port: 443
      targetPort: webhook                                             targetPort: webhook
      appProtocol: https                                      <
  selector:                                                       selector:
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/component: controller                         app.kubernetes.io/component: controller
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: ingress-nginx
                                                              >   type: ClusterIP
---                                                             ---
# Source: ingress-nginx/templates/controller-service.yaml     <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  annotations:                                                |   annotations: null
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  type: LoadBalancer                                          |   ipFamilies:
  ipFamilyPolicy: SingleStack                                 <
  ipFamilies:                                                 <
    - IPv4                                                          - IPv4
                                                              >   ipFamilyPolicy: SingleStack
  ports:                                                          ports:
    - name: http                                              |     - appProtocol: http
                                                              >       name: http
      port: 80                                                        port: 80
      protocol: TCP                                                   protocol: TCP
      targetPort: http                                                targetPort: http
      appProtocol: http                                       |     - appProtocol: https
    - name: https                                             |       name: https
      port: 443                                                       port: 443
      protocol: TCP                                                   protocol: TCP
      targetPort: https                                               targetPort: https
      appProtocol: https                                      <
  selector:                                                       selector:
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/component: controller                         app.kubernetes.io/component: controller
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/name: ingress-nginx
                                                              >   type: LoadBalancer
---                                                             ---
# Source: ingress-nginx/templates/controller-deployment.yaml  <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
                                                              >   minReadySeconds: 0
                                                              >   replicas: 1
                                                              >   revisionHistoryLimit: 10
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/name: ingress-nginx                   <
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/component: controller                         app.kubernetes.io/component: controller
  replicas: 1                                                 |       app.kubernetes.io/instance: chartsnap
  revisionHistoryLimit: 10                                    |       app.kubernetes.io/name: ingress-nginx
  minReadySeconds: 0                                          <
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
        helm.sh/chart: ingress-nginx-4.10.1                   |         app.kubernetes.io/component: controller
        app.kubernetes.io/name: ingress-nginx                 <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.10.1\"                   <
        app.kubernetes.io/part-of: ingress-nginx              <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller               |         app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/part-of: ingress-nginx
                                                              >         app.kubernetes.io/version: 1.10.1
                                                              >         helm.sh/chart: ingress-nginx-4.10.1
    spec:                                                           spec:
      dnsPolicy: ClusterFirst                                 <
      containers:                                                     containers:
        - name: controller                                    |         - args:
          image: registry.k8s.io/ingress-nginx/controller:v1. <
          imagePullPolicy: IfNotPresent                       <
          lifecycle:                                          <
            preStop:                                          <
              exec:                                           <
                command:                                      <
                - /wait-shutdown                              <
          args:                                               <
            - /nginx-ingress-controller                                     - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/chartsnap-in               - --publish-service=$(POD_NAMESPACE)/chartsnap-in
            - --election-id=chartsnap-ingress-nginx-leader                  - --election-id=chartsnap-ingress-nginx-leader
            - --controller-class=k8s.io/ingress-nginx                       - --controller-class=k8s.io/ingress-nginx
            - --ingress-class=nginx                                         - --ingress-class=nginx
            - --configmap=$(POD_NAMESPACE)/chartsnap-ingress-               - --configmap=$(POD_NAMESPACE)/chartsnap-ingress-
            - --validating-webhook=:8443                                    - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/cer               - --validating-webhook-certificate=/usr/local/cer
            - --validating-webhook-key=/usr/local/certificate               - --validating-webhook-key=/usr/local/certificate
            - --enable-metrics=false                                        - --enable-metrics=false
          securityContext:                                    <
            runAsNonRoot: true                                <
            runAsUser: 101                                    <
            allowPrivilegeEscalation: false                   <
            seccompProfile:                                   <
              type: RuntimeDefault                            <
            capabilities:                                     <
              drop:                                           <
              - ALL                                           <
              add:                                            <
              - NET_BIND_SERVICE                              <
            readOnlyRootFilesystem: false                     <
          env:                                                            env:
            - name: POD_NAME                                                - name: POD_NAME
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.name                                        fieldPath: metadata.name
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
            - name: LD_PRELOAD                                              - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so                            value: /usr/local/lib/libmimalloc.so
          livenessProbe:                                      |           image: registry.k8s.io/ingress-nginx/controller:v1.
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           lifecycle:
                                                              >             preStop:
                                                              >               exec:
                                                              >                 command:
                                                              >                   - /wait-shutdown
                                                              >           livenessProbe:
            failureThreshold: 5                                             failureThreshold: 5
            httpGet:                                                        httpGet:
              path: /healthz                                                  path: /healthz
              port: 10254                                                     port: 10254
              scheme: HTTP                                                    scheme: HTTP
            initialDelaySeconds: 10                                         initialDelaySeconds: 10
            periodSeconds: 10                                               periodSeconds: 10
            successThreshold: 1                                             successThreshold: 1
            timeoutSeconds: 1                                               timeoutSeconds: 1
          readinessProbe:                                     |           name: controller
                                                              >           ports:
                                                              >             - containerPort: 80
                                                              >               name: http
                                                              >               protocol: TCP
                                                              >             - containerPort: 443
                                                              >               name: https
                                                              >               protocol: TCP
                                                              >             - containerPort: 8443
                                                              >               name: webhook
                                                              >               protocol: TCP
                                                              >           readinessProbe:
            failureThreshold: 3                                             failureThreshold: 3
            httpGet:                                                        httpGet:
              path: /healthz                                                  path: /healthz
              port: 10254                                                     port: 10254
              scheme: HTTP                                                    scheme: HTTP
            initialDelaySeconds: 10                                         initialDelaySeconds: 10
            periodSeconds: 10                                               periodSeconds: 10
            successThreshold: 1                                             successThreshold: 1
            timeoutSeconds: 1                                               timeoutSeconds: 1
          ports:                                              |           resources:
            - name: http                                      <
              containerPort: 80                               <
              protocol: TCP                                   <
            - name: https                                     <
              containerPort: 443                              <
              protocol: TCP                                   <
            - name: webhook                                   <
              containerPort: 8443                             <
              protocol: TCP                                   <
          volumeMounts:                                       <
            - name: webhook-cert                              <
              mountPath: /usr/local/certificates/             <
              readOnly: true                                  <
          resources:                                          <
            requests:                                                       requests:
              cpu: 100m                                                       cpu: 100m
              memory: 90Mi                                                    memory: 90Mi
      nodeSelector:                                           |           securityContext:
                                                              >             allowPrivilegeEscalation: false
                                                              >             capabilities:
                                                              >               add:
                                                              >                 - NET_BIND_SERVICE
                                                              >               drop:
                                                              >                 - ALL
                                                              >             readOnlyRootFilesystem: false
                                                              >             runAsNonRoot: true
                                                              >             runAsUser: 101
                                                              >             seccompProfile:
                                                              >               type: RuntimeDefault
                                                              >           volumeMounts:
                                                              >             - mountPath: /usr/local/certificates/
                                                              >               name: webhook-cert
                                                              >               readOnly: true
                                                              >       dnsPolicy: ClusterFirst
                                                              >       nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
      serviceAccountName: chartsnap-ingress-nginx                     serviceAccountName: chartsnap-ingress-nginx
      terminationGracePeriodSeconds: 300                              terminationGracePeriodSeconds: 300
      volumes:                                                        volumes:
        - name: webhook-cert                                            - name: webhook-cert
          secret:                                                         secret:
            secretName: chartsnap-ingress-nginx-admission                   secretName: chartsnap-ingress-nginx-admission
---                                                             ---
# Source: ingress-nginx/templates/controller-ingressclass.yam <
apiVersion: networking.k8s.io/v1                                apiVersion: networking.k8s.io/v1
kind: IngressClass                                              kind: IngressClass
metadata:                                                       metadata:
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: controller
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller                   |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: nginx                                                     name: nginx
spec:                                                           spec:
  controller: k8s.io/ingress-nginx                                controller: k8s.io/ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/controller-poddisruptionbud <
# PDB is not supported for DaemonSets.                        <
# https://github.com/kubernetes/kubernetes/issues/108124      <
---                                                           <
# Source: ingress-nginx/templates/admission-webhooks/validati <
# before changing this value, check the required kubernetes v <
# https://kubernetes.io/docs/reference/access-authn-authz/ext <
apiVersion: admissionregistration.k8s.io/v1                     apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration                            kind: ValidatingWebhookConfiguration
metadata:                                                       metadata:
  annotations:                                                |   annotations: null
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
webhooks:                                                       webhooks:
  - name: validate.nginx.ingress.kubernetes.io                |   - admissionReviewVersions:
                                                              >       - v1
                                                              >     clientConfig:
                                                              >       service:
                                                              >         name: chartsnap-ingress-nginx-controller-admission
                                                              >         namespace: ingress-nginx
                                                              >         path: /networking/v1/ingresses
                                                              >     failurePolicy: Fail
    matchPolicy: Equivalent                                         matchPolicy: Equivalent
                                                              >     name: validate.nginx.ingress.kubernetes.io
    rules:                                                          rules:
      - apiGroups:                                                    - apiGroups:
          - networking.k8s.io                                             - networking.k8s.io
        apiVersions:                                                    apiVersions:
          - v1                                                            - v1
        operations:                                                     operations:
          - CREATE                                                        - CREATE
          - UPDATE                                                        - UPDATE
        resources:                                                      resources:
          - ingresses                                                     - ingresses
    failurePolicy: Fail                                       <
    sideEffects: None                                               sideEffects: None
    admissionReviewVersions:                                  <
      - v1                                                    <
    clientConfig:                                             <
      service:                                                <
        name: chartsnap-ingress-nginx-controller-admission    <
        namespace: ingress-nginx                              <
        path: /networking/v1/ingresses                        <
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post |     helm.sh/hook: pre-install,pre-upgrade,post-install,post-u
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission                     <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post |     helm.sh/hook: pre-install,pre-upgrade,post-install,post-u
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - admissionregistration.k8s.io                                  - admissionregistration.k8s.io
    resources:                                                      resources:
      - validatingwebhookconfigurations                               - validatingwebhookconfigurations
    verbs:                                                          verbs:
      - get                                                           - get
      - update                                                        - update
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission                     <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post |     helm.sh/hook: pre-install,pre-upgrade,post-install,post-u
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post |     helm.sh/hook: pre-install,pre-upgrade,post-install,post-u
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - secrets                                                       - secrets
    verbs:                                                          verbs:
      - get                                                           - get
      - create                                                        - create
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post |     helm.sh/hook: pre-install,pre-upgrade,post-install,post-u
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: batch/v1                                            apiVersion: batch/v1
kind: Job                                                       kind: Job
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission-create              <
  namespace: ingress-nginx                                    <
  annotations:                                                    annotations:
    \"helm.sh/hook\": pre-install,pre-upgrade                   |     helm.sh/hook: pre-install,pre-upgrade
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission-create
                                                              >   namespace: ingress-nginx
spec:                                                           spec:
  template:                                                       template:
    metadata:                                                       metadata:
      name: chartsnap-ingress-nginx-admission-create          <
      labels:                                                         labels:
        helm.sh/chart: ingress-nginx-4.10.1                   |         app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/name: ingress-nginx                 <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.10.1\"                   <
        app.kubernetes.io/part-of: ingress-nginx              <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: admission-webhook        |         app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/part-of: ingress-nginx
                                                              >         app.kubernetes.io/version: 1.10.1
                                                              >         helm.sh/chart: ingress-nginx-4.10.1
                                                              >       name: chartsnap-ingress-nginx-admission-create
    spec:                                                           spec:
      containers:                                                     containers:
        - name: create                                        |         - args:
          image: registry.k8s.io/ingress-nginx/kube-webhook-c <
          imagePullPolicy: IfNotPresent                       <
          args:                                               <
            - create                                                        - create
            - --host=chartsnap-ingress-nginx-controller-admis               - --host=chartsnap-ingress-nginx-controller-admis
            - --namespace=$(POD_NAMESPACE)                                  - --namespace=$(POD_NAMESPACE)
            - --secret-name=chartsnap-ingress-nginx-admission               - --secret-name=chartsnap-ingress-nginx-admission
          env:                                                            env:
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
          securityContext:                                    |           image: registry.k8s.io/ingress-nginx/kube-webhook-c
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: create
                                                              >           securityContext:
            allowPrivilegeEscalation: false                                 allowPrivilegeEscalation: false
            capabilities:                                                   capabilities:
              drop:                                                           drop:
              - ALL                                           |                 - ALL
            readOnlyRootFilesystem: true                                    readOnlyRootFilesystem: true
            runAsNonRoot: true                                              runAsNonRoot: true
            runAsUser: 65532                                                runAsUser: 65532
            seccompProfile:                                                 seccompProfile:
              type: RuntimeDefault                                            type: RuntimeDefault
                                                              >       nodeSelector:
                                                              >         kubernetes.io/os: linux
      restartPolicy: OnFailure                                        restartPolicy: OnFailure
      serviceAccountName: chartsnap-ingress-nginx-admission           serviceAccountName: chartsnap-ingress-nginx-admission
      nodeSelector:                                           <
        kubernetes.io/os: linux                               <
---                                                             ---
# Source: ingress-nginx/templates/admission-webhooks/job-patc <
apiVersion: batch/v1                                            apiVersion: batch/v1
kind: Job                                                       kind: Job
metadata:                                                       metadata:
  name: chartsnap-ingress-nginx-admission-patch               <
  namespace: ingress-nginx                                    <
  annotations:                                                    annotations:
    \"helm.sh/hook\": post-install,post-upgrade                 |     helm.sh/hook: post-install,post-upgrade
    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s |     helm.sh/hook-delete-policy: before-hook-creation,hook-suc
  labels:                                                         labels:
    helm.sh/chart: ingress-nginx-4.10.1                       |     app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/name: ingress-nginx                     <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.10.1\"                       <
    app.kubernetes.io/part-of: ingress-nginx                  <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook            |     app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/part-of: ingress-nginx
                                                              >     app.kubernetes.io/version: 1.10.1
                                                              >     helm.sh/chart: ingress-nginx-4.10.1
                                                              >   name: chartsnap-ingress-nginx-admission-patch
                                                              >   namespace: ingress-nginx
spec:                                                           spec:
  template:                                                       template:
    metadata:                                                       metadata:
      name: chartsnap-ingress-nginx-admission-patch           <
      labels:                                                         labels:
        helm.sh/chart: ingress-nginx-4.10.1                   |         app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/name: ingress-nginx                 <
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
        app.kubernetes.io/version: \"1.10.1\"                   <
        app.kubernetes.io/part-of: ingress-nginx              <
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: admission-webhook        |         app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/part-of: ingress-nginx
                                                              >         app.kubernetes.io/version: 1.10.1
                                                              >         helm.sh/chart: ingress-nginx-4.10.1
                                                              >       name: chartsnap-ingress-nginx-admission-patch
    spec:                                                           spec:
      containers:                                                     containers:
        - name: patch                                         |         - args:
          image: registry.k8s.io/ingress-nginx/kube-webhook-c <
          imagePullPolicy: IfNotPresent                       <
          args:                                               <
            - patch                                                         - patch
            - --webhook-name=chartsnap-ingress-nginx-admissio               - --webhook-name=chartsnap-ingress-nginx-admissio
            - --namespace=$(POD_NAMESPACE)                                  - --namespace=$(POD_NAMESPACE)
            - --patch-mutating=false                                        - --patch-mutating=false
            - --secret-name=chartsnap-ingress-nginx-admission               - --secret-name=chartsnap-ingress-nginx-admission
            - --patch-failure-policy=Fail                                   - --patch-failure-policy=Fail
          env:                                                            env:
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
          securityContext:                                    |           image: registry.k8s.io/ingress-nginx/kube-webhook-c
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           name: patch
                                                              >           securityContext:
            allowPrivilegeEscalation: false                                 allowPrivilegeEscalation: false
            capabilities:                                                   capabilities:
              drop:                                                           drop:
              - ALL                                           |                 - ALL
            readOnlyRootFilesystem: true                                    readOnlyRootFilesystem: true
            runAsNonRoot: true                                              runAsNonRoot: true
            runAsUser: 65532                                                runAsUser: 65532
            seccompProfile:                                                 seccompProfile:
              type: RuntimeDefault                                            type: RuntimeDefault
                                                              >       nodeSelector:
                                                              >         kubernetes.io/os: linux
      restartPolicy: OnFailure                                        restartPolicy: OnFailure
      serviceAccountName: chartsnap-ingress-nginx-admission           serviceAccountName: chartsnap-ingress-nginx-admission
      nodeSelector:                                           <
        kubernetes.io/os: linux                               <
"""

['sdiff <(helm template chartsnap oci://ghcr.io/nginxinc/charts/nginx-gateway-fabric -f ../../example/remote/nginx-gateway-fabric.values.yaml -n nginx-gateway) ../../example/remote/__snapshots__/nginx-gateway-fabric.values.snap']
SnapShot = """
Pulled: ghcr.io/nginxinc/charts/nginx-gateway-fabric:1.2.0    | apiVersion: helm-chartsnap.jlandowner.dev/v1alpha1
Digest: sha256:dcb4647c4c37f8e2d1ada4bd9ae16221344eabbdf21018 | kind: Unknown
                                                              > raw: |
                                                              >   Pulled: ghcr.io/nginxinc/charts/nginx-gateway-fabric:1.2.0
                                                              >   Digest: sha256:dcb4647c4c37f8e2d1ada4bd9ae16221344eabbdf210
---                                                             ---
# Source: nginx-gateway-fabric/templates/rbac.yaml            <
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: chartsnap-nginx-gateway-fabric                        |   annotations: {}
  namespace: nginx-gateway                                    <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  annotations:                                                |   name: chartsnap-nginx-gateway-fabric
    {}                                                        |   namespace: nginx-gateway
---                                                             ---
# Source: nginx-gateway-fabric/templates/rbac.yaml            <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  name: chartsnap-nginx-gateway-fabric                        <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
                                                              >   name: chartsnap-nginx-gateway-fabric
rules:                                                          rules:
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - namespaces                                                |       - namespaces
  - services                                                  |       - services
  - secrets                                                   |       - secrets
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - pods                                                      |       - pods
  verbs:                                                      |     verbs:
  - get                                                       |       - get
- apiGroups:                                                  |   - apiGroups:
  - apps                                                      |       - apps
  resources:                                                  |     resources:
  - replicasets                                               |       - replicasets
  verbs:                                                      |     verbs:
  - get                                                       |       - get
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - nodes                                                     |       - nodes
  verbs:                                                      |     verbs:
  - list                                                      |       - list
- apiGroups:                                                  |   - apiGroups:
  - \"\"                                                        |       - \"\"
  resources:                                                  |     resources:
  - events                                                    |       - events
  verbs:                                                      |     verbs:
  - create                                                    |       - create
  - patch                                                     |       - patch
- apiGroups:                                                  |   - apiGroups:
  - discovery.k8s.io                                          |       - discovery.k8s.io
  resources:                                                  |     resources:
  - endpointslices                                            |       - endpointslices
  verbs:                                                      |     verbs:
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - gateway.networking.k8s.io                                 |       - gateway.networking.k8s.io
  resources:                                                  |     resources:
  - gatewayclasses                                            |       - gatewayclasses
  - gateways                                                  |       - gateways
  - httproutes                                                |       - httproutes
  - referencegrants                                           |       - referencegrants
  verbs:                                                      |     verbs:
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - gateway.networking.k8s.io                                 |       - gateway.networking.k8s.io
  resources:                                                  |     resources:
  - httproutes/status                                         |       - httproutes/status
  - gateways/status                                           |       - gateways/status
  - gatewayclasses/status                                     |       - gatewayclasses/status
  verbs:                                                      |     verbs:
  - update                                                    |       - update
- apiGroups:                                                  |   - apiGroups:
  - gateway.nginx.org                                         |       - gateway.nginx.org
  resources:                                                  |     resources:
  - nginxgateways                                             |       - nginxgateways
  verbs:                                                      |     verbs:
  - get                                                       |       - get
  - list                                                      |       - list
  - watch                                                     |       - watch
- apiGroups:                                                  |   - apiGroups:
  - gateway.nginx.org                                         |       - gateway.nginx.org
  resources:                                                  |     resources:
  - nginxgateways/status                                      |       - nginxgateways/status
  verbs:                                                      |     verbs:
  - update                                                    |       - update
- apiGroups:                                                  |   - apiGroups:
  - coordination.k8s.io                                       |       - coordination.k8s.io
  resources:                                                  |     resources:
  - leases                                                    |       - leases
  verbs:                                                      |     verbs:
  - create                                                    |       - create
  - get                                                       |       - get
  - update                                                    |       - update
- apiGroups:                                                  |   - apiGroups:
  - apiextensions.k8s.io                                      |       - apiextensions.k8s.io
  resources:                                                  |     resources:
  - customresourcedefinitions                                 |       - customresourcedefinitions
  verbs:                                                      |     verbs:
  - list                                                      |       - list
  - watch                                                     |       - watch
---                                                             ---
# Source: nginx-gateway-fabric/templates/rbac.yaml            <
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  name: chartsnap-nginx-gateway-fabric                        <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
                                                              >   name: chartsnap-nginx-gateway-fabric
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-nginx-gateway-fabric                            name: chartsnap-nginx-gateway-fabric
subjects:                                                       subjects:
- kind: ServiceAccount                                        |   - kind: ServiceAccount
  name: chartsnap-nginx-gateway-fabric                        |     name: chartsnap-nginx-gateway-fabric
  namespace: nginx-gateway                                    |     namespace: nginx-gateway
---                                                             ---
# Source: nginx-gateway-fabric/templates/service.yaml         <
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  name: chartsnap-nginx-gateway-fabric                        |   annotations:
  namespace: nginx-gateway                                    |     service.beta.kubernetes.io/aws-load-balancer-type: intern
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  annotations:                                                |   name: chartsnap-nginx-gateway-fabric
    service.beta.kubernetes.io/aws-load-balancer-type: intern |   namespace: nginx-gateway
spec:                                                           spec:
  externalTrafficPolicy: Local                                    externalTrafficPolicy: Local
  type: LoadBalancer                                          |   ports:
                                                              >     - name: http
                                                              >       port: 80
                                                              >       protocol: TCP
                                                              >       targetPort: 80
                                                              >     - name: https
                                                              >       port: 443
                                                              >       protocol: TCP
                                                              >       targetPort: 443
  selector:                                                       selector:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
  ports: # Update the following ports to match your Gateway L |     app.kubernetes.io/name: nginx-gateway-fabric
  - name: http                                                |   type: LoadBalancer
    port: 80                                                  <
    protocol: TCP                                             <
    targetPort: 80                                            <
  - name: https                                               <
    port: 443                                                 <
    protocol: TCP                                             <
    targetPort: 443                                           <
---                                                             ---
# Source: nginx-gateway-fabric/templates/deployment.yaml      <
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  name: chartsnap-nginx-gateway-fabric                        <
  namespace: nginx-gateway                                    <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
                                                              >   name: chartsnap-nginx-gateway-fabric
                                                              >   namespace: nginx-gateway
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/name: nginx-gateway-fabric            <
      app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >       app.kubernetes.io/name: nginx-gateway-fabric
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                 <
        app.kubernetes.io/name: nginx-gateway-fabric          <
        app.kubernetes.io/instance: chartsnap                 <
      annotations:                                                    annotations:
        prometheus.io/scrape: \"true\"                          <
        prometheus.io/port: \"9113\"                                      prometheus.io/port: \"9113\"
                                                              >         prometheus.io/scrape: \"true\"
                                                              >       labels:
                                                              >         app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/name: nginx-gateway-fabric
    spec:                                                           spec:
      containers:                                                     containers:
      - args:                                                 |         - args:
        - static-mode                                         |             - static-mode
        - --gateway-ctlr-name=gateway.nginx.org/nginx-gateway |             - --gateway-ctlr-name=gateway.nginx.org/nginx-gat
        - --gatewayclass=nginx                                |             - --gatewayclass=nginx
        - --config=chartsnap-config                           |             - --config=chartsnap-config
        - --service=chartsnap-nginx-gateway-fabric            |             - --service=chartsnap-nginx-gateway-fabric
        - --metrics-port=9113                                 |             - --metrics-port=9113
        - --health-port=8081                                  |             - --health-port=8081
        - --leader-election-lock-name=chartsnap-nginx-gateway |             - --leader-election-lock-name=chartsnap-nginx-gat
        env:                                                  |           env:
        - name: POD_IP                                        |             - name: POD_IP
          valueFrom:                                          |               valueFrom:
            fieldRef:                                         |                 fieldRef:
              fieldPath: status.podIP                         |                   fieldPath: status.podIP
        - name: POD_NAMESPACE                                 |             - name: POD_NAMESPACE
          valueFrom:                                          |               valueFrom:
            fieldRef:                                         |                 fieldRef:
              fieldPath: metadata.namespace                   |                   fieldPath: metadata.namespace
        - name: POD_NAME                                      |             - name: POD_NAME
          valueFrom:                                          |               valueFrom:
            fieldRef:                                         |                 fieldRef:
              fieldPath: metadata.name                        |                   fieldPath: metadata.name
        image: ghcr.io/nginxinc/nginx-gateway-fabric:1.2.0    |           image: ghcr.io/nginxinc/nginx-gateway-fabric:1.2.0
        imagePullPolicy: IfNotPresent                         |           imagePullPolicy: IfNotPresent
        name: nginx-gateway                                   |           name: nginx-gateway
        ports:                                                |           ports:
        - name: metrics                                       |             - containerPort: 9113
          containerPort: 9113                                 |               name: metrics
        - name: health                                        |             - containerPort: 8081
          containerPort: 8081                                 |               name: health
        readinessProbe:                                       |           readinessProbe:
          httpGet:                                            |             httpGet:
            path: /readyz                                     |               path: /readyz
            port: health                                      |               port: health
          initialDelaySeconds: 3                              |             initialDelaySeconds: 3
          periodSeconds: 1                                    |             periodSeconds: 1
        securityContext:                                      |           securityContext:
          allowPrivilegeEscalation: false                     |             allowPrivilegeEscalation: false
          capabilities:                                       |             capabilities:
            add:                                              |               add:
            - KILL                                            |                 - KILL
            drop:                                             |               drop:
            - ALL                                             |                 - ALL
          readOnlyRootFilesystem: true                        |             readOnlyRootFilesystem: true
          runAsUser: 102                                      |             runAsGroup: 1001
          runAsGroup: 1001                                    |             runAsUser: 102
        volumeMounts:                                         |           volumeMounts:
        - name: nginx-conf                                    |             - mountPath: /etc/nginx/conf.d
          mountPath: /etc/nginx/conf.d                        |               name: nginx-conf
        - name: nginx-secrets                                 |             - mountPath: /etc/nginx/secrets
          mountPath: /etc/nginx/secrets                       |               name: nginx-secrets
        - name: nginx-run                                     |             - mountPath: /var/run/nginx
          mountPath: /var/run/nginx                           |               name: nginx-run
      - image: ghcr.io/nginxinc/nginx-gateway-fabric/nginx:1. |         - image: ghcr.io/nginxinc/nginx-gateway-fabric/nginx:
        imagePullPolicy: IfNotPresent                         |           imagePullPolicy: IfNotPresent
        name: nginx                                           |           name: nginx
        ports:                                                |           ports:
        - containerPort: 80                                   |             - containerPort: 80
          name: http                                          |               name: http
        - containerPort: 443                                  |             - containerPort: 443
          name: https                                         |               name: https
        securityContext:                                      |           securityContext:
          capabilities:                                       |             capabilities:
            add:                                              |               add:
            - NET_BIND_SERVICE                                |                 - NET_BIND_SERVICE
            drop:                                             |               drop:
            - ALL                                             |                 - ALL
          readOnlyRootFilesystem: true                        |             readOnlyRootFilesystem: true
          runAsUser: 101                                      |             runAsGroup: 1001
          runAsGroup: 1001                                    |             runAsUser: 101
        volumeMounts:                                         |           volumeMounts:
        - name: nginx-conf                                    |             - mountPath: /etc/nginx/conf.d
          mountPath: /etc/nginx/conf.d                        |               name: nginx-conf
        - name: nginx-secrets                                 |             - mountPath: /etc/nginx/secrets
          mountPath: /etc/nginx/secrets                       |               name: nginx-secrets
        - name: nginx-run                                     |             - mountPath: /var/run/nginx
          mountPath: /var/run/nginx                           |               name: nginx-run
        - name: nginx-cache                                   |             - mountPath: /var/cache/nginx
          mountPath: /var/cache/nginx                         |               name: nginx-cache
        - name: nginx-lib                                     |             - mountPath: /var/lib/nginx
          mountPath: /var/lib/nginx                           |               name: nginx-lib
      terminationGracePeriodSeconds: 30                       <
      serviceAccountName: chartsnap-nginx-gateway-fabric      <
      shareProcessNamespace: true                             <
      securityContext:                                                securityContext:
        fsGroup: 1001                                                   fsGroup: 1001
        runAsNonRoot: true                                              runAsNonRoot: true
                                                              >       serviceAccountName: chartsnap-nginx-gateway-fabric
                                                              >       shareProcessNamespace: true
                                                              >       terminationGracePeriodSeconds: 30
      volumes:                                                        volumes:
      - name: nginx-conf                                      |         - emptyDir: {}
        emptyDir: {}                                          |           name: nginx-conf
      - name: nginx-secrets                                   |         - emptyDir: {}
        emptyDir: {}                                          |           name: nginx-secrets
      - name: nginx-run                                       |         - emptyDir: {}
        emptyDir: {}                                          |           name: nginx-run
      - name: nginx-cache                                     |         - emptyDir: {}
        emptyDir: {}                                          |           name: nginx-cache
      - name: nginx-lib                                       |         - emptyDir: {}
        emptyDir: {}                                          |           name: nginx-lib
---                                                             ---
# Source: nginx-gateway-fabric/templates/gatewayclass.yaml    <
apiVersion: gateway.networking.k8s.io/v1                        apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass                                              kind: GatewayClass
metadata:                                                       metadata:
  name: nginx                                                 <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
                                                              >   name: nginx
spec:                                                           spec:
  controllerName: gateway.nginx.org/nginx-gateway-controller      controllerName: gateway.nginx.org/nginx-gateway-controller
---                                                             ---
# Source: nginx-gateway-fabric/templates/nginxgateway.yaml    <
apiVersion: gateway.nginx.org/v1alpha1                          apiVersion: gateway.nginx.org/v1alpha1
kind: NginxGateway                                              kind: NginxGateway
metadata:                                                       metadata:
  name: chartsnap-config                                      <
  namespace: nginx-gateway                                    <
  labels:                                                         labels:
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
    app.kubernetes.io/version: \"1.2.0\"                        <
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/version: 1.2.0
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
                                                              >   name: chartsnap-config
                                                              >   namespace: nginx-gateway
spec:                                                           spec:
  logging:                                                        logging:
    level: info                                                     level: info
"""

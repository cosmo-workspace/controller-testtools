['sdiff ../../example/app1/__snapshots__/default.snap <(helm template chartsnap ../../example/app1 -n default)']
SnapShot = """
[default]                                                     | ---
SnapShot = \"\"\"                                                | # Source: app1/templates/serviceaccount.yaml
- object:                                                     | apiVersion: v1
    apiVersion: apps/v1                                       | kind: ServiceAccount
    kind: Deployment                                          | metadata:
                                                              >   name: chartsnap-app1
                                                              >   labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
                                                              >     app.kubernetes.io/managed-by: Helm
                                                              > automountServiceAccountToken: true
                                                              > ---
                                                              > # Source: app1/templates/cert.yaml
                                                              > apiVersion: v1
                                                              > kind: Secret
                                                              > metadata:
                                                              >   name: app1-cert
                                                              >   namespace: default
                                                              >   labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
                                                              >     app.kubernetes.io/managed-by: Helm
                                                              > type: kubernetes.io/tls
                                                              > data:
                                                              >   ca.crt: REPLACEMENT  tls.crt: REPLACEMENT  tls.key: REPLACE
                                                              > apiVersion: v1
                                                              > kind: Service
                                                              > metadata:
                                                              >   name: chartsnap-app1
                                                              >   labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
                                                              >     app.kubernetes.io/managed-by: Helm
                                                              > spec:
                                                              >   type: ClusterIP
                                                              >   ports:
                                                              >     - port: 80
                                                              >       targetPort: http
                                                              >       protocol: TCP
                                                              >       name: http
                                                              >   selector:
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              > ---
                                                              > # Source: app1/templates/deployment.yaml
                                                              > apiVersion: apps/v1
                                                              > kind: Deployment
                                                              > metadata:
                                                              >   name: chartsnap-app1
                                                              >   labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
                                                              >     app.kubernetes.io/managed-by: Helm
                                                              > spec:
                                                              >   replicas: 1
                                                              >   selector:
                                                              >     matchLabels:
                                                              >       app.kubernetes.io/name: app1
                                                              >       app.kubernetes.io/instance: chartsnap
                                                              >   template:
    metadata:                                                       metadata:
        labels:                                               |       labels:
            app.kubernetes.io/instance: chartsnap             |         helm.sh/chart: app1-0.1.0
            app.kubernetes.io/managed-by: Helm                |         app.kubernetes.io/name: app1
            app.kubernetes.io/name: app1                      |         app.kubernetes.io/instance: chartsnap
            app.kubernetes.io/version: 1.16.0                 |         app.kubernetes.io/version: \"1.16.0\"
            helm.sh/chart: app1-0.1.0                         |         app.kubernetes.io/managed-by: Helm
        name: chartsnap-app1                                  <
    spec:                                                           spec:
        replicas: 1                                           |       serviceAccountName: chartsnap-app1
        selector:                                             |       securityContext:
            matchLabels:                                      |         {}
                app.kubernetes.io/instance: chartsnap         |       containers:
                app.kubernetes.io/name: app1                  |         - name: app1
        template:                                             |           securityContext:
            metadata:                                         |             {}
                labels:                                       |           image: \"nginx:1.16.0\"
                    app.kubernetes.io/instance: chartsnap     |           imagePullPolicy: IfNotPresent
                    app.kubernetes.io/managed-by: Helm        |           ports:
                    app.kubernetes.io/name: app1              <
                    app.kubernetes.io/version: 1.16.0         <
                    helm.sh/chart: app1-0.1.0                 <
            spec:                                             <
                containers:                                   <
                    - image: nginx:1.16.0                     <
                      imagePullPolicy: IfNotPresent           <
                      livenessProbe:                          <
                        httpGet:                              <
                            path: /                           <
                            port: http                        <
                      name: app1                              <
                      ports:                                  <
                        - containerPort: 80                   <
                          name: http                          <
                          protocol: TCP                       <
                      readinessProbe:                         <
                        httpGet:                              <
                            path: /                           <
                            port: http                        <
                      resources: {}                           <
                      securityContext: {}                     <
                securityContext: {}                           <
                serviceAccountName: chartsnap-app1            <
- object:                                                     <
    apiVersion: v1                                            <
    kind: Pod                                                 <
    metadata:                                                 <
        annotations:                                          <
            helm.sh/hook: test                                <
        labels:                                               <
            app.kubernetes.io/instance: chartsnap             <
            app.kubernetes.io/managed-by: Helm                <
            app.kubernetes.io/name: app1                      <
            app.kubernetes.io/version: 1.16.0                 <
            helm.sh/chart: app1-0.1.0                         <
        name: chartsnap-app1-test-connection                  <
    spec:                                                     <
        containers:                                           <
            - args:                                           <
                - chartsnap-app1:80                           <
              command:                                        <
                - wget                                        <
              image: busybox                                  <
              name: wget                                      <
        restartPolicy: Never                                  <
- object:                                                     <
    apiVersion: v1                                            <
    data:                                                     <
        ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFR <
        tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURh <
        tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpN <
    kind: Secret                                              <
    metadata:                                                 <
        labels:                                               <
            app.kubernetes.io/instance: chartsnap             <
            app.kubernetes.io/managed-by: Helm                <
            app.kubernetes.io/name: app1                      <
            app.kubernetes.io/version: 1.16.0                 <
            helm.sh/chart: app1-0.1.0                         <
        name: app1-cert                                       <
        namespace: default                                    <
    type: kubernetes.io/tls                                   <
- object:                                                     <
    apiVersion: v1                                            <
    kind: Service                                             <
    metadata:                                                 <
        labels:                                               <
            app.kubernetes.io/instance: chartsnap             <
            app.kubernetes.io/managed-by: Helm                <
            app.kubernetes.io/name: app1                      <
            app.kubernetes.io/version: 1.16.0                 <
            helm.sh/chart: app1-0.1.0                         <
        name: chartsnap-app1                                  <
    spec:                                                     <
        ports:                                                <
            - name: http                                                    - name: http
              port: 80                                        |               containerPort: 80
              protocol: TCP                                                   protocol: TCP
              targetPort: http                                |           livenessProbe:
        selector:                                             |             httpGet:
            app.kubernetes.io/instance: chartsnap             |               path: /
            app.kubernetes.io/name: app1                      |               port: http
        type: ClusterIP                                       |           readinessProbe:
- object:                                                     |             httpGet:
    apiVersion: v1                                            |               path: /
    automountServiceAccountToken: true                        |               port: http
    kind: ServiceAccount                                      |           resources:
    metadata:                                                 |             {}
        labels:                                               | ---
            app.kubernetes.io/instance: chartsnap             | # Source: app1/templates/tests/test-connection.yaml
            app.kubernetes.io/managed-by: Helm                | apiVersion: v1
            app.kubernetes.io/name: app1                      | kind: Pod
            app.kubernetes.io/version: 1.16.0                 | metadata:
            helm.sh/chart: app1-0.1.0                         |   name: \"chartsnap-app1-test-connection\"
        name: chartsnap-app1                                  |   labels:
\"\"\"                                                           |     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
                                                              >     app.kubernetes.io/managed-by: Helm
                                                              >   annotations:
                                                              >     \"helm.sh/hook\": test
                                                              > spec:
                                                              >   containers:
                                                              >     - name: wget
                                                              >       image: busybox
                                                              >       command: ['wget']
                                                              >       args: ['chartsnap-app1:80']
                                                              >   restartPolicy: Never
"""

['sdiff ../../example/app1/test/__snapshots__/test_certmanager_enabled.snap <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_certmanager_enabled.yaml -n default)']
SnapShot = """
                                                              > ---
                                                              > # Source: app1/templates/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
automountServiceAccountToken: true                            <
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              | automountServiceAccountToken: true
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
---                                                             ---
                                                              > # Source: app1/templates/service.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
                                                              >   type: ClusterIP
  ports:                                                          ports:
    - name: http                                              |     - port: 80
      port: 80                                                <
      protocol: TCP                                           <
      targetPort: http                                                targetPort: http
                                                              >       protocol: TCP
                                                              >       name: http
  selector:                                                       selector:
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
  type: ClusterIP                                             |     app.kubernetes.io/instance: chartsnap
---                                                             ---
                                                              > # Source: app1/templates/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
                                                              >       app.kubernetes.io/instance: chartsnap
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
                                                              >         helm.sh/chart: app1-0.1.0
                                                              >         app.kubernetes.io/name: app1
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.16.0\"
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/version: 1.16.0                     <
        helm.sh/chart: app1-0.1.0                             <
    spec:                                                           spec:
                                                              >       serviceAccountName: chartsnap-app1
                                                              >       securityContext:
                                                              >         {}
      containers:                                                     containers:
        - image: nginx:1.16.0                                 |         - name: app1
                                                              >           securityContext:
                                                              >             {}
                                                              >           image: \"nginx:1.16.0\"
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
                                                              >           ports:
                                                              >             - name: http
                                                              >               containerPort: 80
                                                              >               protocol: TCP
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          name: app1                                          <
          ports:                                              <
            - containerPort: 80                               <
              name: http                                      <
              protocol: TCP                                   <
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources: {}                                       |           resources:
          securityContext: {}                                 |             {}
      securityContext: {}                                     <
      serviceAccountName: chartsnap-app1                      <
---                                                             ---
                                                              > # Source: app1/templates/cert.yaml
apiVersion: cert-manager.io/v1                                  apiVersion: cert-manager.io/v1
kind: Certificate                                               kind: Certificate
metadata:                                                       metadata:
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: app1-cert                                                 name: app1-cert
  namespace: default                                              namespace: default
spec:                                                           spec:
  dnsNames:                                                       dnsNames:
    - chartsnap-app1.default.svc                                    - chartsnap-app1.default.svc
    - chartsnap-app1.default.svc.cluster.local                      - chartsnap-app1.default.svc.cluster.local
  issuerRef:                                                      issuerRef:
    kind: Issuer                                                    kind: Issuer
    name: nameOfClusterIssuer                                       name: nameOfClusterIssuer
  secretName: app1-cert                                           secretName: app1-cert
---                                                             ---
                                                              > # Source: app1/templates/tests/test-connection.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  annotations:                                                |   name: \"chartsnap-app1-test-connection\"
    helm.sh/hook: test                                        <
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              |   annotations:
    app.kubernetes.io/version: 1.16.0                         |     \"helm.sh/hook\": test
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1-test-connection                        <
spec:                                                           spec:
  containers:                                                     containers:
    - args:                                                   |     - name: wget
        - chartsnap-app1:80                                   <
      command:                                                <
        - wget                                                <
      image: busybox                                                  image: busybox
      name: wget                                              |       command: ['wget']
                                                              >       args: ['chartsnap-app1:80']
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff ../../example/app1/test/__snapshots__/test_hpa_enabled.snap <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_hpa_enabled.yaml -n default)']
SnapShot = """
                                                              > ---
                                                              > # Source: app1/templates/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
automountServiceAccountToken: true                            <
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              | automountServiceAccountToken: true
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
---                                                             ---
                                                              > # Source: app1/templates/cert.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  ca.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==                        <
  tls.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==                       <
  tls.key: IyMjRFlOQU1JQ19GSUVMRCMjIw==                       <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
                                                              >   name: app1-cert
                                                              >   namespace: default
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: app1-cert                                             <
  namespace: default                                          <
type: kubernetes.io/tls                                         type: kubernetes.io/tls
---                                                           | data:
                                                              >   ca.crt: REPLACEMENT  tls.crt: REPLACEMENT  tls.key: REPLACE
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
                                                              >   type: ClusterIP
  ports:                                                          ports:
    - name: http                                              |     - port: 80
      port: 80                                                <
      protocol: TCP                                           <
      targetPort: http                                                targetPort: http
                                                              >       protocol: TCP
                                                              >       name: http
  selector:                                                       selector:
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
  type: ClusterIP                                             |     app.kubernetes.io/instance: chartsnap
---                                                             ---
                                                              > # Source: app1/templates/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
                                                              >       app.kubernetes.io/instance: chartsnap
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
                                                              >         helm.sh/chart: app1-0.1.0
                                                              >         app.kubernetes.io/name: app1
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.16.0\"
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/version: 1.16.0                     <
        helm.sh/chart: app1-0.1.0                             <
    spec:                                                           spec:
                                                              >       serviceAccountName: chartsnap-app1
                                                              >       securityContext:
                                                              >         {}
      containers:                                                     containers:
        - image: nginx:1.16.0                                 |         - name: app1
                                                              >           securityContext:
                                                              >             {}
                                                              >           image: \"nginx:1.16.0\"
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
                                                              >           ports:
                                                              >             - name: http
                                                              >               containerPort: 80
                                                              >               protocol: TCP
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          name: app1                                          <
          ports:                                              <
            - containerPort: 80                               <
              name: http                                      <
              protocol: TCP                                   <
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources: {}                                       |           resources:
          securityContext: {}                                 |             {}
      securityContext: {}                                     <
      serviceAccountName: chartsnap-app1                      <
---                                                             ---
                                                              > # Source: app1/templates/hpa.yaml
apiVersion: autoscaling/v2                                      apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler                                   kind: HorizontalPodAutoscaler
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
                                                              >   scaleTargetRef:
                                                              >     apiVersion: apps/v1
                                                              >     kind: Deployment
                                                              >     name: chartsnap-app1
                                                              >   minReplicas: 1
  maxReplicas: 10                                                 maxReplicas: 10
  metrics:                                                        metrics:
    - resource:                                               |     - type: Resource
                                                              >       resource:
        name: cpu                                                       name: cpu
        target:                                                         target:
          averageUtilization: 65                              <
          type: Utilization                                               type: Utilization
      type: Resource                                          |           averageUtilization: 65
  minReplicas: 1                                              <
  scaleTargetRef:                                             <
    apiVersion: apps/v1                                       <
    kind: Deployment                                          <
    name: chartsnap-app1                                      <
---                                                             ---
                                                              > # Source: app1/templates/tests/test-connection.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  annotations:                                                |   name: \"chartsnap-app1-test-connection\"
    helm.sh/hook: test                                        <
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              |   annotations:
    app.kubernetes.io/version: 1.16.0                         |     \"helm.sh/hook\": test
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1-test-connection                        <
spec:                                                           spec:
  containers:                                                     containers:
    - args:                                                   |     - name: wget
        - chartsnap-app1:80                                   <
      command:                                                <
        - wget                                                <
      image: busybox                                                  image: busybox
      name: wget                                              |       command: ['wget']
                                                              >       args: ['chartsnap-app1:80']
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff ../../example/app1/test/__snapshots__/test_ingress_enabled.snap <(helm template chartsnap ../../example/app1 -f ../../example/app1/test/test_ingress_enabled.yaml -n default)']
SnapShot = """
                                                              > ---
                                                              > # Source: app1/templates/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
automountServiceAccountToken: true                            <
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              | automountServiceAccountToken: true
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
---                                                             ---
                                                              > # Source: app1/templates/cert.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  ca.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==                        <
  tls.crt: IyMjRFlOQU1JQ19GSUVMRCMjIw==                       <
  tls.key: IyMjRFlOQU1JQ19GSUVMRCMjIw==                       <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
                                                              >   name: app1-cert
                                                              >   namespace: default
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: app1-cert                                             <
  namespace: default                                          <
type: kubernetes.io/tls                                         type: kubernetes.io/tls
---                                                           | data:
                                                              >   ca.crt: REPLACEMENT  tls.crt: REPLACEMENT  tls.key: REPLACE
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
                                                              >   type: ClusterIP
  ports:                                                          ports:
    - name: http                                              |     - port: 80
      port: 80                                                <
      protocol: TCP                                           <
      targetPort: http                                                targetPort: http
                                                              >       protocol: TCP
                                                              >       name: http
  selector:                                                       selector:
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
  type: ClusterIP                                             |     app.kubernetes.io/instance: chartsnap
---                                                             ---
                                                              > # Source: app1/templates/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: chartsnap-app1
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              <
    app.kubernetes.io/version: 1.16.0                         <
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/name: app1                                    app.kubernetes.io/name: app1
                                                              >       app.kubernetes.io/instance: chartsnap
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
                                                              >         helm.sh/chart: app1-0.1.0
                                                              >         app.kubernetes.io/name: app1
        app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.16.0\"
        app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app1                          <
        app.kubernetes.io/version: 1.16.0                     <
        helm.sh/chart: app1-0.1.0                             <
    spec:                                                           spec:
                                                              >       serviceAccountName: chartsnap-app1
                                                              >       securityContext:
                                                              >         {}
      containers:                                                     containers:
        - image: nginx:1.16.0                                 |         - name: app1
                                                              >           securityContext:
                                                              >             {}
                                                              >           image: \"nginx:1.16.0\"
          imagePullPolicy: IfNotPresent                                   imagePullPolicy: IfNotPresent
                                                              >           ports:
                                                              >             - name: http
                                                              >               containerPort: 80
                                                              >               protocol: TCP
          livenessProbe:                                                  livenessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          name: app1                                          <
          ports:                                              <
            - containerPort: 80                               <
              name: http                                      <
              protocol: TCP                                   <
          readinessProbe:                                                 readinessProbe:
            httpGet:                                                        httpGet:
              path: /                                                         path: /
              port: http                                                      port: http
          resources: {}                                       |           resources:
          securityContext: {}                                 |             {}
      securityContext: {}                                     <
      serviceAccountName: chartsnap-app1                      <
---                                                             ---
                                                              > # Source: app1/templates/ingress.yaml
apiVersion: networking.k8s.io/v1                                apiVersion: networking.k8s.io/v1
kind: Ingress                                                   kind: Ingress
metadata:                                                       metadata:
  annotations:                                                |   name: chartsnap-app1
    cert-manager.io/cluster-issuer: nameOfClusterIssuer       <
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              |   annotations:
    app.kubernetes.io/version: 1.16.0                         |     cert-manager.io/cluster-issuer: nameOfClusterIssuer
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1                                        <
spec:                                                           spec:
  ingressClassName: nginx                                         ingressClassName: nginx
                                                              >   tls:
                                                              >     - hosts:
                                                              >         - \"chart-example.local\"
                                                              >       secretName: chart-example-tls
  rules:                                                          rules:
    - host: chart-example.local                               |     - host: \"chart-example.local\"
      http:                                                           http:
        paths:                                                          paths:
          - backend:                                          |           - path: /
                                                              >             pathType: ImplementationSpecific
                                                              >             backend:
              service:                                                        service:
                name: chartsnap-app1                                            name: chartsnap-app1
                port:                                                           port:
                  number: 80                                                      number: 80
            path: /                                           <
            pathType: ImplementationSpecific                  <
  tls:                                                        <
    - hosts:                                                  <
        - chart-example.local                                 <
      secretName: chart-example-tls                           <
---                                                             ---
                                                              > # Source: app1/templates/tests/test-connection.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Pod                                                       kind: Pod
metadata:                                                       metadata:
  annotations:                                                |   name: \"chartsnap-app1-test-connection\"
    helm.sh/hook: test                                        <
  labels:                                                         labels:
                                                              >     helm.sh/chart: app1-0.1.0
                                                              >     app.kubernetes.io/name: app1
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.16.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app1                              |   annotations:
    app.kubernetes.io/version: 1.16.0                         |     \"helm.sh/hook\": test
    helm.sh/chart: app1-0.1.0                                 <
  name: chartsnap-app1-test-connection                        <
spec:                                                           spec:
  containers:                                                     containers:
    - args:                                                   |     - name: wget
        - chartsnap-app1:80                                   <
      command:                                                <
        - wget                                                <
      image: busybox                                                  image: busybox
      name: wget                                              |       command: ['wget']
                                                              >       args: ['chartsnap-app1:80']
  restartPolicy: Never                                            restartPolicy: Never
"""

['sdiff ../../example/remote/__snapshots__/cilium.values.snap <(helm template chartsnap cilium -f ../../example/remote/cilium.values.yaml -n kube-system --repo https://helm.cilium.io)']
SnapShot = """
                                                              > ---
                                                              > # Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: cilium                                                |   name: \"cilium\"
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/cilium-operator/serviceaccount.yam
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: cilium-operator                                       |   name: \"cilium-operator\"
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: hubble-relay                                          |   name: \"hubble-relay\"
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  name: hubble-ui                                             |   name: \"hubble-ui\"
  namespace: kube-system                                          namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  ca.crt: '###DYNAMIC_FIELD###'                               <
  ca.key: '###DYNAMIC_FIELD###'                               <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: cilium-ca                                                 name: cilium-ca
  namespace: kube-system                                          namespace: kube-system
---                                                           <
apiVersion: v1                                                <
data:                                                           data:
  ca.crt: '###DYNAMIC_FIELD###'                               |   ca.crt: REPLACEMENT  ca.key: REPLACEMENT Source: cilium/tem
  tls.crt: '###DYNAMIC_FIELD###'                              | apiVersion: v1
  tls.key: '###DYNAMIC_FIELD###'                              <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: hubble-relay-client-certs                                 name: hubble-relay-client-certs
  namespace: kube-system                                          namespace: kube-system
type: kubernetes.io/tls                                         type: kubernetes.io/tls
---                                                           <
apiVersion: v1                                                <
data:                                                           data:
  ca.crt: '###DYNAMIC_FIELD###'                               |   ca.crt:  REPLACEMENT  tls.crt: REPLACEMENT  tls.key: REPLAC
  tls.crt: '###DYNAMIC_FIELD###'                              | apiVersion: v1
  tls.key: '###DYNAMIC_FIELD###'                              <
kind: Secret                                                    kind: Secret
metadata:                                                       metadata:
  name: hubble-server-certs                                       name: hubble-server-certs
  namespace: kube-system                                          namespace: kube-system
type: kubernetes.io/tls                                         type: kubernetes.io/tls
---                                                           | data:
                                                              >   ca.crt:  REPLACEMENT  tls.crt: REPLACEMENT  tls.key: REPLAC
apiVersion: v1                                                  apiVersion: v1
                                                              > kind: ConfigMap
                                                              > metadata:
                                                              >   name: cilium-config
                                                              >   namespace: kube-system
data:                                                           data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready   | 
  arping-refresh-period: 30s                                  |   # Identity allocation mode selects how identities are share
  auto-create-cilium-node-resource: \"true\"                    |   # nodes by setting how they are stored. The options are \"cr
  auto-direct-node-routes: \"false\"                            |   # - \"crd\" stores identities in kubernetes as CRDs (custom r
  bpf-lb-acceleration: disabled                               |   #   These can be queried with:
  bpf-lb-external-clusterip: \"false\"                          |   #     kubectl get ciliumid
  bpf-lb-map-max: \"65536\"                                     |   # - \"kvstore\" stores identities in an etcd kvstore, that is
  bpf-lb-sock: \"false\"                                        |   #   configured below. Cilium versions before 1.6 supported 
  bpf-map-dynamic-size-ratio: \"0.0025\"                        |   #   backend. Upgrades from these older cilium versions shou
  bpf-policy-map-max: \"16384\"                                 |   #   the kvstore by commenting out the identity-allocation-m
  bpf-root: /sys/fs/bpf                                       |   #   setting it to \"kvstore\".
  cgroup-root: /run/cilium/cgroupv2                           |   identity-allocation-mode: crd
  cilium-endpoint-gc-interval: 5m0s                           |   identity-heartbeat-timeout: \"30m0s\"
  cluster-id: \"0\"                                             |   identity-gc-interval: \"15m0s\"
  cluster-name: default                                       |   cilium-endpoint-gc-interval: \"5m0s\"
  cni-exclusive: \"true\"                                       |   nodes-gc-interval: \"5m0s\"
  cni-log-file: /var/run/cilium/cilium-cni.log                |   skip-cnp-status-startup-clean: \"false\"
  custom-cni-conf: \"false\"                                    | 
                                                              >   # If you want to run cilium in debug mode change this value
  debug: \"false\"                                                  debug: \"false\"
  debug-verbose: \"\"                                               debug-verbose: \"\"
  dnsproxy-enable-transparent-mode: \"true\"                    |   # The agent can be put into the following three policy enfo
  ec2-api-endpoint: \"\"                                        |   # default, always and never.
  egress-gateway-reconciliation-trigger-interval: 1s          |   # https://docs.cilium.io/en/latest/security/policy/intro/#p
  egress-masquerade-interfaces: eth0                          |   enable-policy: \"default\"
  enable-auto-protect-node-port-range: \"true\"                 |   policy-cidr-match-mode: \"\"
  enable-bgp-control-plane: \"false\"                           |   # Port to expose Envoy metrics (e.g. \"9964\"). Envoy metrics
                                                              >   # field is not set.
                                                              >   proxy-prometheus-port: \"9964\"
                                                              >   # If you want metrics enabled in cilium-operator, set the p
                                                              >   # which the Cilium Operator will have their metrics exposed
                                                              >   # NOTE that this will open the port on the nodes where Cili
                                                              >   # is scheduled.
                                                              >   operator-prometheus-serve-addr: \":9963\"
                                                              >   enable-metrics: \"true\"
                                                              > 
                                                              >   # Enable IPv4 addressing. If enabled, all endpoints are all
                                                              >   # address.
                                                              >   enable-ipv4: \"true\"
                                                              > 
                                                              >   # Enable IPv6 addressing. If enabled, all endpoints are all
                                                              >   # address.
                                                              >   enable-ipv6: \"false\"
                                                              >   # Users who wish to specify their own custom CNI configurat
                                                              >   # custom-cni-conf to \"true\", otherwise Cilium may overwrite
                                                              >   custom-cni-conf: \"false\"
  enable-bpf-clock-probe: \"false\"                                 enable-bpf-clock-probe: \"false\"
  enable-endpoint-health-checking: \"true\"                     |   # If you want cilium monitor to aggregate tracing for packe
                                                              >   # to \"low\", \"medium\", or \"maximum\". The higher the level, t
                                                              >   # that will be seen in monitor output.
                                                              >   monitor-aggregation: medium
                                                              > 
                                                              >   # The monitor aggregation interval governs the typical time
                                                              >   # notification events for each allowed connection.
                                                              >   #
                                                              >   # Only effective when monitor aggregation is set to \"medium
                                                              >   monitor-aggregation-interval: \"5s\"
                                                              > 
                                                              >   # The monitor aggregation flags determine which TCP flags w
                                                              >   # first observation, cause monitor notifications to be gene
                                                              >   #
                                                              >   # Only effective when monitor aggregation is set to \"medium
                                                              >   monitor-aggregation-flags: all
                                                              >   # Specifies the ratio (0.0-1.0] of total system memory to u
                                                              >   # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps
                                                              >   bpf-map-dynamic-size-ratio: \"0.0025\"
                                                              >   # bpf-policy-map-max specifies the maximum number of entrie
                                                              >   # policy map (per endpoint)
                                                              >   bpf-policy-map-max: \"16384\"
                                                              >   # bpf-lb-map-max specifies the maximum number of entries in
                                                              >   # backend and affinity maps.
                                                              >   bpf-lb-map-max: \"65536\"
                                                              >   bpf-lb-external-clusterip: \"false\"
                                                              > 
                                                              >   # Pre-allocation of map entries allows per-packet latency t
                                                              >   # the expense of up-front memory allocation for the entries
                                                              >   # default value below will minimize memory usage in the def
                                                              >   # users who are sensitive to latency may consider setting t
                                                              >   #
                                                              >   # This option was introduced in Cilium 1.4. Cilium 1.3 and 
                                                              >   # this option and behave as though it is set to \"true\".
                                                              >   #
                                                              >   # If this value is modified, then during the next Cilium st
                                                              >   # of existing endpoints and tracking of ongoing connections
                                                              >   # As a result, reply packets may be dropped and the load-ba
                                                              >   # for established connections may change.
                                                              >   #
                                                              >   # If this option is set to \"false\" during an upgrade from 1
                                                              >   # 1.4 or later, then it may cause one-time disruptions duri
                                                              >   preallocate-bpf-maps: \"false\"
                                                              > 
                                                              >   # Regular expression matching compatible Istio sidecar isti
                                                              >   # container image names
                                                              >   sidecar-istio-proxy-image: \"cilium/istio_proxy\"
                                                              > 
                                                              >   # Name of the cluster. Only relevant when building a mesh o
                                                              >   cluster-name: default
                                                              >   # Unique ID of the cluster. Must be unique across all conne
                                                              >   # in the range of 1 and 255. Only relevant when building a 
                                                              >   cluster-id: \"0\"
                                                              > 
                                                              >   # Encapsulation mode for communication between nodes
                                                              >   # Possible values:
                                                              >   #   - disabled
                                                              >   #   - vxlan (default)
                                                              >   #   - geneve
                                                              >   routing-mode: \"native\"
                                                              >   service-no-backend-response: \"reject\"
  enable-endpoint-routes: \"true\"                                  enable-endpoint-routes: \"true\"
  enable-external-ips: \"false\"                                |   auto-create-cilium-node-resource: \"true\"
  enable-health-check-loadbalancer-ip: \"false\"                |   update-ec2-adapter-limit-via-api: \"true\"
  enable-health-check-nodeport: \"true\"                        |   ec2-api-endpoint: \"\"
  enable-health-checking: \"true\"                              |   eni-tags: \"{}\"
  enable-host-port: \"false\"                                   | 
  enable-hubble: \"true\"                                       | 
  enable-ipv4: \"true\"                                         |   # Enables L7 proxy for L7 policy enforcement and visibility
  enable-ipv4-big-tcp: \"false\"                                |   enable-l7-proxy: \"true\"
                                                              > 
  enable-ipv4-masquerade: \"true\"                                  enable-ipv4-masquerade: \"true\"
  enable-ipv6: \"false\"                                        |   enable-ipv4-big-tcp: \"false\"
  enable-ipv6-big-tcp: \"false\"                                    enable-ipv6-big-tcp: \"false\"
  enable-ipv6-masquerade: \"true\"                                  enable-ipv6-masquerade: \"true\"
  enable-k8s-networkpolicy: \"true\"                            <
  enable-k8s-terminating-endpoint: \"true\"                     <
  enable-l2-neigh-discovery: \"true\"                           <
  enable-l7-proxy: \"true\"                                     <
  enable-local-redirect-policy: \"false\"                       <
  enable-masquerade-to-route-source: \"false\"                      enable-masquerade-to-route-source: \"false\"
  enable-metrics: \"true\"                                      |   egress-masquerade-interfaces: eth0
  enable-node-port: \"false\"                                   | 
  enable-policy: default                                      <
  enable-remote-node-identity: \"true\"                         <
  enable-sctp: \"false\"                                        <
  enable-svc-source-range-check: \"true\"                       <
  enable-vtep: \"false\"                                        <
  enable-well-known-identities: \"false\"                       <
  enable-xt-socket-fallback: \"true\"                               enable-xt-socket-fallback: \"true\"
  eni-tags: '{}'                                              <
  external-envoy-proxy: \"false\"                               <
  hubble-disable-tls: \"false\"                                 <
  hubble-export-file-max-backups: \"5\"                         <
  hubble-export-file-max-size-mb: \"10\"                        <
  hubble-listen-address: :4244                                <
  hubble-socket-path: /var/run/cilium/hubble.sock             <
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt <
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/clie <
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key  <
  identity-allocation-mode: crd                               <
  identity-gc-interval: 15m0s                                 <
  identity-heartbeat-timeout: 30m0s                           <
  install-no-conntrack-iptables-rules: \"false\"                    install-no-conntrack-iptables-rules: \"false\"
  ipam: eni                                                   | 
  ipam-cilium-node-update-rate: 15s                           |   auto-direct-node-routes: \"false\"
  k8s-client-burst: \"20\"                                      |   enable-local-redirect-policy: \"false\"
  k8s-client-qps: \"10\"                                        | 
  kube-proxy-replacement: \"false\"                                 kube-proxy-replacement: \"false\"
  kube-proxy-replacement-healthz-bind-address: \"\"                 kube-proxy-replacement-healthz-bind-address: \"\"
  max-connected-clusters: \"255\"                               |   bpf-lb-sock: \"false\"
  mesh-auth-enabled: \"true\"                                   |   enable-host-port: \"false\"
  mesh-auth-gc-interval: 5m0s                                 |   enable-external-ips: \"false\"
  mesh-auth-queue-size: \"1024\"                                |   enable-node-port: \"false\"
  mesh-auth-rotated-identities-queue-size: \"1024\"             |   enable-health-check-nodeport: \"true\"
  monitor-aggregation: medium                                 |   enable-health-check-loadbalancer-ip: \"false\"
  monitor-aggregation-flags: all                              <
  monitor-aggregation-interval: 5s                            <
  node-port-bind-protection: \"true\"                               node-port-bind-protection: \"true\"
  nodes-gc-interval: 5m0s                                     |   enable-auto-protect-node-port-range: \"true\"
  operator-api-serve-addr: 127.0.0.1:9234                     |   bpf-lb-acceleration: \"disabled\"
  operator-prometheus-serve-addr: :9963                       |   enable-svc-source-range-check: \"true\"
  policy-cidr-match-mode: \"\"                                  |   enable-l2-neigh-discovery: \"true\"
  preallocate-bpf-maps: \"false\"                               |   arping-refresh-period: \"30s\"
  procfs: /host/proc                                          |   enable-k8s-networkpolicy: \"true\"
  proxy-connect-timeout: \"2\"                                  |   # Tell the agent to generate and write a CNI configuration 
  proxy-max-connection-duration-seconds: \"0\"                  |   write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.co
  proxy-max-requests-per-connection: \"0\"                      |   cni-exclusive: \"true\"
  proxy-prometheus-port: \"9964\"                               |   cni-log-file: \"/var/run/cilium/cilium-cni.log\"
                                                              >   enable-endpoint-health-checking: \"true\"
                                                              >   enable-health-checking: \"true\"
                                                              >   enable-well-known-identities: \"false\"
                                                              >   enable-remote-node-identity: \"true\"
                                                              >   synchronize-k8s-nodes: \"true\"
                                                              >   operator-api-serve-addr: \"127.0.0.1:9234\"
                                                              >   # Enable Hubble gRPC service.
                                                              >   enable-hubble: \"true\"
                                                              >   # UNIX domain socket for Hubble server to listen to.
                                                              >   hubble-socket-path: \"/var/run/cilium/hubble.sock\"
                                                              >   hubble-export-file-max-size-mb: \"10\"
                                                              >   hubble-export-file-max-backups: \"5\"
                                                              >   # An additional address for Hubble server to listen to (e.g
                                                              >   hubble-listen-address: \":4244\"
                                                              >   hubble-disable-tls: \"false\"
                                                              >   hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
                                                              >   hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
                                                              >   hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/clie
                                                              >   ipam: \"eni\"
                                                              >   ipam-cilium-node-update-rate: \"15s\"
                                                              >   egress-gateway-reconciliation-trigger-interval: \"1s\"
                                                              >   enable-vtep: \"false\"
                                                              >   vtep-endpoint: \"\"
                                                              >   vtep-cidr: \"\"
                                                              >   vtep-mask: \"\"
                                                              >   vtep-mac: \"\"
                                                              >   enable-bgp-control-plane: \"false\"
                                                              >   procfs: \"/host/proc\"
                                                              >   bpf-root: \"/sys/fs/bpf\"
                                                              >   cgroup-root: \"/run/cilium/cgroupv2\"
                                                              >   enable-k8s-terminating-endpoint: \"true\"
                                                              >   enable-sctp: \"false\"
                                                              > 
                                                              >   k8s-client-qps: \"10\"
                                                              >   k8s-client-burst: \"20\"
  remove-cilium-node-taints: \"true\"                               remove-cilium-node-taints: \"true\"
  routing-mode: native                                        <
  service-no-backend-response: reject                         <
  set-cilium-is-up-condition: \"true\"                          <
  set-cilium-node-taints: \"true\"                                  set-cilium-node-taints: \"true\"
  sidecar-istio-proxy-image: cilium/istio_proxy               |   set-cilium-is-up-condition: \"true\"
  skip-cnp-status-startup-clean: \"false\"                      |   unmanaged-pod-watcher-interval: \"15\"
  synchronize-k8s-nodes: \"true\"                               |   # default DNS proxy to transparent mode in non-chaining mod
  tofqdns-dns-reject-response-code: refused                   |   dnsproxy-enable-transparent-mode: \"true\"
                                                              >   tofqdns-dns-reject-response-code: \"refused\"
  tofqdns-enable-dns-compression: \"true\"                          tofqdns-enable-dns-compression: \"true\"
  tofqdns-endpoint-max-ip-per-hostname: \"50\"                      tofqdns-endpoint-max-ip-per-hostname: \"50\"
  tofqdns-idle-connection-grace-period: 0s                    |   tofqdns-idle-connection-grace-period: \"0s\"
  tofqdns-max-deferred-connection-deletes: \"10000\"                tofqdns-max-deferred-connection-deletes: \"10000\"
  tofqdns-proxy-response-max-delay: 100ms                     |   tofqdns-proxy-response-max-delay: \"100ms\"
  unmanaged-pod-watcher-interval: \"15\"                        |   agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"
  update-ec2-adapter-limit-via-api: \"true\"                    | 
  vtep-cidr: \"\"                                               |   mesh-auth-enabled: \"true\"
  vtep-endpoint: \"\"                                           |   mesh-auth-queue-size: \"1024\"
  vtep-mac: \"\"                                                |   mesh-auth-rotated-identities-queue-size: \"1024\"
  vtep-mask: \"\"                                               |   mesh-auth-gc-interval: \"5m0s\"
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.co | 
kind: ConfigMap                                               |   proxy-connect-timeout: \"2\"
metadata:                                                     |   proxy-max-requests-per-connection: \"0\"
  name: cilium-config                                         |   proxy-max-connection-duration-seconds: \"0\"
  namespace: kube-system                                      | 
                                                              >   external-envoy-proxy: \"false\"
                                                              >   max-connected-clusters: \"255\"
                                                              > 
                                                              > # Extra config allows adding arbitrary properties to the cili
                                                              > # By putting it at the end of the ConfigMap, it's also possib
---                                                             ---
                                                              > # Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  config.yaml: \"cluster-name: default\\npeer-service: \\\"hubble <
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  name: hubble-relay-config                                       name: hubble-relay-config
  namespace: kube-system                                          namespace: kube-system
                                                              > data:
                                                              >   config.yaml: |
                                                              >     cluster-name: default
                                                              >     peer-service: \"hubble-peer.kube-system.svc.cluster.local:
                                                              >     listen-address: :4245
                                                              >     gops: true
                                                              >     gops-port: \"9893\"
                                                              >     dial-timeout: 
                                                              >     retry-timeout: 
                                                              >     sort-buffer-len-max: 
                                                              >     sort-buffer-drain-timeout: 
                                                              >     tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/cl
                                                              >     tls-hubble-client-key-file: /var/lib/hubble-relay/tls/cli
                                                              >     tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hub
                                                              >     disable-server-tls: true
---                                                             ---
                                                              > # Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  nginx.conf: \"server {\\n    listen       8081;\\n    listen   <
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  name: hubble-ui-nginx                                           name: hubble-ui-nginx
  namespace: kube-system                                          namespace: kube-system
                                                              > data:
                                                              >   nginx.conf: \"server {\\n    listen       8081;\\n    listen  
---                                                             ---
                                                              > # Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
                                                              >   name: cilium
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: cilium                                                <
rules:                                                          rules:
  - apiGroups:                                                | - apiGroups:
      - networking.k8s.io                                     |   - networking.k8s.io
    resources:                                                |   resources:
      - networkpolicies                                       |   - networkpolicies
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - discovery.k8s.io                                      |   - discovery.k8s.io
    resources:                                                |   resources:
      - endpointslices                                        |   - endpointslices
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - namespaces                                            |   - namespaces
      - services                                              |   - services
      - pods                                                  |   - pods
      - endpoints                                             |   - endpoints
      - nodes                                                 |   - nodes
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - apiextensions.k8s.io                                  |   - apiextensions.k8s.io
    resources:                                                |   resources:
      - customresourcedefinitions                             |   - customresourcedefinitions
    verbs:                                                    |   verbs:
      - list                                                  |   - list
      - watch                                                 |   - watch
      - get                                                   |   # This is used when validating policies in preflight. This 
  - apiGroups:                                                |   # until we figure out how to avoid \"get\" inside the preflig
      - cilium.io                                             |   # should be removed ideally.
    resources:                                                |   - get
      - ciliumloadbalancerippools                             | - apiGroups:
      - ciliumbgppeeringpolicies                              |   - cilium.io
      - ciliumbgpnodeconfigs                                  |   resources:
      - ciliumbgpadvertisements                               |   - ciliumloadbalancerippools
      - ciliumbgppeerconfigs                                  |   - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs                         |   - ciliumbgpnodeconfigs
      - ciliumclusterwidenetworkpolicies                      |   - ciliumbgpadvertisements
      - ciliumegressgatewaypolicies                           |   - ciliumbgppeerconfigs
      - ciliumendpoints                                       |   - ciliumclusterwideenvoyconfigs
      - ciliumendpointslices                                  |   - ciliumclusterwidenetworkpolicies
      - ciliumenvoyconfigs                                    |   - ciliumegressgatewaypolicies
      - ciliumidentities                                      |   - ciliumendpoints
      - ciliumlocalredirectpolicies                           |   - ciliumendpointslices
      - ciliumnetworkpolicies                                 |   - ciliumenvoyconfigs
      - ciliumnodes                                           |   - ciliumidentities
      - ciliumnodeconfigs                                     |   - ciliumlocalredirectpolicies
      - ciliumcidrgroups                                      |   - ciliumnetworkpolicies
      - ciliuml2announcementpolicies                          |   - ciliumnodes
      - ciliumpodippools                                      |   - ciliumnodeconfigs
    verbs:                                                    |   - ciliumcidrgroups
      - list                                                  |   - ciliuml2announcementpolicies
      - watch                                                 |   - ciliumpodippools
  - apiGroups:                                                |   verbs:
      - cilium.io                                             |   - list
    resources:                                                |   - watch
      - ciliumidentities                                      | - apiGroups:
      - ciliumendpoints                                       |   - cilium.io
      - ciliumnodes                                           |   resources:
    verbs:                                                    |   - ciliumidentities
      - create                                                |   - ciliumendpoints
  - apiGroups:                                                |   - ciliumnodes
      - cilium.io                                             |   verbs:
    resources:                                                |   - create
      - ciliumidentities                                      | - apiGroups:
    verbs:                                                    |   - cilium.io
      - update                                                |   # To synchronize garbage collection of such resources
  - apiGroups:                                                |   resources:
      - cilium.io                                             |   - ciliumidentities
    resources:                                                |   verbs:
      - ciliumendpoints                                       |   - update
    verbs:                                                    | - apiGroups:
      - delete                                                |   - cilium.io
      - get                                                   |   resources:
  - apiGroups:                                                |   - ciliumendpoints
      - cilium.io                                             |   verbs:
    resources:                                                |   - delete
      - ciliumnodes                                           |   - get
      - ciliumnodes/status                                    | - apiGroups:
    verbs:                                                    |   - cilium.io
      - get                                                   |   resources:
      - update                                                |   - ciliumnodes
  - apiGroups:                                                |   - ciliumnodes/status
      - cilium.io                                             |   verbs:
    resources:                                                |   - get
      - ciliumnetworkpolicies/status                          |   - update
      - ciliumclusterwidenetworkpolicies/status               | - apiGroups:
      - ciliumendpoints/status                                |   - cilium.io
      - ciliumendpoints                                       |   resources:
      - ciliuml2announcementpolicies/status                   |   - ciliumnetworkpolicies/status
      - ciliumbgpnodeconfigs/status                           |   - ciliumclusterwidenetworkpolicies/status
    verbs:                                                    |   - ciliumendpoints/status
      - patch                                                 |   - ciliumendpoints
                                                              >   - ciliuml2announcementpolicies/status
                                                              >   - ciliumbgpnodeconfigs/status
                                                              >   verbs:
                                                              >   - patch
---                                                             ---
                                                              > # Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
                                                              >   name: cilium-operator
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: cilium-operator                                       <
rules:                                                          rules:
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - pods                                                  |   - pods
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
      - delete                                                |   # to automatically delete [core|kube]dns pods so that are s
  - apiGroups:                                                |   # managed by Cilium
      - \"\"                                                    |   - delete
    resources:                                                | - apiGroups:
      - nodes                                                 |   - \"\"
    verbs:                                                    |   resources:
      - list                                                  |   - nodes
      - watch                                                 |   verbs:
  - apiGroups:                                                |   - list
      - \"\"                                                    |   - watch
    resources:                                                | - apiGroups:
      - nodes                                                 |   - \"\"
      - nodes/status                                          |   resources:
    verbs:                                                    |   # To remove node taints
      - patch                                                 |   - nodes
  - apiGroups:                                                |   # To set NetworkUnavailable false on startup
      - discovery.k8s.io                                      |   - nodes/status
    resources:                                                |   verbs:
      - endpointslices                                        |   - patch
    verbs:                                                    | - apiGroups:
      - get                                                   |   - discovery.k8s.io
      - list                                                  |   resources:
      - watch                                                 |   - endpointslices
  - apiGroups:                                                |   verbs:
      - \"\"                                                    |   - get
    resources:                                                |   - list
      - services/status                                       |   - watch
    verbs:                                                    | - apiGroups:
      - update                                                |   - \"\"
      - patch                                                 |   resources:
  - apiGroups:                                                |   # to perform LB IP allocation for BGP
      - \"\"                                                    |   - services/status
    resources:                                                |   verbs:
      - namespaces                                            |   - update
    verbs:                                                    |   - patch
      - get                                                   | - apiGroups:
      - list                                                  |   - \"\"
      - watch                                                 |   resources:
  - apiGroups:                                                |   # to check apiserver connectivity
      - \"\"                                                    |   - namespaces
    resources:                                                |   verbs:
      - services                                              |   - get
      - endpoints                                             |   - list
    verbs:                                                    |   - watch
      - get                                                   | - apiGroups:
      - list                                                  |   - \"\"
      - watch                                                 |   resources:
  - apiGroups:                                                |   # to perform the translation of a CNP that contains `ToGrou
      - cilium.io                                             |   - services
    resources:                                                |   - endpoints
      - ciliumnetworkpolicies                                 |   verbs:
      - ciliumclusterwidenetworkpolicies                      |   - get
    verbs:                                                    |   - list
      - create                                                |   - watch
      - update                                                | - apiGroups:
      - deletecollection                                      |   - cilium.io
      - patch                                                 |   resources:
      - get                                                   |   - ciliumnetworkpolicies
      - list                                                  |   - ciliumclusterwidenetworkpolicies
      - watch                                                 |   verbs:
  - apiGroups:                                                |   # Create auto-generated CNPs and CCNPs from Policies that h
      - cilium.io                                             |   - create
    resources:                                                |   - update
      - ciliumnetworkpolicies/status                          |   - deletecollection
      - ciliumclusterwidenetworkpolicies/status               |   # To update the status of the CNPs and CCNPs
    verbs:                                                    |   - patch
      - patch                                                 |   - get
      - update                                                |   - list
  - apiGroups:                                                |   - watch
      - cilium.io                                             | - apiGroups:
    resources:                                                |   - cilium.io
      - ciliumendpoints                                       |   resources:
      - ciliumidentities                                      |   - ciliumnetworkpolicies/status
    verbs:                                                    |   - ciliumclusterwidenetworkpolicies/status
      - delete                                                |   verbs:
      - list                                                  |   # Update the auto-generated CNPs and CCNPs status.
      - watch                                                 |   - patch
  - apiGroups:                                                |   - update
      - cilium.io                                             | - apiGroups:
    resources:                                                |   - cilium.io
      - ciliumidentities                                      |   resources:
    verbs:                                                    |   - ciliumendpoints
      - update                                                |   - ciliumidentities
  - apiGroups:                                                |   verbs:
      - cilium.io                                             |   # To perform garbage collection of such resources
    resources:                                                |   - delete
      - ciliumnodes                                           |   - list
    verbs:                                                    |   - watch
      - create                                                | - apiGroups:
      - update                                                |   - cilium.io
      - get                                                   |   resources:
      - list                                                  |   - ciliumidentities
      - watch                                                 |   verbs:
      - delete                                                |   # To synchronize garbage collection of such resources
  - apiGroups:                                                |   - update
      - cilium.io                                             | - apiGroups:
    resources:                                                |   - cilium.io
      - ciliumnodes/status                                    |   resources:
    verbs:                                                    |   - ciliumnodes
      - update                                                |   verbs:
  - apiGroups:                                                |   - create
      - cilium.io                                             |   - update
    resources:                                                |   - get
      - ciliumendpointslices                                  |   - list
      - ciliumenvoyconfigs                                    |   - watch
      - ciliumbgppeerconfigs                                  |     # To perform CiliumNode garbage collector
      - ciliumbgpadvertisements                               |   - delete
      - ciliumbgpnodeconfigs                                  | - apiGroups:
    verbs:                                                    |   - cilium.io
      - create                                                |   resources:
      - update                                                |   - ciliumnodes/status
      - get                                                   |   verbs:
      - list                                                  |   - update
      - watch                                                 | - apiGroups:
      - delete                                                |   - cilium.io
      - patch                                                 |   resources:
  - apiGroups:                                                |   - ciliumendpointslices
      - apiextensions.k8s.io                                  |   - ciliumenvoyconfigs
    resources:                                                |   - ciliumbgppeerconfigs
      - customresourcedefinitions                             |   - ciliumbgpadvertisements
    verbs:                                                    |   - ciliumbgpnodeconfigs
      - create                                                |   verbs:
      - get                                                   |   - create
      - list                                                  |   - update
      - watch                                                 |   - get
  - apiGroups:                                                |   - list
      - apiextensions.k8s.io                                  |   - watch
    resourceNames:                                            |   - delete
      - ciliumloadbalancerippools.cilium.io                   |   - patch
      - ciliumbgppeeringpolicies.cilium.io                    | - apiGroups:
      - ciliumbgpclusterconfigs.cilium.io                     |   - apiextensions.k8s.io
      - ciliumbgppeerconfigs.cilium.io                        |   resources:
      - ciliumbgpadvertisements.cilium.io                     |   - customresourcedefinitions
      - ciliumbgpnodeconfigs.cilium.io                        |   verbs:
      - ciliumbgpnodeconfigoverrides.cilium.io                |   - create
      - ciliumclusterwideenvoyconfigs.cilium.io               |   - get
      - ciliumclusterwidenetworkpolicies.cilium.io            |   - list
      - ciliumegressgatewaypolicies.cilium.io                 |   - watch
      - ciliumendpoints.cilium.io                             | - apiGroups:
      - ciliumendpointslices.cilium.io                        |   - apiextensions.k8s.io
      - ciliumenvoyconfigs.cilium.io                          |   resources:
      - ciliumexternalworkloads.cilium.io                     |   - customresourcedefinitions
      - ciliumidentities.cilium.io                            |   verbs:
      - ciliumlocalredirectpolicies.cilium.io                 |   - update
      - ciliumnetworkpolicies.cilium.io                       |   resourceNames:
      - ciliumnodes.cilium.io                                 |   - ciliumloadbalancerippools.cilium.io
      - ciliumnodeconfigs.cilium.io                           |   - ciliumbgppeeringpolicies.cilium.io
      - ciliumcidrgroups.cilium.io                            |   - ciliumbgpclusterconfigs.cilium.io
      - ciliuml2announcementpolicies.cilium.io                |   - ciliumbgppeerconfigs.cilium.io
      - ciliumpodippools.cilium.io                            |   - ciliumbgpadvertisements.cilium.io
    resources:                                                |   - ciliumbgpnodeconfigs.cilium.io
      - customresourcedefinitions                             |   - ciliumbgpnodeconfigoverrides.cilium.io
    verbs:                                                    |   - ciliumclusterwideenvoyconfigs.cilium.io
      - update                                                |   - ciliumclusterwidenetworkpolicies.cilium.io
  - apiGroups:                                                |   - ciliumegressgatewaypolicies.cilium.io
      - cilium.io                                             |   - ciliumendpoints.cilium.io
    resources:                                                |   - ciliumendpointslices.cilium.io
      - ciliumloadbalancerippools                             |   - ciliumenvoyconfigs.cilium.io
      - ciliumpodippools                                      |   - ciliumexternalworkloads.cilium.io
      - ciliumbgpclusterconfigs                               |   - ciliumidentities.cilium.io
      - ciliumbgpnodeconfigoverrides                          |   - ciliumlocalredirectpolicies.cilium.io
    verbs:                                                    |   - ciliumnetworkpolicies.cilium.io
      - get                                                   |   - ciliumnodes.cilium.io
      - list                                                  |   - ciliumnodeconfigs.cilium.io
      - watch                                                 |   - ciliumcidrgroups.cilium.io
  - apiGroups:                                                |   - ciliuml2announcementpolicies.cilium.io
      - cilium.io                                             |   - ciliumpodippools.cilium.io
    resources:                                                | - apiGroups:
      - ciliumpodippools                                      |   - cilium.io
    verbs:                                                    |   resources:
      - create                                                |   - ciliumloadbalancerippools
  - apiGroups:                                                |   - ciliumpodippools
      - cilium.io                                             |   - ciliumbgpclusterconfigs
    resources:                                                |   - ciliumbgpnodeconfigoverrides
      - ciliumloadbalancerippools/status                      |   verbs:
    verbs:                                                    |   - get
      - patch                                                 |   - list
  - apiGroups:                                                |   - watch
      - coordination.k8s.io                                   | - apiGroups:
    resources:                                                |     - cilium.io
      - leases                                                |   resources:
    verbs:                                                    |     - ciliumpodippools
      - create                                                |   verbs:
      - get                                                   |     - create
      - update                                                | - apiGroups:
                                                              >   - cilium.io
                                                              >   resources:
                                                              >   - ciliumloadbalancerippools/status
                                                              >   verbs:
                                                              >   - patch
                                                              > # For cilium-operator running in HA mode.
                                                              > #
                                                              > # Cilium operator running in HA mode requires the use of Reso
                                                              > # between multiple running instances.
                                                              > # The preferred way of doing this is to use LeasesResourceLoc
                                                              > # common and fewer objects in the cluster watch \"all Leases\".
                                                              > - apiGroups:
                                                              >   - coordination.k8s.io
                                                              >   resources:
                                                              >   - leases
                                                              >   verbs:
                                                              >   - create
                                                              >   - get
                                                              >   - update
---                                                             ---
apiVersion: rbac.authorization.k8s.io/v1                      | # Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole                                               kind: ClusterRole
                                                              > apiVersion: rbac.authorization.k8s.io/v1
metadata:                                                       metadata:
                                                              >   name: hubble-ui
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: hubble-ui                                             <
rules:                                                          rules:
  - apiGroups:                                                | - apiGroups:
      - networking.k8s.io                                     |   - networking.k8s.io
    resources:                                                |   resources:
      - networkpolicies                                       |   - networkpolicies
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - componentstatuses                                     |   - componentstatuses
      - endpoints                                             |   - endpoints
      - namespaces                                            |   - namespaces
      - nodes                                                 |   - nodes
      - pods                                                  |   - pods
      - services                                              |   - services
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - apiextensions.k8s.io                                  |   - apiextensions.k8s.io
    resources:                                                |   resources:
      - customresourcedefinitions                             |   - customresourcedefinitions
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - cilium.io                                             |   - cilium.io
    resources:                                                |   resources:
      - '*'                                                   |   - \"*\"
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
---                                                             ---
                                                              > # Source: cilium/templates/cilium-agent/clusterrolebinding.ya
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
                                                              >   name: cilium
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: cilium                                                <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: cilium                                                    name: cilium
subjects:                                                       subjects:
  - kind: ServiceAccount                                      | - kind: ServiceAccount
    name: cilium                                              |   name: \"cilium\"
    namespace: kube-system                                    |   namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/cilium-operator/clusterrolebinding
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
                                                              >   name: cilium-operator
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: cilium-operator                                       <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: cilium-operator                                           name: cilium-operator
subjects:                                                       subjects:
  - kind: ServiceAccount                                      | - kind: ServiceAccount
    name: cilium-operator                                     |   name: \"cilium-operator\"
    namespace: kube-system                                    |   namespace: kube-system
---                                                             ---
apiVersion: rbac.authorization.k8s.io/v1                      | # Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
                                                              > apiVersion: rbac.authorization.k8s.io/v1
metadata:                                                       metadata:
                                                              >   name: hubble-ui
  labels:                                                         labels:
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
  name: hubble-ui                                             <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: hubble-ui                                                 name: hubble-ui
subjects:                                                       subjects:
  - kind: ServiceAccount                                      | - kind: ServiceAccount
    name: hubble-ui                                           |   name: \"hubble-ui\"
    namespace: kube-system                                    |   namespace: kube-system
---                                                             ---
                                                              > # Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
  labels:                                                     <
    app.kubernetes.io/part-of: cilium                         <
  name: cilium-config-agent                                       name: cilium-config-agent
  namespace: kube-system                                          namespace: kube-system
                                                              >   labels:
                                                              >     app.kubernetes.io/part-of: cilium
rules:                                                          rules:
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - configmaps                                            |   - configmaps
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
---                                                             ---
                                                              > # Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
  labels:                                                     <
    app.kubernetes.io/part-of: cilium                         <
  name: cilium-config-agent                                       name: cilium-config-agent
  namespace: kube-system                                          namespace: kube-system
                                                              >   labels:
                                                              >     app.kubernetes.io/part-of: cilium
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: cilium-config-agent                                       name: cilium-config-agent
subjects:                                                       subjects:
  - kind: ServiceAccount                                      |   - kind: ServiceAccount
    name: cilium                                              |     name: \"cilium\"
    namespace: kube-system                                    |     namespace: kube-system
---                                                           | ---
apiVersion: v1                                                | # Source: cilium/templates/hubble-relay/service.yaml
kind: Service                                                 | kind: Service
metadata:                                                     | apiVersion: v1
  labels:                                                     | metadata:
    app.kubernetes.io/name: hubble-relay                      |   name: hubble-relay
    app.kubernetes.io/part-of: cilium                         |   namespace: kube-system
    k8s-app: hubble-relay                                     |   labels:
  name: hubble-relay                                          |     k8s-app: hubble-relay
  namespace: kube-system                                      |     app.kubernetes.io/name: hubble-relay
spec:                                                         |     app.kubernetes.io/part-of: cilium
  ports:                                                      | spec:
    - port: 80                                                |   type: \"ClusterIP\"
      protocol: TCP                                           |   selector:
      targetPort: 4245                                        |     k8s-app: hubble-relay
  selector:                                                   |   ports:
    k8s-app: hubble-relay                                     |   - protocol: TCP
  type: ClusterIP                                             |     port: 80
---                                                           |     targetPort: 4245
apiVersion: v1                                                | ---
kind: Service                                                 | # Source: cilium/templates/hubble-ui/service.yaml
metadata:                                                     | kind: Service
  labels:                                                     | apiVersion: v1
    app.kubernetes.io/name: hubble-ui                         | metadata:
    app.kubernetes.io/part-of: cilium                         |   name: hubble-ui
    k8s-app: hubble-ui                                        |   namespace: kube-system
  name: hubble-ui                                             |   labels:
  namespace: kube-system                                      |     k8s-app: hubble-ui
spec:                                                         |     app.kubernetes.io/name: hubble-ui
  ports:                                                      |     app.kubernetes.io/part-of: cilium
    - name: http                                              | spec:
      port: 80                                                |   type: \"ClusterIP\"
      targetPort: 8081                                        |   selector:
  selector:                                                   |     k8s-app: hubble-ui
    k8s-app: hubble-ui                                        |   ports:
  type: ClusterIP                                             |     - name: http
---                                                           |       port: 80
apiVersion: v1                                                |       targetPort: 8081
kind: Service                                                 | ---
metadata:                                                     | # Source: cilium/templates/hubble/peer-service.yaml
  labels:                                                     | apiVersion: v1
    app.kubernetes.io/name: hubble-peer                       | kind: Service
    app.kubernetes.io/part-of: cilium                         | metadata:
    k8s-app: cilium                                           |   name: hubble-peer
  name: hubble-peer                                           |   namespace: kube-system
  namespace: kube-system                                      |   labels:
spec:                                                         |     k8s-app: cilium
  internalTrafficPolicy: Local                                |     app.kubernetes.io/part-of: cilium
  ports:                                                      |     app.kubernetes.io/name: hubble-peer
    - name: peer-service                                      | spec:
      port: 443                                               |   selector:
      protocol: TCP                                           |     k8s-app: cilium
      targetPort: 4244                                        |   ports:
  selector:                                                   |   - name: peer-service
    k8s-app: cilium                                           |     port: 443
---                                                           |     protocol: TCP
apiVersion: apps/v1                                           |     targetPort: 4244
kind: DaemonSet                                               |   internalTrafficPolicy: Local
metadata:                                                     | ---
  labels:                                                     | # Source: cilium/templates/cilium-agent/daemonset.yaml
    app.kubernetes.io/name: cilium-agent                      | apiVersion: apps/v1
    app.kubernetes.io/part-of: cilium                         | kind: DaemonSet
    k8s-app: cilium                                           | metadata:
  name: cilium                                                |   name: cilium
  namespace: kube-system                                      |   namespace: kube-system
spec:                                                         |   labels:
  selector:                                                   |     k8s-app: cilium
    matchLabels:                                              |     app.kubernetes.io/part-of: cilium
      k8s-app: cilium                                         |     app.kubernetes.io/name: cilium-agent
  template:                                                   | spec:
    metadata:                                                 |   selector:
      annotations:                                            |     matchLabels:
        container.apparmor.security.beta.kubernetes.io/apply- |       k8s-app: cilium
        container.apparmor.security.beta.kubernetes.io/cilium |   updateStrategy:
        container.apparmor.security.beta.kubernetes.io/clean- |     rollingUpdate:
        container.apparmor.security.beta.kubernetes.io/mount- |       maxUnavailable: 2
      labels:                                                 |     type: RollingUpdate
        app.kubernetes.io/name: cilium-agent                  |   template:
        app.kubernetes.io/part-of: cilium                     |     metadata:
        k8s-app: cilium                                       |       annotations:
    spec:                                                     |         # Set app AppArmor's profile to \"unconfined\". The val
                                                              >         # can be modified as long users know which profiles t
                                                              >         # in AppArmor.
                                                              >         container.apparmor.security.beta.kubernetes.io/cilium
                                                              >         container.apparmor.security.beta.kubernetes.io/clean-
                                                              >         container.apparmor.security.beta.kubernetes.io/mount-
                                                              >         container.apparmor.security.beta.kubernetes.io/apply-
                                                              >       labels:
                                                              >         k8s-app: cilium
                                                              >         app.kubernetes.io/name: cilium-agent
                                                              >         app.kubernetes.io/part-of: cilium
                                                              >     spec:
                                                              >       containers:
                                                              >       - name: cilium-agent
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         command:
                                                              >         - cilium-agent
                                                              >         args:
                                                              >         - --config-dir=/tmp/cilium/config-map
                                                              >         startupProbe:
                                                              >           httpGet:
                                                              >             host: \"127.0.0.1\"
                                                              >             path: /healthz
                                                              >             port: 9879
                                                              >             scheme: HTTP
                                                              >             httpHeaders:
                                                              >             - name: \"brief\"
                                                              >               value: \"true\"
                                                              >           failureThreshold: 105
                                                              >           periodSeconds: 2
                                                              >           successThreshold: 1
                                                              >           initialDelaySeconds: 5
                                                              >         livenessProbe:
                                                              >           httpGet:
                                                              >             host: \"127.0.0.1\"
                                                              >             path: /healthz
                                                              >             port: 9879
                                                              >             scheme: HTTP
                                                              >             httpHeaders:
                                                              >             - name: \"brief\"
                                                              >               value: \"true\"
                                                              >           periodSeconds: 30
                                                              >           successThreshold: 1
                                                              >           failureThreshold: 10
                                                              >           timeoutSeconds: 5
                                                              >         readinessProbe:
                                                              >           httpGet:
                                                              >             host: \"127.0.0.1\"
                                                              >             path: /healthz
                                                              >             port: 9879
                                                              >             scheme: HTTP
                                                              >             httpHeaders:
                                                              >             - name: \"brief\"
                                                              >               value: \"true\"
                                                              >           periodSeconds: 30
                                                              >           successThreshold: 1
                                                              >           failureThreshold: 3
                                                              >           timeoutSeconds: 5
                                                              >         env:
                                                              >         - name: K8S_NODE_NAME
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: spec.nodeName
                                                              >         - name: CILIUM_K8S_NAMESPACE
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: metadata.namespace
                                                              >         - name: CILIUM_CLUSTERMESH_CONFIG
                                                              >           value: /var/lib/cilium/clustermesh/
                                                              >         - name: GOMEMLIMIT
                                                              >           valueFrom:
                                                              >             resourceFieldRef:
                                                              >               resource: limits.memory
                                                              >               divisor: '1'
                                                              >         lifecycle:
                                                              >           postStart:
                                                              >             exec:
                                                              >               command:
                                                              >               - \"bash\"
                                                              >               - \"-c\"
                                                              >               - |
                                                              >                     set -o errexit
                                                              >                     set -o pipefail
                                                              >                     set -o nounset
                                                              >                     
                                                              >                     # When running in AWS ENI mode, it's like
                                                              >                     # had a chance to install SNAT iptables r
                                                              >                     # in dropped traffic, so we should attemp
                                                              >                     # We do it using a 'postStart' hook since
                                                              >                     # for nodes which might have already been
                                                              >                     # have dangling rules. This is safe becau
                                                              >                     # dependencies on anything that is part o
                                                              >                     # itself, and can be safely run multiple 
                                                              >                     # case of a restart).
                                                              >                     if [[ \"$(iptables-save | grep -E -c 'AWS-
                                                              >                     then
                                                              >                         echo 'Deleting iptables rules created
                                                              >                         iptables-save | grep -E -v 'AWS-SNAT-
                                                              >                     fi
                                                              >                     echo 'Done!'
                                                              >                     
                                                              >           preStop:
                                                              >             exec:
                                                              >               command:
                                                              >               - /cni-uninstall.sh
                                                              >         securityContext:
                                                              >           seLinuxOptions:
                                                              >             level: s0
                                                              >             type: spc_t
                                                              >           capabilities:
                                                              >             add:
                                                              >               - CHOWN
                                                              >               - KILL
                                                              >               - NET_ADMIN
                                                              >               - NET_RAW
                                                              >               - IPC_LOCK
                                                              >               - SYS_MODULE
                                                              >               - SYS_ADMIN
                                                              >               - SYS_RESOURCE
                                                              >               - DAC_OVERRIDE
                                                              >               - FOWNER
                                                              >               - SETGID
                                                              >               - SETUID
                                                              >             drop:
                                                              >               - ALL
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         volumeMounts:
                                                              >         # Unprivileged containers need to mount /proc/sys/net
                                                              >         # to have write access
                                                              >         - mountPath: /host/proc/sys/net
                                                              >           name: host-proc-sys-net
                                                              >         # Unprivileged containers need to mount /proc/sys/ker
                                                              >         # to have write access
                                                              >         - mountPath: /host/proc/sys/kernel
                                                              >           name: host-proc-sys-kernel
                                                              >         - name: bpf-maps
                                                              >           mountPath: /sys/fs/bpf
                                                              >           # Unprivileged containers can't set mount propagati
                                                              >           # in this case we will mount the bpf fs from an ini
                                                              >           # is privileged and set the mount propagation from 
                                                              >           # in Cilium.
                                                              >           mountPropagation: HostToContainer
                                                              >         - name: cilium-run
                                                              >           mountPath: /var/run/cilium
                                                              >         - name: etc-cni-netd
                                                              >           mountPath: /host/etc/cni/net.d
                                                              >         - name: clustermesh-secrets
                                                              >           mountPath: /var/lib/cilium/clustermesh
                                                              >           readOnly: true
                                                              >           # Needed to be able to load kernel modules
                                                              >         - name: lib-modules
                                                              >           mountPath: /lib/modules
                                                              >           readOnly: true
                                                              >         - name: xtables-lock
                                                              >           mountPath: /run/xtables.lock
                                                              >         - name: hubble-tls
                                                              >           mountPath: /var/lib/cilium/tls/hubble
                                                              >           readOnly: true
                                                              >         - name: tmp
                                                              >           mountPath: /tmp
                                                              >       initContainers:
                                                              >       - name: config
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         command:
                                                              >         - cilium-dbg
                                                              >         - build-config
                                                              >         env:
                                                              >         - name: K8S_NODE_NAME
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: spec.nodeName
                                                              >         - name: CILIUM_K8S_NAMESPACE
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: metadata.namespace
                                                              >         volumeMounts:
                                                              >         - name: tmp
                                                              >           mountPath: /tmp
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >       # Required to mount cgroup2 filesystem on the underlyin
                                                              >       # We use nsenter command with host's cgroup and mount n
                                                              >       - name: mount-cgroup
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         env:
                                                              >         - name: CGROUP_ROOT
                                                              >           value: /run/cilium/cgroupv2
                                                              >         - name: BIN_PATH
                                                              >           value: /opt/cni/bin
                                                              >         command:
                                                              >         - sh
                                                              >         - -ec
                                                              >         # The statically linked Go program binary is invoked 
                                                              >         # dependency on utilities like sh and mount that can 
                                                              >         # distros installed on the underlying host. Copy the 
                                                              >         # same directory where we install cilium cni plugin s
                                                              >         # are available.
                                                              >         - |
                                                              >           cp /usr/bin/cilium-mount /hostbin/cilium-mount;
                                                              >           nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hos
                                                              >           rm /hostbin/cilium-mount
                                                              >         volumeMounts:
                                                              >         - name: hostproc
                                                              >           mountPath: /hostproc
                                                              >         - name: cni-path
                                                              >           mountPath: /hostbin
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         securityContext:
                                                              >           seLinuxOptions:
                                                              >             level: s0
                                                              >             type: spc_t
                                                              >           capabilities:
                                                              >             add:
                                                              >               - SYS_ADMIN
                                                              >               - SYS_CHROOT
                                                              >               - SYS_PTRACE
                                                              >             drop:
                                                              >               - ALL
                                                              >       - name: apply-sysctl-overwrites
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         env:
                                                              >         - name: BIN_PATH
                                                              >           value: /opt/cni/bin
                                                              >         command:
                                                              >         - sh
                                                              >         - -ec
                                                              >         # The statically linked Go program binary is invoked 
                                                              >         # dependency on utilities like sh that can be missing
                                                              >         # distros installed on the underlying host. Copy the 
                                                              >         # same directory where we install cilium cni plugin s
                                                              >         # are available.
                                                              >         - |
                                                              >           cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctl
                                                              >           nsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cil
                                                              >           rm /hostbin/cilium-sysctlfix
                                                              >         volumeMounts:
                                                              >         - name: hostproc
                                                              >           mountPath: /hostproc
                                                              >         - name: cni-path
                                                              >           mountPath: /hostbin
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         securityContext:
                                                              >           seLinuxOptions:
                                                              >             level: s0
                                                              >             type: spc_t
                                                              >           capabilities:
                                                              >             add:
                                                              >               - SYS_ADMIN
                                                              >               - SYS_CHROOT
                                                              >               - SYS_PTRACE
                                                              >             drop:
                                                              >               - ALL
                                                              >       # Mount the bpf fs if it is not mounted. We will perfor
                                                              >       # from a privileged container because the mount propaga
                                                              >       # only works from privileged containers.
                                                              >       - name: mount-bpf-fs
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         args:
                                                              >         - 'mount | grep \"/sys/fs/bpf type bpf\" || mount -t bp
                                                              >         command:
                                                              >         - /bin/bash
                                                              >         - -c
                                                              >         - --
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         securityContext:
                                                              >           privileged: true
                                                              >         volumeMounts:
                                                              >         - name: bpf-maps
                                                              >           mountPath: /sys/fs/bpf
                                                              >           mountPropagation: Bidirectional
                                                              >       - name: clean-cilium-state
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         command:
                                                              >         - /init-container.sh
                                                              >         env:
                                                              >         - name: CILIUM_ALL_STATE
                                                              >           valueFrom:
                                                              >             configMapKeyRef:
                                                              >               name: cilium-config
                                                              >               key: clean-cilium-state
                                                              >               optional: true
                                                              >         - name: CILIUM_BPF_STATE
                                                              >           valueFrom:
                                                              >             configMapKeyRef:
                                                              >               name: cilium-config
                                                              >               key: clean-cilium-bpf-state
                                                              >               optional: true
                                                              >         - name: WRITE_CNI_CONF_WHEN_READY
                                                              >           valueFrom:
                                                              >             configMapKeyRef:
                                                              >               name: cilium-config
                                                              >               key: write-cni-conf-when-ready
                                                              >               optional: true
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         securityContext:
                                                              >           seLinuxOptions:
                                                              >             level: s0
                                                              >             type: spc_t
                                                              >           capabilities:
                                                              >             add:
                                                              >               - NET_ADMIN
                                                              >               - SYS_MODULE
                                                              >               - SYS_ADMIN
                                                              >               - SYS_RESOURCE
                                                              >             drop:
                                                              >               - ALL
                                                              >         volumeMounts:
                                                              >         - name: bpf-maps
                                                              >           mountPath: /sys/fs/bpf
                                                              >           # Required to mount cgroup filesystem from the host
                                                              >         - name: cilium-cgroup
                                                              >           mountPath: /run/cilium/cgroupv2
                                                              >           mountPropagation: HostToContainer
                                                              >         - name: cilium-run
                                                              >           mountPath: /var/run/cilium # wait-for-kube-proxy
                                                              >       # Install the CNI binaries in an InitContainer so we do
                                                              >       - name: install-cni-binaries
                                                              >         image: \"quay.io/cilium/cilium:v1.15.4@sha256:b760a483
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         command:
                                                              >           - \"/install-plugin.sh\"
                                                              >         resources:
                                                              >           requests:
                                                              >             cpu: 100m
                                                              >             memory: 10Mi
                                                              >         securityContext:
                                                              >           seLinuxOptions:
                                                              >             level: s0
                                                              >             type: spc_t
                                                              >           capabilities:
                                                              >             drop:
                                                              >               - ALL
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >         volumeMounts:
                                                              >           - name: cni-path
                                                              >             mountPath: /host/opt/cni/bin # .Values.cni.instal
                                                              >       restartPolicy: Always
                                                              >       priorityClassName: system-node-critical
                                                              >       serviceAccount: \"cilium\"
                                                              >       serviceAccountName: \"cilium\"
                                                              >       automountServiceAccountToken: true
                                                              >       terminationGracePeriodSeconds: 1
                                                              >       hostNetwork: true
      affinity:                                                       affinity:
        podAntiAffinity:                                                podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:                 requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:                                  |           - labelSelector:
                matchLabels:                                  |               matchLabels:
                  k8s-app: cilium                             |                 k8s-app: cilium
              topologyKey: kubernetes.io/hostname             |             topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true                      <
      containers:                                             <
        - args:                                               <
            - --config-dir=/tmp/cilium/config-map             <
          command:                                            <
            - cilium-agent                                    <
          env:                                                <
            - name: K8S_NODE_NAME                             <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: spec.nodeName                    <
            - name: CILIUM_K8S_NAMESPACE                      <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: metadata.namespace               <
            - name: CILIUM_CLUSTERMESH_CONFIG                 <
              value: /var/lib/cilium/clustermesh/             <
            - name: GOMEMLIMIT                                <
              valueFrom:                                      <
                resourceFieldRef:                             <
                  divisor: \"1\"                                <
                  resource: limits.memory                     <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          lifecycle:                                          <
            postStart:                                        <
              exec:                                           <
                command:                                      <
                  - bash                                      <
                  - -c                                        <
                  - |                                         <
                    set -o errexit                            <
                    set -o pipefail                           <
                    set -o nounset                            <
                                                              <
                    # When running in AWS ENI mode, it's like <
                    # had a chance to install SNAT iptables r <
                    # in dropped traffic, so we should attemp <
                    # We do it using a 'postStart' hook since <
                    # for nodes which might have already been <
                    # have dangling rules. This is safe becau <
                    # dependencies on anything that is part o <
                    # itself, and can be safely run multiple  <
                    # case of a restart).                     <
                    if [[ \"$(iptables-save | grep -E -c 'AWS- <
                    then                                      <
                        echo 'Deleting iptables rules created <
                        iptables-save | grep -E -v 'AWS-SNAT- <
                    fi                                        <
                    echo 'Done!'                              <
            preStop:                                          <
              exec:                                           <
                command:                                      <
                  - /cni-uninstall.sh                         <
          livenessProbe:                                      <
            failureThreshold: 10                              <
            httpGet:                                          <
              host: 127.0.0.1                                 <
              httpHeaders:                                    <
                - name: brief                                 <
                  value: \"true\"                               <
              path: /healthz                                  <
              port: 9879                                      <
              scheme: HTTP                                    <
            periodSeconds: 30                                 <
            successThreshold: 1                               <
            timeoutSeconds: 5                                 <
          name: cilium-agent                                  <
          readinessProbe:                                     <
            failureThreshold: 3                               <
            httpGet:                                          <
              host: 127.0.0.1                                 <
              httpHeaders:                                    <
                - name: brief                                 <
                  value: \"true\"                               <
              path: /healthz                                  <
              port: 9879                                      <
              scheme: HTTP                                    <
            periodSeconds: 30                                 <
            successThreshold: 1                               <
            timeoutSeconds: 5                                 <
          securityContext:                                    <
            capabilities:                                     <
              add:                                            <
                - CHOWN                                       <
                - KILL                                        <
                - NET_ADMIN                                   <
                - NET_RAW                                     <
                - IPC_LOCK                                    <
                - SYS_MODULE                                  <
                - SYS_ADMIN                                   <
                - SYS_RESOURCE                                <
                - DAC_OVERRIDE                                <
                - FOWNER                                      <
                - SETGID                                      <
                - SETUID                                      <
              drop:                                           <
                - ALL                                         <
            seLinuxOptions:                                   <
              level: s0                                       <
              type: spc_t                                     <
          startupProbe:                                       <
            failureThreshold: 105                             <
            httpGet:                                          <
              host: 127.0.0.1                                 <
              httpHeaders:                                    <
                - name: brief                                 <
                  value: \"true\"                               <
              path: /healthz                                  <
              port: 9879                                      <
              scheme: HTTP                                    <
            initialDelaySeconds: 5                            <
            periodSeconds: 2                                  <
            successThreshold: 1                               <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /host/proc/sys/net                   <
              name: host-proc-sys-net                         <
            - mountPath: /host/proc/sys/kernel                <
              name: host-proc-sys-kernel                      <
            - mountPath: /sys/fs/bpf                          <
              mountPropagation: HostToContainer               <
              name: bpf-maps                                  <
            - mountPath: /var/run/cilium                      <
              name: cilium-run                                <
            - mountPath: /host/etc/cni/net.d                  <
              name: etc-cni-netd                              <
            - mountPath: /var/lib/cilium/clustermesh          <
              name: clustermesh-secrets                       <
              readOnly: true                                  <
            - mountPath: /lib/modules                         <
              name: lib-modules                               <
              readOnly: true                                  <
            - mountPath: /run/xtables.lock                    <
              name: xtables-lock                              <
            - mountPath: /var/lib/cilium/tls/hubble           <
              name: hubble-tls                                <
              readOnly: true                                  <
            - mountPath: /tmp                                 <
              name: tmp                                       <
      hostNetwork: true                                       <
      initContainers:                                         <
        - command:                                            <
            - cilium-dbg                                      <
            - build-config                                    <
          env:                                                <
            - name: K8S_NODE_NAME                             <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: spec.nodeName                    <
            - name: CILIUM_K8S_NAMESPACE                      <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: metadata.namespace               <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: config                                        <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /tmp                                 <
              name: tmp                                       <
        - command:                                            <
            - sh                                              <
            - -ec                                             <
            - |                                               <
              cp /usr/bin/cilium-mount /hostbin/cilium-mount; <
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount= <
              rm /hostbin/cilium-mount                        <
          env:                                                <
            - name: CGROUP_ROOT                               <
              value: /run/cilium/cgroupv2                     <
            - name: BIN_PATH                                  <
              value: /opt/cni/bin                             <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: mount-cgroup                                  <
          securityContext:                                    <
            capabilities:                                     <
              add:                                            <
                - SYS_ADMIN                                   <
                - SYS_CHROOT                                  <
                - SYS_PTRACE                                  <
              drop:                                           <
                - ALL                                         <
            seLinuxOptions:                                   <
              level: s0                                       <
              type: spc_t                                     <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /hostproc                            <
              name: hostproc                                  <
            - mountPath: /hostbin                             <
              name: cni-path                                  <
        - command:                                            <
            - sh                                              <
            - -ec                                             <
            - |                                               <
              cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sy <
              nsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH} <
              rm /hostbin/cilium-sysctlfix                    <
          env:                                                <
            - name: BIN_PATH                                  <
              value: /opt/cni/bin                             <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: apply-sysctl-overwrites                       <
          securityContext:                                    <
            capabilities:                                     <
              add:                                            <
                - SYS_ADMIN                                   <
                - SYS_CHROOT                                  <
                - SYS_PTRACE                                  <
              drop:                                           <
                - ALL                                         <
            seLinuxOptions:                                   <
              level: s0                                       <
              type: spc_t                                     <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /hostproc                            <
              name: hostproc                                  <
            - mountPath: /hostbin                             <
              name: cni-path                                  <
        - args:                                               <
            - mount | grep \"/sys/fs/bpf type bpf\" || mount -t <
          command:                                            <
            - /bin/bash                                       <
            - -c                                              <
            - --                                              <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: mount-bpf-fs                                  <
          securityContext:                                    <
            privileged: true                                  <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /sys/fs/bpf                          <
              mountPropagation: Bidirectional                 <
              name: bpf-maps                                  <
        - command:                                            <
            - /init-container.sh                              <
          env:                                                <
            - name: CILIUM_ALL_STATE                          <
              valueFrom:                                      <
                configMapKeyRef:                              <
                  key: clean-cilium-state                     <
                  name: cilium-config                         <
                  optional: true                              <
            - name: CILIUM_BPF_STATE                          <
              valueFrom:                                      <
                configMapKeyRef:                              <
                  key: clean-cilium-bpf-state                 <
                  name: cilium-config                         <
                  optional: true                              <
            - name: WRITE_CNI_CONF_WHEN_READY                 <
              valueFrom:                                      <
                configMapKeyRef:                              <
                  key: write-cni-conf-when-ready              <
                  name: cilium-config                         <
                  optional: true                              <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: clean-cilium-state                            <
          securityContext:                                    <
            capabilities:                                     <
              add:                                            <
                - NET_ADMIN                                   <
                - SYS_MODULE                                  <
                - SYS_ADMIN                                   <
                - SYS_RESOURCE                                <
              drop:                                           <
                - ALL                                         <
            seLinuxOptions:                                   <
              level: s0                                       <
              type: spc_t                                     <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /sys/fs/bpf                          <
              name: bpf-maps                                  <
            - mountPath: /run/cilium/cgroupv2                 <
              mountPropagation: HostToContainer               <
              name: cilium-cgroup                             <
            - mountPath: /var/run/cilium                      <
              name: cilium-run                                <
        - command:                                            <
            - /install-plugin.sh                              <
          image: quay.io/cilium/cilium:v1.15.4@sha256:b760a48 <
          imagePullPolicy: IfNotPresent                       <
          name: install-cni-binaries                          <
          resources:                                          <
            requests:                                         <
              cpu: 100m                                       <
              memory: 10Mi                                    <
          securityContext:                                    <
            capabilities:                                     <
              drop:                                           <
                - ALL                                         <
            seLinuxOptions:                                   <
              level: s0                                       <
              type: spc_t                                     <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /host/opt/cni/bin                    <
              name: cni-path                                  <
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
      priorityClassName: system-node-critical                 <
      restartPolicy: Always                                   <
      serviceAccount: cilium                                  <
      serviceAccountName: cilium                              <
      terminationGracePeriodSeconds: 1                        <
      tolerations:                                                    tolerations:
        - operator: Exists                                              - operator: Exists
      volumes:                                                        volumes:
        - emptyDir: {}                                        |         # For sharing configuration between the \"config\" init
          name: tmp                                           |       - name: tmp
        - hostPath:                                           |         emptyDir: {}
            path: /var/run/cilium                             |         # To keep state between restarts / upgrades
            type: DirectoryOrCreate                           |       - name: cilium-run
          name: cilium-run                                    |         hostPath:
        - hostPath:                                           |           path: /var/run/cilium
            path: /sys/fs/bpf                                 |           type: DirectoryOrCreate
            type: DirectoryOrCreate                           |         # To keep state between restarts / upgrades for bpf m
          name: bpf-maps                                      |       - name: bpf-maps
        - hostPath:                                           |         hostPath:
            path: /proc                                       |           path: /sys/fs/bpf
            type: Directory                                   |           type: DirectoryOrCreate
          name: hostproc                                      |       # To mount cgroup2 filesystem on the host
        - hostPath:                                           |       - name: hostproc
            path: /run/cilium/cgroupv2                        |         hostPath:
            type: DirectoryOrCreate                           |           path: /proc
          name: cilium-cgroup                                 |           type: Directory
        - hostPath:                                           |       # To keep state between restarts / upgrades for cgroup2
            path: /opt/cni/bin                                |       - name: cilium-cgroup
            type: DirectoryOrCreate                           |         hostPath:
          name: cni-path                                      |           path: /run/cilium/cgroupv2
        - hostPath:                                           |           type: DirectoryOrCreate
            path: /etc/cni/net.d                              |       # To install cilium cni plugin in the host
            type: DirectoryOrCreate                           |       - name: cni-path
          name: etc-cni-netd                                  |         hostPath:
        - hostPath:                                           |           path:  /opt/cni/bin
            path: /lib/modules                                |           type: DirectoryOrCreate
          name: lib-modules                                   |         # To install cilium cni configuration in the host
        - hostPath:                                           |       - name: etc-cni-netd
            path: /run/xtables.lock                           |         hostPath:
            type: FileOrCreate                                |           path: /etc/cni/net.d
          name: xtables-lock                                  |           type: DirectoryOrCreate
        - name: clustermesh-secrets                           |         # To be able to load kernel modules
          projected:                                          |       - name: lib-modules
            defaultMode: 256                                  |         hostPath:
            sources:                                          |           path: /lib/modules
              - secret:                                       |         # To access iptables concurrently with other processe
                  name: cilium-clustermesh                    |       - name: xtables-lock
                  optional: true                              |         hostPath:
              - secret:                                       |           path: /run/xtables.lock
                  items:                                      |           type: FileOrCreate
                    - key: tls.key                            |         # To read the clustermesh configuration
                      path: common-etcd-client.key            |       - name: clustermesh-secrets
                    - key: tls.crt                            |         projected:
                      path: common-etcd-client.crt            |           # note: the leading zero means this number is in oc
                    - key: ca.crt                             |           defaultMode: 0400
                      path: common-etcd-client-ca.crt         |           sources:
                  name: clustermesh-apiserver-remote-cert     |           - secret:
                  optional: true                              |               name: cilium-clustermesh
        - hostPath:                                           |               optional: true
            path: /proc/sys/net                               |               # note: items are not explicitly listed here, s
            type: Directory                                   |               # depend on the peers configured, and that woul
          name: host-proc-sys-net                             |               # at every addition/removal. Leaving the field 
        - hostPath:                                           |               # to be automatically projected into the volume
            path: /proc/sys/kernel                            |           - secret:
            type: Directory                                   |               name: clustermesh-apiserver-remote-cert
          name: host-proc-sys-kernel                          |               optional: true
        - name: hubble-tls                                    |               items:
          projected:                                          |               - key: tls.key
            defaultMode: 256                                  |                 path: common-etcd-client.key
            sources:                                          |               - key: tls.crt
              - secret:                                       |                 path: common-etcd-client.crt
                  items:                                      |               - key: ca.crt
                    - key: tls.crt                            |                 path: common-etcd-client-ca.crt
                      path: server.crt                        |       - name: host-proc-sys-net
                    - key: tls.key                            |         hostPath:
                      path: server.key                        |           path: /proc/sys/net
                    - key: ca.crt                             |           type: Directory
                      path: client-ca.crt                     |       - name: host-proc-sys-kernel
                  name: hubble-server-certs                   |         hostPath:
                  optional: true                              |           path: /proc/sys/kernel
  updateStrategy:                                             |           type: Directory
    rollingUpdate:                                            |       - name: hubble-tls
      maxUnavailable: 2                                       |         projected:
    type: RollingUpdate                                       |           # note: the leading zero means this number is in oc
                                                              >           defaultMode: 0400
                                                              >           sources:
                                                              >           - secret:
                                                              >               name: hubble-server-certs
                                                              >               optional: true
                                                              >               items:
                                                              >               - key: tls.crt
                                                              >                 path: server.crt
                                                              >               - key: tls.key
                                                              >                 path: server.key
                                                              >               - key: ca.crt
                                                              >                 path: client-ca.crt
---                                                             ---
                                                              > # Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: cilium-operator
                                                              >   namespace: kube-system
  labels:                                                         labels:
    app.kubernetes.io/name: cilium-operator                   <
    app.kubernetes.io/part-of: cilium                         <
    io.cilium/app: operator                                         io.cilium/app: operator
    name: cilium-operator                                           name: cilium-operator
  name: cilium-operator                                       |     app.kubernetes.io/part-of: cilium
  namespace: kube-system                                      |     app.kubernetes.io/name: cilium-operator
spec:                                                           spec:
                                                              >   # See docs on ServerCapabilities.LeasesResourceLock in file
                                                              >   # for more details.
  replicas: 2                                                     replicas: 2
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      io.cilium/app: operator                                         io.cilium/app: operator
      name: cilium-operator                                           name: cilium-operator
                                                              >   # ensure operator update on single node k8s clusters, by us
                                                              >   # of one replica and no user configured Recreate strategy.
                                                              >   # otherwise an update might get stuck due to the default ma
                                                              >   # podAntiAffinity which prevents deployments of multiple op
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxSurge: 25%                                                   maxSurge: 25%
      maxUnavailable: 50%                                             maxUnavailable: 50%
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                                    annotations:
        prometheus.io/port: \"9963\"                                      prometheus.io/port: \"9963\"
        prometheus.io/scrape: \"true\"                                    prometheus.io/scrape: \"true\"
      labels:                                                         labels:
        app.kubernetes.io/name: cilium-operator               <
        app.kubernetes.io/part-of: cilium                     <
        io.cilium/app: operator                                         io.cilium/app: operator
        name: cilium-operator                                           name: cilium-operator
                                                              >         app.kubernetes.io/part-of: cilium
                                                              >         app.kubernetes.io/name: cilium-operator
    spec:                                                           spec:
                                                              >       containers:
                                                              >       - name: cilium-operator
                                                              >         image: \"quay.io/cilium/operator-aws:v1.15.4@sha256:86
                                                              >         imagePullPolicy: IfNotPresent
                                                              >         command:
                                                              >         - cilium-operator-aws
                                                              >         args:
                                                              >         - --config-dir=/tmp/cilium/config-map
                                                              >         - --debug=$(CILIUM_DEBUG)
                                                              >         env:
                                                              >         - name: K8S_NODE_NAME
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: spec.nodeName
                                                              >         - name: CILIUM_K8S_NAMESPACE
                                                              >           valueFrom:
                                                              >             fieldRef:
                                                              >               apiVersion: v1
                                                              >               fieldPath: metadata.namespace
                                                              >         - name: CILIUM_DEBUG
                                                              >           valueFrom:
                                                              >             configMapKeyRef:
                                                              >               key: debug
                                                              >               name: cilium-config
                                                              >               optional: true
                                                              >         - name: AWS_ACCESS_KEY_ID
                                                              >           valueFrom:
                                                              >             secretKeyRef:
                                                              >               name: cilium-aws
                                                              >               key: AWS_ACCESS_KEY_ID
                                                              >               optional: true
                                                              >         - name: AWS_SECRET_ACCESS_KEY
                                                              >           valueFrom:
                                                              >             secretKeyRef:
                                                              >               name: cilium-aws
                                                              >               key: AWS_SECRET_ACCESS_KEY
                                                              >               optional: true
                                                              >         - name: AWS_DEFAULT_REGION
                                                              >           valueFrom:
                                                              >             secretKeyRef:
                                                              >               name: cilium-aws
                                                              >               key: AWS_DEFAULT_REGION
                                                              >               optional: true
                                                              >         ports:
                                                              >         - name: prometheus
                                                              >           containerPort: 9963
                                                              >           hostPort: 9963
                                                              >           protocol: TCP
                                                              >         livenessProbe:
                                                              >           httpGet:
                                                              >             host: \"127.0.0.1\"
                                                              >             path: /healthz
                                                              >             port: 9234
                                                              >             scheme: HTTP
                                                              >           initialDelaySeconds: 60
                                                              >           periodSeconds: 10
                                                              >           timeoutSeconds: 3
                                                              >         readinessProbe:
                                                              >           httpGet:
                                                              >             host: \"127.0.0.1\"
                                                              >             path: /healthz
                                                              >             port: 9234
                                                              >             scheme: HTTP
                                                              >           initialDelaySeconds: 0
                                                              >           periodSeconds: 5
                                                              >           timeoutSeconds: 3
                                                              >           failureThreshold: 5
                                                              >         volumeMounts:
                                                              >         - name: cilium-config-path
                                                              >           mountPath: /tmp/cilium/config-map
                                                              >           readOnly: true
                                                              >         terminationMessagePolicy: FallbackToLogsOnError
                                                              >       hostNetwork: true
                                                              >       restartPolicy: Always
                                                              >       priorityClassName: system-cluster-critical
                                                              >       serviceAccount: \"cilium-operator\"
                                                              >       serviceAccountName: \"cilium-operator\"
                                                              >       automountServiceAccountToken: true
                                                              >       # In HA mode, cilium-operator pods must not be schedule
                                                              >       # node as they will clash with each other.
      affinity:                                                       affinity:
        podAntiAffinity:                                                podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:                 requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:                                  |           - labelSelector:
                matchLabels:                                  |               matchLabels:
                  io.cilium/app: operator                     |                 io.cilium/app: operator
              topologyKey: kubernetes.io/hostname             |             topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true                      <
      containers:                                             <
        - args:                                               <
            - --config-dir=/tmp/cilium/config-map             <
            - --debug=$(CILIUM_DEBUG)                         <
          command:                                            <
            - cilium-operator-aws                             <
          env:                                                <
            - name: K8S_NODE_NAME                             <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: spec.nodeName                    <
            - name: CILIUM_K8S_NAMESPACE                      <
              valueFrom:                                      <
                fieldRef:                                     <
                  apiVersion: v1                              <
                  fieldPath: metadata.namespace               <
            - name: CILIUM_DEBUG                              <
              valueFrom:                                      <
                configMapKeyRef:                              <
                  key: debug                                  <
                  name: cilium-config                         <
                  optional: true                              <
            - name: AWS_ACCESS_KEY_ID                         <
              valueFrom:                                      <
                secretKeyRef:                                 <
                  key: AWS_ACCESS_KEY_ID                      <
                  name: cilium-aws                            <
                  optional: true                              <
            - name: AWS_SECRET_ACCESS_KEY                     <
              valueFrom:                                      <
                secretKeyRef:                                 <
                  key: AWS_SECRET_ACCESS_KEY                  <
                  name: cilium-aws                            <
                  optional: true                              <
            - name: AWS_DEFAULT_REGION                        <
              valueFrom:                                      <
                secretKeyRef:                                 <
                  key: AWS_DEFAULT_REGION                     <
                  name: cilium-aws                            <
                  optional: true                              <
          image: quay.io/cilium/operator-aws:v1.15.4@sha256:8 <
          imagePullPolicy: IfNotPresent                       <
          livenessProbe:                                      <
            httpGet:                                          <
              host: 127.0.0.1                                 <
              path: /healthz                                  <
              port: 9234                                      <
              scheme: HTTP                                    <
            initialDelaySeconds: 60                           <
            periodSeconds: 10                                 <
            timeoutSeconds: 3                                 <
          name: cilium-operator                               <
          ports:                                              <
            - containerPort: 9963                             <
              hostPort: 9963                                  <
              name: prometheus                                <
              protocol: TCP                                   <
          readinessProbe:                                     <
            failureThreshold: 5                               <
            httpGet:                                          <
              host: 127.0.0.1                                 <
              path: /healthz                                  <
              port: 9234                                      <
              scheme: HTTP                                    <
            initialDelaySeconds: 0                            <
            periodSeconds: 5                                  <
            timeoutSeconds: 3                                 <
          terminationMessagePolicy: FallbackToLogsOnError     <
          volumeMounts:                                       <
            - mountPath: /tmp/cilium/config-map               <
              name: cilium-config-path                        <
              readOnly: true                                  <
      hostNetwork: true                                       <
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
      priorityClassName: system-cluster-critical              <
      restartPolicy: Always                                   <
      serviceAccount: cilium-operator                         <
      serviceAccountName: cilium-operator                     <
      tolerations:                                                    tolerations:
        - operator: Exists                                              - operator: Exists
      volumes:                                                        volumes:
        - configMap:                                          |         # To read the configuration from the config map
            name: cilium-config                               |       - name: cilium-config-path
          name: cilium-config-path                            |         configMap:
                                                              >           name: cilium-config
---                                                             ---
                                                              > # Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: hubble-relay
                                                              >   namespace: kube-system
  labels:                                                         labels:
                                                              >     k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay                            app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay                                     <
  name: hubble-relay                                          <
  namespace: kube-system                                      <
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      k8s-app: hubble-relay                                           k8s-app: hubble-relay
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxUnavailable: 1                                               maxUnavailable: 1
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations: null                                       |       annotations:
      labels:                                                         labels:
                                                              >         k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay                            app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay                                 <
    spec:                                                           spec:
      affinity:                                               |       securityContext:
        podAffinity:                                          |         fsGroup: 65532
          requiredDuringSchedulingIgnoredDuringExecution:     <
            - labelSelector:                                  <
                matchLabels:                                  <
                  k8s-app: cilium                             <
              topologyKey: kubernetes.io/hostname             <
      automountServiceAccountToken: false                     <
      containers:                                                     containers:
        - args:                                               |         - name: hubble-relay
            - serve                                           |           securityContext:
                                                              >             capabilities:
                                                              >               drop:
                                                              >               - ALL
                                                              >             runAsGroup: 65532
                                                              >             runAsNonRoot: true
                                                              >             runAsUser: 65532
                                                              >           image: \"quay.io/cilium/hubble-relay:v1.15.4@sha256:
                                                              >           imagePullPolicy: IfNotPresent
          command:                                                        command:
            - hubble-relay                                                  - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.15.4@sha256:0 |           args:
          imagePullPolicy: IfNotPresent                       |             - serve
          livenessProbe:                                      |           ports:
                                                              >             - name: grpc
                                                              >               containerPort: 4245
                                                              >           readinessProbe:
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            timeoutSeconds: 3                                               timeoutSeconds: 3
          name: hubble-relay                                  |           livenessProbe:
          ports:                                              <
            - containerPort: 4245                             <
              name: grpc                                      <
          readinessProbe:                                     <
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            timeoutSeconds: 3                                               timeoutSeconds: 3
          securityContext:                                    <
            capabilities:                                     <
              drop:                                           <
                - ALL                                         <
            runAsGroup: 65532                                 <
            runAsNonRoot: true                                <
            runAsUser: 65532                                  <
          startupProbe:                                                   startupProbe:
            failureThreshold: 20                              |             # give the relay one minute to start up
            grpc:                                                           grpc:
              port: 4222                                                      port: 4222
            periodSeconds: 3                                  <
            timeoutSeconds: 3                                               timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError     |             failureThreshold: 20
                                                              >             periodSeconds: 3
          volumeMounts:                                                   volumeMounts:
            - mountPath: /etc/hubble-relay                    |           - name: config
              name: config                                    |             mountPath: /etc/hubble-relay
              readOnly: true                                  |             readOnly: true
            - mountPath: /var/lib/hubble-relay/tls            |           - name: tls
              name: tls                                       |             mountPath: /var/lib/hubble-relay/tls
              readOnly: true                                  |             readOnly: true
      nodeSelector:                                           |           terminationMessagePolicy: FallbackToLogsOnError
        kubernetes.io/os: linux                               <
      priorityClassName: null                                 <
      restartPolicy: Always                                           restartPolicy: Always
      securityContext:                                        |       priorityClassName: 
        fsGroup: 65532                                        |       serviceAccount: \"hubble-relay\"
      serviceAccount: hubble-relay                            |       serviceAccountName: \"hubble-relay\"
      serviceAccountName: hubble-relay                        |       automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1                                terminationGracePeriodSeconds: 1
                                                              >       affinity:
                                                              >         podAffinity:
                                                              >           requiredDuringSchedulingIgnoredDuringExecution:
                                                              >           - labelSelector:
                                                              >               matchLabels:
                                                              >                 k8s-app: cilium
                                                              >             topologyKey: kubernetes.io/hostname
                                                              >       nodeSelector:
                                                              >         kubernetes.io/os: linux
      volumes:                                                        volumes:
        - configMap:                                          |       - name: config
            items:                                            |         configMap:
              - key: config.yaml                              |           name: hubble-relay-config
                path: config.yaml                             |           items:
            name: hubble-relay-config                         |           - key: config.yaml
          name: config                                        |             path: config.yaml
        - name: tls                                           |       - name: tls
          projected:                                          |         projected:
            defaultMode: 256                                  |           # note: the leading zero means this number is in oc
            sources:                                          |           defaultMode: 0400
              - secret:                                       |           sources:
                  items:                                      |           - secret:
                    - key: tls.crt                            |               name: hubble-relay-client-certs
                      path: client.crt                        |               items:
                    - key: tls.key                            |                 - key: tls.crt
                      path: client.key                        |                   path: client.crt
                    - key: ca.crt                             |                 - key: tls.key
                      path: hubble-server-ca.crt              |                   path: client.key
                  name: hubble-relay-client-certs             |                 - key: ca.crt
                                                              >                   path: hubble-server-ca.crt
---                                                             ---
apiVersion: apps/v1                                           | # Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment                                                kind: Deployment
                                                              > apiVersion: apps/v1
metadata:                                                       metadata:
                                                              >   name: hubble-ui
                                                              >   namespace: kube-system
  labels:                                                         labels:
                                                              >     k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui                               app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui                                        <
  name: hubble-ui                                             <
  namespace: kube-system                                      <
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      k8s-app: hubble-ui                                              k8s-app: hubble-ui
  strategy:                                                       strategy:
    rollingUpdate:                                                  rollingUpdate:
      maxUnavailable: 1                                               maxUnavailable: 1
    type: RollingUpdate                                             type: RollingUpdate
  template:                                                       template:
    metadata:                                                       metadata:
      annotations: null                                       |       annotations:
      labels:                                                         labels:
                                                              >         k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui                               app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium                               app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui                                    <
    spec:                                                           spec:
                                                              >       priorityClassName: 
                                                              >       serviceAccount: \"hubble-ui\"
                                                              >       serviceAccountName: \"hubble-ui\"
      automountServiceAccountToken: true                              automountServiceAccountToken: true
      containers:                                                     containers:
        - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d66 |       - name: frontend
          imagePullPolicy: IfNotPresent                       |         image: \"quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663
          livenessProbe:                                      |         imagePullPolicy: IfNotPresent
            httpGet:                                          |         ports:
              path: /healthz                                  |         - name: http
              port: 8081                                      |           containerPort: 8081
          name: frontend                                      |         livenessProbe:
          ports:                                              |           httpGet:
            - containerPort: 8081                             |             path: /healthz
              name: http                                      |             port: 8081
          readinessProbe:                                     |         readinessProbe:
            httpGet:                                          |           httpGet:
              path: /                                         |             path: /
              port: 8081                                      |             port: 8081
          terminationMessagePolicy: FallbackToLogsOnError     |         volumeMounts:
          volumeMounts:                                       |         - name: hubble-ui-nginx-conf
            - mountPath: /etc/nginx/conf.d/default.conf       |           mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf                      |           subPath: nginx.conf
              subPath: nginx.conf                             |         - name: tmp-dir
            - mountPath: /tmp                                 |           mountPath: /tmp
              name: tmp-dir                                   |         terminationMessagePolicy: FallbackToLogsOnError
        - env:                                                |       - name: backend
            - name: EVENTS_SERVER_PORT                        |         image: \"quay.io/cilium/hubble-ui-backend:v0.13.0@sha2
              value: \"8090\"                                   |         imagePullPolicy: IfNotPresent
            - name: FLOWS_API_ADDR                            |         env:
              value: hubble-relay:80                          |         - name: EVENTS_SERVER_PORT
          image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha |           value: \"8090\"
          imagePullPolicy: IfNotPresent                       |         - name: FLOWS_API_ADDR
          name: backend                                       |           value: \"hubble-relay:80\"
          ports:                                              |         ports:
            - containerPort: 8090                             |         - name: grpc
              name: grpc                                      |           containerPort: 8090
          terminationMessagePolicy: FallbackToLogsOnError     |         volumeMounts:
          volumeMounts: null                                  |         terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:                                                   nodeSelector:
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
      priorityClassName: null                                 <
      serviceAccount: hubble-ui                               <
      serviceAccountName: hubble-ui                           <
      volumes:                                                        volumes:
        - configMap:                                          |       - configMap:
            defaultMode: 420                                  |           defaultMode: 420
            name: hubble-ui-nginx                             |           name: hubble-ui-nginx
          name: hubble-ui-nginx-conf                          |         name: hubble-ui-nginx-conf
        - emptyDir: {}                                        |       - emptyDir: {}
          name: tmp-dir                                       |         name: tmp-dir
"""

['sdiff ../../example/remote/__snapshots__/ingress-nginx.values.snap <(helm template chartsnap ingress-nginx -f ../../example/remote/ingress-nginx.values.yaml --repo https://kubernetes.github.io/ingress-nginx -n ingress-nginx --skip-tests)']
SnapShot = """
                                                              > ---
                                                              > # Source: ingress-nginx/templates/controller-serviceaccount.y
apiVersion: v1                                                  apiVersion: v1
automountServiceAccountToken: true                            <
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
                                                              > automountServiceAccountToken: true
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1                                                  apiVersion: v1
data:                                                         <
  allow-snippet-annotations: \"false\"                          <
kind: ConfigMap                                                 kind: ConfigMap
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
                                                              > data:
                                                              >   allow-snippet-annotations: \"false\"
---                                                             ---
                                                              > # Source: ingress-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/instance: chartsnap                     |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       <
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - configmaps                                                    - configmaps
      - endpoints                                                     - endpoints
      - nodes                                                         - nodes
      - pods                                                          - pods
      - secrets                                                       - secrets
      - namespaces                                                    - namespaces
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resources:                                                      resources:
      - leases                                                        - leases
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - nodes                                                         - nodes
    verbs:                                                          verbs:
      - get                                                           - get
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - services                                                      - services
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses                                                     - ingresses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - events                                                        - events
    verbs:                                                          verbs:
      - create                                                        - create
      - patch                                                         - patch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses/status                                              - ingresses/status
    verbs:                                                          verbs:
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingressclasses                                                - ingressclasses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - discovery.k8s.io                                              - discovery.k8s.io
    resources:                                                      resources:
      - endpointslices                                                - endpointslices
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
      - get                                                           - get
---                                                             ---
                                                              > # Source: ingress-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/instance: chartsnap                     |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       <
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - namespaces                                                    - namespaces
    verbs:                                                          verbs:
      - get                                                           - get
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - configmaps                                                    - configmaps
      - pods                                                          - pods
      - secrets                                                       - secrets
      - endpoints                                                     - endpoints
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - services                                                      - services
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses                                                     - ingresses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
                                                              >   # Omit Ingress status permissions if `--update-status` is d
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingresses/status                                              - ingresses/status
    verbs:                                                          verbs:
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - networking.k8s.io                                             - networking.k8s.io
    resources:                                                      resources:
      - ingressclasses                                                - ingressclasses
    verbs:                                                          verbs:
      - get                                                           - get
      - list                                                          - list
      - watch                                                         - watch
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resourceNames:                                            <
      - chartsnap-ingress-nginx-leader                        <
    resources:                                                      resources:
      - leases                                                        - leases
                                                              >     resourceNames:
                                                              >       - chartsnap-ingress-nginx-leader
    verbs:                                                          verbs:
      - get                                                           - get
      - update                                                        - update
  - apiGroups:                                                    - apiGroups:
      - coordination.k8s.io                                           - coordination.k8s.io
    resources:                                                      resources:
      - leases                                                        - leases
    verbs:                                                          verbs:
      - create                                                        - create
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - events                                                        - events
    verbs:                                                          verbs:
      - create                                                        - create
      - patch                                                         - patch
  - apiGroups:                                                    - apiGroups:
      - discovery.k8s.io                                              - discovery.k8s.io
    resources:                                                      resources:
      - endpointslices                                                - endpointslices
    verbs:                                                          verbs:
      - list                                                          - list
      - watch                                                         - watch
      - get                                                           - get
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
  namespace: ingress-nginx                                        namespace: ingress-nginx
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx                                   name: chartsnap-ingress-nginx
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-service-internal
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  annotations:                                                    annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: inte |     service.beta.kubernetes.io/aws-load-balancer-scheme: \"int
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx-controller-internal               name: chartsnap-ingress-nginx-controller-internal
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  ipFamilies:                                                 |   type: LoadBalancer
    - IPv4                                                    <
  ipFamilyPolicy: SingleStack                                     ipFamilyPolicy: SingleStack
                                                              >   ipFamilies: 
                                                              >     - IPv4
  ports:                                                          ports:
    - appProtocol: http                                       |     - name: http
      name: http                                              <
      port: 80                                                        port: 80
      protocol: TCP                                                   protocol: TCP
      targetPort: http                                                targetPort: http
    - appProtocol: https                                      |       appProtocol: http
      name: https                                             |     - name: https
      port: 443                                                       port: 443
      protocol: TCP                                                   protocol: TCP
      targetPort: https                                               targetPort: https
                                                              >       appProtocol: https
  selector:                                                       selector:
    app.kubernetes.io/component: controller                   <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer                                          |     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/component: controller
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-service-webhook.
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx-controller-admission              name: chartsnap-ingress-nginx-controller-admission
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
                                                              >   type: ClusterIP
  ports:                                                          ports:
    - appProtocol: https                                      |     - name: https-webhook
      name: https-webhook                                     <
      port: 443                                                       port: 443
      targetPort: webhook                                             targetPort: webhook
                                                              >       appProtocol: https
  selector:                                                       selector:
    app.kubernetes.io/component: controller                   <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
  type: ClusterIP                                             |     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/component: controller
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-service.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  annotations: null                                           |   annotations:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  ipFamilies:                                                 |   type: LoadBalancer
    - IPv4                                                    <
  ipFamilyPolicy: SingleStack                                     ipFamilyPolicy: SingleStack
                                                              >   ipFamilies: 
                                                              >     - IPv4
  ports:                                                          ports:
    - appProtocol: http                                       |     - name: http
      name: http                                              <
      port: 80                                                        port: 80
      protocol: TCP                                                   protocol: TCP
      targetPort: http                                                targetPort: http
    - appProtocol: https                                      |       appProtocol: http
      name: https                                             |     - name: https
      port: 443                                                       port: 443
      protocol: TCP                                                   protocol: TCP
      targetPort: https                                               targetPort: https
                                                              >       appProtocol: https
  selector:                                                       selector:
    app.kubernetes.io/component: controller                   <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer                                          |     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/component: controller
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: chartsnap-ingress-nginx-controller                        name: chartsnap-ingress-nginx-controller
  namespace: ingress-nginx                                        namespace: ingress-nginx
spec:                                                           spec:
  minReadySeconds: 0                                          <
  replicas: 1                                                 <
  revisionHistoryLimit: 10                                    <
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/component: controller                 <
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >       app.kubernetes.io/instance: chartsnap
                                                              >       app.kubernetes.io/component: controller
                                                              >   replicas: 1
                                                              >   revisionHistoryLimit: 10
                                                              >   minReadySeconds: 0
  template:                                                       template:
    metadata:                                                       metadata:
      labels:                                                         labels:
        app.kubernetes.io/component: controller               |         helm.sh/chart: ingress-nginx-4.10.0
        app.kubernetes.io/instance: chartsnap                 <
        app.kubernetes.io/managed-by: Helm                    <
        app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.10.0\"
        app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0                     |         app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ingress-nginx-4.10.0                   |         app.kubernetes.io/component: controller
    spec:                                                           spec:
                                                              >       dnsPolicy: ClusterFirst
      containers:                                                     containers:
        - args:                                               |         - name: controller
                                                              >           image: registry.k8s.io/ingress-nginx/controller:v1.
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           lifecycle: 
                                                              >             preStop:
                                                              >               exec:
                                                              >                 command:
                                                              >                 - /wait-shutdown
                                                              >           args: 
            - /nginx-ingress-controller                                     - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/chartsnap-in               - --publish-service=$(POD_NAMESPACE)/chartsnap-in
            - --election-id=chartsnap-ingress-nginx-leader                  - --election-id=chartsnap-ingress-nginx-leader
            - --controller-class=k8s.io/ingress-nginx                       - --controller-class=k8s.io/ingress-nginx
            - --ingress-class=nginx                                         - --ingress-class=nginx
            - --configmap=$(POD_NAMESPACE)/chartsnap-ingress-               - --configmap=$(POD_NAMESPACE)/chartsnap-ingress-
            - --validating-webhook=:8443                                    - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/cer               - --validating-webhook-certificate=/usr/local/cer
            - --validating-webhook-key=/usr/local/certificate               - --validating-webhook-key=/usr/local/certificate
            - --enable-metrics=false                                        - --enable-metrics=false
                                                              >           securityContext: 
                                                              >             runAsNonRoot: true
                                                              >             runAsUser: 101
                                                              >             allowPrivilegeEscalation: false
                                                              >             seccompProfile: 
                                                              >               type: RuntimeDefault
                                                              >             capabilities:
                                                              >               drop:
                                                              >               - ALL
                                                              >               add:
                                                              >               - NET_BIND_SERVICE
                                                              >             readOnlyRootFilesystem: false
          env:                                                            env:
            - name: POD_NAME                                                - name: POD_NAME
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.name                                        fieldPath: metadata.name
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
            - name: LD_PRELOAD                                              - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so                            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1. |           livenessProbe: 
          imagePullPolicy: IfNotPresent                       <
          lifecycle:                                          <
            preStop:                                          <
              exec:                                           <
                command:                                      <
                  - /wait-shutdown                            <
          livenessProbe:                                      <
            failureThreshold: 5                                             failureThreshold: 5
            httpGet:                                                        httpGet:
              path: /healthz                                                  path: /healthz
              port: 10254                                                     port: 10254
              scheme: HTTP                                                    scheme: HTTP
            initialDelaySeconds: 10                                         initialDelaySeconds: 10
            periodSeconds: 10                                               periodSeconds: 10
            successThreshold: 1                                             successThreshold: 1
            timeoutSeconds: 1                                               timeoutSeconds: 1
          name: controller                                    |           readinessProbe: 
          ports:                                              <
            - containerPort: 80                               <
              name: http                                      <
              protocol: TCP                                   <
            - containerPort: 443                              <
              name: https                                     <
              protocol: TCP                                   <
            - containerPort: 8443                             <
              name: webhook                                   <
              protocol: TCP                                   <
          readinessProbe:                                     <
            failureThreshold: 3                                             failureThreshold: 3
            httpGet:                                                        httpGet:
              path: /healthz                                                  path: /healthz
              port: 10254                                                     port: 10254
              scheme: HTTP                                                    scheme: HTTP
            initialDelaySeconds: 10                                         initialDelaySeconds: 10
            periodSeconds: 10                                               periodSeconds: 10
            successThreshold: 1                                             successThreshold: 1
            timeoutSeconds: 1                                               timeoutSeconds: 1
          resources:                                          |           ports:
                                                              >             - name: http
                                                              >               containerPort: 80
                                                              >               protocol: TCP
                                                              >             - name: https
                                                              >               containerPort: 443
                                                              >               protocol: TCP
                                                              >             - name: webhook
                                                              >               containerPort: 8443
                                                              >               protocol: TCP
                                                              >           volumeMounts:
                                                              >             - name: webhook-cert
                                                              >               mountPath: /usr/local/certificates/
                                                              >               readOnly: true
                                                              >           resources: 
            requests:                                                       requests:
              cpu: 100m                                                       cpu: 100m
              memory: 90Mi                                                    memory: 90Mi
          securityContext:                                    |       nodeSelector: 
            allowPrivilegeEscalation: false                   <
            capabilities:                                     <
              add:                                            <
                - NET_BIND_SERVICE                            <
              drop:                                           <
                - ALL                                         <
            readOnlyRootFilesystem: false                     <
            runAsNonRoot: true                                <
            runAsUser: 101                                    <
            seccompProfile:                                   <
              type: RuntimeDefault                            <
          volumeMounts:                                       <
            - mountPath: /usr/local/certificates/             <
              name: webhook-cert                              <
              readOnly: true                                  <
      dnsPolicy: ClusterFirst                                 <
      nodeSelector:                                           <
        kubernetes.io/os: linux                                         kubernetes.io/os: linux
      serviceAccountName: chartsnap-ingress-nginx                     serviceAccountName: chartsnap-ingress-nginx
      terminationGracePeriodSeconds: 300                              terminationGracePeriodSeconds: 300
      volumes:                                                        volumes:
        - name: webhook-cert                                            - name: webhook-cert
          secret:                                                         secret:
            secretName: chartsnap-ingress-nginx-admission                   secretName: chartsnap-ingress-nginx-admission
---                                                             ---
                                                              > # Source: ingress-nginx/templates/controller-ingressclass.yam
                                                              > # We don't support namespaced ingressClass yet
                                                              > # So a ClusterRole and a ClusterRoleBinding is required
apiVersion: networking.k8s.io/v1                                apiVersion: networking.k8s.io/v1
kind: IngressClass                                              kind: IngressClass
metadata:                                                       metadata:
  labels:                                                         labels:
    app.kubernetes.io/component: controller                   |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: controller
  name: nginx                                                     name: nginx
spec:                                                           spec:
  controller: k8s.io/ingress-nginx                                controller: k8s.io/ingress-nginx
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/validati
                                                              > # before changing this value, check the required kubernetes v
                                                              > # https://kubernetes.io/docs/reference/access-authn-authz/ext
apiVersion: admissionregistration.k8s.io/v1                     apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration                            kind: ValidatingWebhookConfiguration
metadata:                                                       metadata:
  annotations: null                                           |   annotations:
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
webhooks:                                                       webhooks:
  - admissionReviewVersions:                                  |   - name: validate.nginx.ingress.kubernetes.io
      - v1                                                    <
    clientConfig:                                             <
      service:                                                <
        name: chartsnap-ingress-nginx-controller-admission    <
        namespace: ingress-nginx                              <
        path: /networking/v1/ingresses                        <
    failurePolicy: Fail                                       <
    matchPolicy: Equivalent                                         matchPolicy: Equivalent
    name: validate.nginx.ingress.kubernetes.io                <
    rules:                                                          rules:
      - apiGroups:                                                    - apiGroups:
          - networking.k8s.io                                             - networking.k8s.io
        apiVersions:                                                    apiVersions:
          - v1                                                            - v1
        operations:                                                     operations:
          - CREATE                                                        - CREATE
          - UPDATE                                                        - UPDATE
        resources:                                                      resources:
          - ingresses                                                     - ingresses
                                                              >     failurePolicy: Fail
    sideEffects: None                                               sideEffects: None
                                                              >     admissionReviewVersions:
                                                              >       - v1
                                                              >     clientConfig:
                                                              >       service:
                                                              >         name: chartsnap-ingress-nginx-controller-admission
                                                              >         namespace: ingress-nginx
                                                              >         path: /networking/v1/ingresses
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-u |     \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-u |     \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                     <
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - admissionregistration.k8s.io                                  - admissionregistration.k8s.io
    resources:                                                      resources:
      - validatingwebhookconfigurations                               - validatingwebhookconfigurations
    verbs:                                                          verbs:
      - get                                                           - get
      - update                                                        - update
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-u |     \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                     <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: Role                                                      kind: Role
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-u |     \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
rules:                                                          rules:
  - apiGroups:                                                    - apiGroups:
      - \"\"                                                            - \"\"
    resources:                                                      resources:
      - secrets                                                       - secrets
    verbs:                                                          verbs:
      - get                                                           - get
      - create                                                        - create
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding                                               kind: RoleBinding
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission
                                                              >   namespace: ingress-nginx
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-u |     \"helm.sh/hook\": pre-install,pre-upgrade,post-install,post
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission                     <
  namespace: ingress-nginx                                    <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: Role                                                      kind: Role
  name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
subjects:                                                       subjects:
  - kind: ServiceAccount                                          - kind: ServiceAccount
    name: chartsnap-ingress-nginx-admission                         name: chartsnap-ingress-nginx-admission
    namespace: ingress-nginx                                        namespace: ingress-nginx
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: batch/v1                                            apiVersion: batch/v1
kind: Job                                                       kind: Job
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission-create
                                                              >   namespace: ingress-nginx
  annotations:                                                    annotations:
    helm.sh/hook: pre-install,pre-upgrade                     |     \"helm.sh/hook\": pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission-create              <
  namespace: ingress-nginx                                    <
spec:                                                           spec:
  template:                                                       template:
    metadata:                                                       metadata:
                                                              >       name: chartsnap-ingress-nginx-admission-create
      labels:                                                         labels:
        app.kubernetes.io/component: admission-webhook        |         helm.sh/chart: ingress-nginx-4.10.0
        app.kubernetes.io/instance: chartsnap                 <
        app.kubernetes.io/managed-by: Helm                    <
        app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.10.0\"
        app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0                     |         app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ingress-nginx-4.10.0                   |         app.kubernetes.io/component: admission-webhook
      name: chartsnap-ingress-nginx-admission-create          <
    spec:                                                           spec:
      containers:                                                     containers:
        - args:                                               |         - name: create
                                                              >           image: registry.k8s.io/ingress-nginx/kube-webhook-c
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           args:
            - create                                                        - create
            - --host=chartsnap-ingress-nginx-controller-admis               - --host=chartsnap-ingress-nginx-controller-admis
            - --namespace=$(POD_NAMESPACE)                                  - --namespace=$(POD_NAMESPACE)
            - --secret-name=chartsnap-ingress-nginx-admission               - --secret-name=chartsnap-ingress-nginx-admission
          env:                                                            env:
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
          image: registry.k8s.io/ingress-nginx/kube-webhook-c |           securityContext: 
          imagePullPolicy: IfNotPresent                       <
          name: create                                        <
          securityContext:                                    <
            allowPrivilegeEscalation: false                                 allowPrivilegeEscalation: false
            capabilities:                                                   capabilities:
              drop:                                                           drop:
                - ALL                                         |               - ALL
            readOnlyRootFilesystem: true                                    readOnlyRootFilesystem: true
            runAsNonRoot: true                                              runAsNonRoot: true
            runAsUser: 65532                                                runAsUser: 65532
            seccompProfile:                                                 seccompProfile:
              type: RuntimeDefault                                            type: RuntimeDefault
      nodeSelector:                                           <
        kubernetes.io/os: linux                               <
      restartPolicy: OnFailure                                        restartPolicy: OnFailure
      serviceAccountName: chartsnap-ingress-nginx-admission           serviceAccountName: chartsnap-ingress-nginx-admission
                                                              >       nodeSelector: 
                                                              >         kubernetes.io/os: linux
---                                                             ---
                                                              > # Source: ingress-nginx/templates/admission-webhooks/job-patc
apiVersion: batch/v1                                            apiVersion: batch/v1
kind: Job                                                       kind: Job
metadata:                                                       metadata:
                                                              >   name: chartsnap-ingress-nginx-admission-patch
                                                              >   namespace: ingress-nginx
  annotations:                                                    annotations:
    helm.sh/hook: post-install,post-upgrade                   |     \"helm.sh/hook\": post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-suc |     \"helm.sh/hook-delete-policy\": before-hook-creation,hook-s
  labels:                                                         labels:
    app.kubernetes.io/component: admission-webhook            |     helm.sh/chart: ingress-nginx-4.10.0
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/managed-by: Helm                        <
    app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.10.0\"
    app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0                         |     app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ingress-nginx-4.10.0                       |     app.kubernetes.io/component: admission-webhook
  name: chartsnap-ingress-nginx-admission-patch               <
  namespace: ingress-nginx                                    <
spec:                                                           spec:
  template:                                                       template:
    metadata:                                                       metadata:
                                                              >       name: chartsnap-ingress-nginx-admission-patch
      labels:                                                         labels:
        app.kubernetes.io/component: admission-webhook        |         helm.sh/chart: ingress-nginx-4.10.0
        app.kubernetes.io/instance: chartsnap                 <
        app.kubernetes.io/managed-by: Helm                    <
        app.kubernetes.io/name: ingress-nginx                           app.kubernetes.io/name: ingress-nginx
                                                              >         app.kubernetes.io/instance: chartsnap
                                                              >         app.kubernetes.io/version: \"1.10.0\"
        app.kubernetes.io/part-of: ingress-nginx                        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0                     |         app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ingress-nginx-4.10.0                   |         app.kubernetes.io/component: admission-webhook
      name: chartsnap-ingress-nginx-admission-patch           <
    spec:                                                           spec:
      containers:                                                     containers:
        - args:                                               |         - name: patch
                                                              >           image: registry.k8s.io/ingress-nginx/kube-webhook-c
                                                              >           imagePullPolicy: IfNotPresent
                                                              >           args:
            - patch                                                         - patch
            - --webhook-name=chartsnap-ingress-nginx-admissio               - --webhook-name=chartsnap-ingress-nginx-admissio
            - --namespace=$(POD_NAMESPACE)                                  - --namespace=$(POD_NAMESPACE)
            - --patch-mutating=false                                        - --patch-mutating=false
            - --secret-name=chartsnap-ingress-nginx-admission               - --secret-name=chartsnap-ingress-nginx-admission
            - --patch-failure-policy=Fail                                   - --patch-failure-policy=Fail
          env:                                                            env:
            - name: POD_NAMESPACE                                           - name: POD_NAMESPACE
              valueFrom:                                                      valueFrom:
                fieldRef:                                                       fieldRef:
                  fieldPath: metadata.namespace                                   fieldPath: metadata.namespace
          image: registry.k8s.io/ingress-nginx/kube-webhook-c |           securityContext: 
          imagePullPolicy: IfNotPresent                       <
          name: patch                                         <
          securityContext:                                    <
            allowPrivilegeEscalation: false                                 allowPrivilegeEscalation: false
            capabilities:                                                   capabilities:
              drop:                                                           drop:
                - ALL                                         |               - ALL
            readOnlyRootFilesystem: true                                    readOnlyRootFilesystem: true
            runAsNonRoot: true                                              runAsNonRoot: true
            runAsUser: 65532                                                runAsUser: 65532
            seccompProfile:                                                 seccompProfile:
              type: RuntimeDefault                                            type: RuntimeDefault
      nodeSelector:                                           <
        kubernetes.io/os: linux                               <
      restartPolicy: OnFailure                                        restartPolicy: OnFailure
      serviceAccountName: chartsnap-ingress-nginx-admission           serviceAccountName: chartsnap-ingress-nginx-admission
                                                              >       nodeSelector: 
                                                              >         kubernetes.io/os: linux
"""

['sdiff ../../example/remote/__snapshots__/nginx-gateway-fabric.values.snap <(helm template chartsnap oci://ghcr.io/nginxinc/charts/nginx-gateway-fabric -f ../../example/remote/nginx-gateway-fabric.values.yaml -n nginx-gateway)']
SnapShot = """
apiVersion: helm-chartsnap.jlandowner.dev/v1alpha1            | Pulled: ghcr.io/nginxinc/charts/nginx-gateway-fabric:1.2.0
kind: Unknown                                                 | Digest: sha256:dcb4647c4c37f8e2d1ada4bd9ae16221344eabbdf21018
raw: |                                                        <
  Pulled: ghcr.io/nginxinc/charts/nginx-gateway-fabric:1.2.0  <
  Digest: sha256:dcb4647c4c37f8e2d1ada4bd9ae16221344eabbdf210 <
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/rbac.yaml
apiVersion: v1                                                  apiVersion: v1
kind: ServiceAccount                                            kind: ServiceAccount
metadata:                                                       metadata:
  annotations: {}                                             |   name: chartsnap-nginx-gateway-fabric
                                                              >   namespace: nginx-gateway
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-nginx-gateway-fabric                        |   annotations:
  namespace: nginx-gateway                                    |     {}
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                                               kind: ClusterRole
metadata:                                                       metadata:
                                                              >   name: chartsnap-nginx-gateway-fabric
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-nginx-gateway-fabric                        <
rules:                                                          rules:
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - namespaces                                            |   - namespaces
      - services                                              |   - services
      - secrets                                               |   - secrets
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - pods                                                  |   - pods
    verbs:                                                    |   verbs:
      - get                                                   |   - get
  - apiGroups:                                                | - apiGroups:
      - apps                                                  |   - apps
    resources:                                                |   resources:
      - replicasets                                           |   - replicasets
    verbs:                                                    |   verbs:
      - get                                                   |   - get
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - nodes                                                 |   - nodes
    verbs:                                                    |   verbs:
      - list                                                  |   - list
  - apiGroups:                                                | - apiGroups:
      - \"\"                                                    |   - \"\"
    resources:                                                |   resources:
      - events                                                |   - events
    verbs:                                                    |   verbs:
      - create                                                |   - create
      - patch                                                 |   - patch
  - apiGroups:                                                | - apiGroups:
      - discovery.k8s.io                                      |   - discovery.k8s.io
    resources:                                                |   resources:
      - endpointslices                                        |   - endpointslices
    verbs:                                                    |   verbs:
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - gateway.networking.k8s.io                             |   - gateway.networking.k8s.io
    resources:                                                |   resources:
      - gatewayclasses                                        |   - gatewayclasses
      - gateways                                              |   - gateways
      - httproutes                                            |   - httproutes
      - referencegrants                                       |   - referencegrants
    verbs:                                                    |   verbs:
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - gateway.networking.k8s.io                             |   - gateway.networking.k8s.io
    resources:                                                |   resources:
      - httproutes/status                                     |   - httproutes/status
      - gateways/status                                       |   - gateways/status
      - gatewayclasses/status                                 |   - gatewayclasses/status
    verbs:                                                    |   verbs:
      - update                                                |   - update
  - apiGroups:                                                | - apiGroups:
      - gateway.nginx.org                                     |   - gateway.nginx.org
    resources:                                                |   resources:
      - nginxgateways                                         |   - nginxgateways
    verbs:                                                    |   verbs:
      - get                                                   |   - get
      - list                                                  |   - list
      - watch                                                 |   - watch
  - apiGroups:                                                | - apiGroups:
      - gateway.nginx.org                                     |   - gateway.nginx.org
    resources:                                                |   resources:
      - nginxgateways/status                                  |   - nginxgateways/status
    verbs:                                                    |   verbs:
      - update                                                |   - update
  - apiGroups:                                                | - apiGroups:
      - coordination.k8s.io                                   |   - coordination.k8s.io
    resources:                                                |   resources:
      - leases                                                |   - leases
    verbs:                                                    |   verbs:
      - create                                                |   - create
      - get                                                   |   - get
      - update                                                |   - update
  - apiGroups:                                                | - apiGroups:
      - apiextensions.k8s.io                                  |   - apiextensions.k8s.io
    resources:                                                |   resources:
      - customresourcedefinitions                             |   - customresourcedefinitions
    verbs:                                                    |   verbs:
      - list                                                  |   - list
      - watch                                                 |   - watch
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1                        apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding                                        kind: ClusterRoleBinding
metadata:                                                       metadata:
                                                              >   name: chartsnap-nginx-gateway-fabric
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-nginx-gateway-fabric                        <
roleRef:                                                        roleRef:
  apiGroup: rbac.authorization.k8s.io                             apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole                                               kind: ClusterRole
  name: chartsnap-nginx-gateway-fabric                            name: chartsnap-nginx-gateway-fabric
subjects:                                                       subjects:
  - kind: ServiceAccount                                      | - kind: ServiceAccount
    name: chartsnap-nginx-gateway-fabric                      |   name: chartsnap-nginx-gateway-fabric
    namespace: nginx-gateway                                  |   namespace: nginx-gateway
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/service.yaml
apiVersion: v1                                                  apiVersion: v1
kind: Service                                                   kind: Service
metadata:                                                       metadata:
  annotations:                                                |   name: chartsnap-nginx-gateway-fabric
    service.beta.kubernetes.io/aws-load-balancer-type: intern |   namespace: nginx-gateway
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-nginx-gateway-fabric                        |   annotations:
  namespace: nginx-gateway                                    |     service.beta.kubernetes.io/aws-load-balancer-type: intern
spec:                                                           spec:
  externalTrafficPolicy: Local                                    externalTrafficPolicy: Local
  ports:                                                      <
    - name: http                                              <
      port: 80                                                <
      protocol: TCP                                           <
      targetPort: 80                                          <
    - name: https                                             <
      port: 443                                               <
      protocol: TCP                                           <
      targetPort: 443                                         <
  selector:                                                   <
    app.kubernetes.io/instance: chartsnap                     <
    app.kubernetes.io/name: nginx-gateway-fabric              <
  type: LoadBalancer                                              type: LoadBalancer
                                                              >   selector:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
                                                              >     app.kubernetes.io/instance: chartsnap
                                                              >   ports: # Update the following ports to match your Gateway L
                                                              >   - name: http
                                                              >     port: 80
                                                              >     protocol: TCP
                                                              >     targetPort: 80
                                                              >   - name: https
                                                              >     port: 443
                                                              >     protocol: TCP
                                                              >     targetPort: 443
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/deployment.yaml
apiVersion: apps/v1                                             apiVersion: apps/v1
kind: Deployment                                                kind: Deployment
metadata:                                                       metadata:
                                                              >   name: chartsnap-nginx-gateway-fabric
                                                              >   namespace: nginx-gateway
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-nginx-gateway-fabric                        <
  namespace: nginx-gateway                                    <
spec:                                                           spec:
  replicas: 1                                                     replicas: 1
  selector:                                                       selector:
    matchLabels:                                                    matchLabels:
      app.kubernetes.io/instance: chartsnap                   <
      app.kubernetes.io/name: nginx-gateway-fabric                    app.kubernetes.io/name: nginx-gateway-fabric
                                                              >       app.kubernetes.io/instance: chartsnap
  template:                                                       template:
    metadata:                                                       metadata:
      annotations:                                            <
        prometheus.io/port: \"9113\"                            <
        prometheus.io/scrape: \"true\"                          <
      labels:                                                         labels:
        app.kubernetes.io/instance: chartsnap                 <
        app.kubernetes.io/name: nginx-gateway-fabric                    app.kubernetes.io/name: nginx-gateway-fabric
                                                              >         app.kubernetes.io/instance: chartsnap
                                                              >       annotations:
                                                              >         prometheus.io/scrape: \"true\"
                                                              >         prometheus.io/port: \"9113\"
    spec:                                                           spec:
      containers:                                                     containers:
        - args:                                               |       - args:
            - static-mode                                     |         - static-mode
            - --gateway-ctlr-name=gateway.nginx.org/nginx-gat |         - --gateway-ctlr-name=gateway.nginx.org/nginx-gateway
            - --gatewayclass=nginx                            |         - --gatewayclass=nginx
            - --config=chartsnap-config                       |         - --config=chartsnap-config
            - --service=chartsnap-nginx-gateway-fabric        |         - --service=chartsnap-nginx-gateway-fabric
            - --metrics-port=9113                             |         - --metrics-port=9113
            - --health-port=8081                              |         - --health-port=8081
            - --leader-election-lock-name=chartsnap-nginx-gat |         - --leader-election-lock-name=chartsnap-nginx-gateway
          env:                                                |         env:
            - name: POD_IP                                    |         - name: POD_IP
              valueFrom:                                      |           valueFrom:
                fieldRef:                                     |             fieldRef:
                  fieldPath: status.podIP                     |               fieldPath: status.podIP
            - name: POD_NAMESPACE                             |         - name: POD_NAMESPACE
              valueFrom:                                      |           valueFrom:
                fieldRef:                                     |             fieldRef:
                  fieldPath: metadata.namespace               |               fieldPath: metadata.namespace
            - name: POD_NAME                                  |         - name: POD_NAME
              valueFrom:                                      |           valueFrom:
                fieldRef:                                     |             fieldRef:
                  fieldPath: metadata.name                    |               fieldPath: metadata.name
          image: ghcr.io/nginxinc/nginx-gateway-fabric:1.2.0  |         image: ghcr.io/nginxinc/nginx-gateway-fabric:1.2.0
          imagePullPolicy: IfNotPresent                       |         imagePullPolicy: IfNotPresent
          name: nginx-gateway                                 |         name: nginx-gateway
          ports:                                              |         ports:
            - containerPort: 9113                             |         - name: metrics
              name: metrics                                   |           containerPort: 9113
            - containerPort: 8081                             |         - name: health
              name: health                                    |           containerPort: 8081
          readinessProbe:                                     |         readinessProbe:
            httpGet:                                          |           httpGet:
              path: /readyz                                   |             path: /readyz
              port: health                                    |             port: health
            initialDelaySeconds: 3                            |           initialDelaySeconds: 3
            periodSeconds: 1                                  |           periodSeconds: 1
          securityContext:                                    |         securityContext:
            allowPrivilegeEscalation: false                   |           allowPrivilegeEscalation: false
            capabilities:                                     |           capabilities:
              add:                                            |             add:
                - KILL                                        |             - KILL
              drop:                                           |             drop:
                - ALL                                         |             - ALL
            readOnlyRootFilesystem: true                      |           readOnlyRootFilesystem: true
            runAsGroup: 1001                                  |           runAsUser: 102
            runAsUser: 102                                    |           runAsGroup: 1001
          volumeMounts:                                       |         volumeMounts:
            - mountPath: /etc/nginx/conf.d                    |         - name: nginx-conf
              name: nginx-conf                                |           mountPath: /etc/nginx/conf.d
            - mountPath: /etc/nginx/secrets                   |         - name: nginx-secrets
              name: nginx-secrets                             |           mountPath: /etc/nginx/secrets
            - mountPath: /var/run/nginx                       |         - name: nginx-run
              name: nginx-run                                 |           mountPath: /var/run/nginx
        - image: ghcr.io/nginxinc/nginx-gateway-fabric/nginx: |       - image: ghcr.io/nginxinc/nginx-gateway-fabric/nginx:1.
          imagePullPolicy: IfNotPresent                       |         imagePullPolicy: IfNotPresent
          name: nginx                                         |         name: nginx
          ports:                                              |         ports:
            - containerPort: 80                               |         - containerPort: 80
              name: http                                      |           name: http
            - containerPort: 443                              |         - containerPort: 443
              name: https                                     |           name: https
          securityContext:                                    |         securityContext:
            capabilities:                                     |           capabilities:
              add:                                            |             add:
                - NET_BIND_SERVICE                            |             - NET_BIND_SERVICE
              drop:                                           |             drop:
                - ALL                                         |             - ALL
            readOnlyRootFilesystem: true                      |           readOnlyRootFilesystem: true
            runAsGroup: 1001                                  |           runAsUser: 101
            runAsUser: 101                                    |           runAsGroup: 1001
          volumeMounts:                                       |         volumeMounts:
            - mountPath: /etc/nginx/conf.d                    |         - name: nginx-conf
              name: nginx-conf                                |           mountPath: /etc/nginx/conf.d
            - mountPath: /etc/nginx/secrets                   |         - name: nginx-secrets
              name: nginx-secrets                             |           mountPath: /etc/nginx/secrets
            - mountPath: /var/run/nginx                       |         - name: nginx-run
              name: nginx-run                                 |           mountPath: /var/run/nginx
            - mountPath: /var/cache/nginx                     |         - name: nginx-cache
              name: nginx-cache                               |           mountPath: /var/cache/nginx
            - mountPath: /var/lib/nginx                       |         - name: nginx-lib
              name: nginx-lib                                 |           mountPath: /var/lib/nginx
                                                              >       terminationGracePeriodSeconds: 30
                                                              >       serviceAccountName: chartsnap-nginx-gateway-fabric
                                                              >       shareProcessNamespace: true
      securityContext:                                                securityContext:
        fsGroup: 1001                                                   fsGroup: 1001
        runAsNonRoot: true                                              runAsNonRoot: true
      serviceAccountName: chartsnap-nginx-gateway-fabric      <
      shareProcessNamespace: true                             <
      terminationGracePeriodSeconds: 30                       <
      volumes:                                                        volumes:
        - emptyDir: {}                                        |       - name: nginx-conf
          name: nginx-conf                                    |         emptyDir: {}
        - emptyDir: {}                                        |       - name: nginx-secrets
          name: nginx-secrets                                 |         emptyDir: {}
        - emptyDir: {}                                        |       - name: nginx-run
          name: nginx-run                                     |         emptyDir: {}
        - emptyDir: {}                                        |       - name: nginx-cache
          name: nginx-cache                                   |         emptyDir: {}
        - emptyDir: {}                                        |       - name: nginx-lib
          name: nginx-lib                                     |         emptyDir: {}
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/gatewayclass.yaml
apiVersion: gateway.networking.k8s.io/v1                        apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass                                              kind: GatewayClass
metadata:                                                       metadata:
                                                              >   name: nginx
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: nginx                                                 <
spec:                                                           spec:
  controllerName: gateway.nginx.org/nginx-gateway-controller      controllerName: gateway.nginx.org/nginx-gateway-controller
---                                                             ---
                                                              > # Source: nginx-gateway-fabric/templates/nginxgateway.yaml
apiVersion: gateway.nginx.org/v1alpha1                          apiVersion: gateway.nginx.org/v1alpha1
kind: NginxGateway                                              kind: NginxGateway
metadata:                                                       metadata:
                                                              >   name: chartsnap-config
                                                              >   namespace: nginx-gateway
  labels:                                                         labels:
                                                              >     app.kubernetes.io/name: nginx-gateway-fabric
    app.kubernetes.io/instance: chartsnap                           app.kubernetes.io/instance: chartsnap
                                                              >     app.kubernetes.io/version: \"1.2.0\"
    app.kubernetes.io/managed-by: Helm                              app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-gateway-fabric              <
    app.kubernetes.io/version: 1.2.0                          <
    helm.sh/chart: nginx-gateway-fabric-1.2.0                       helm.sh/chart: nginx-gateway-fabric-1.2.0
  name: chartsnap-config                                      <
  namespace: nginx-gateway                                    <
spec:                                                           spec:
  logging:                                                        logging:
    level: info                                                     level: info
"""

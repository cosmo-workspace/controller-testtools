['Snap takes a full snapshot 1']
SnapShot = """
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/restartedAt: \"2023-02-26T13:52:41Z\"
  creationTimestamp: \"2023-12-16T15:22:57Z\"
  generateName: ingress-nginx-controller-
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.4
    controller-revision-hash: 58c9997466
    helm.sh/chart: ingress-nginx-4.8.4
    pod-template-generation: \"5\"
  name: ingress-nginx-controller-2rqc5
  namespace: ingress-nginx
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: ingress-nginx-controller
    uid: xxxxx
  resourceVersion: \"11111111\"
  uid: xxxxx
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - usagi
  containers:
  - args:
    - /nginx-ingress-controller
    - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
    - --election-id=ingress-nginx-leader
    - --controller-class=k8s.io/ingress-nginx
    - --ingress-class=nginx
    - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
    - --validating-webhook=:8443
    - --validating-webhook-certificate=/usr/local/certificates/cert
    - --validating-webhook-key=/usr/local/certificates/key
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: LD_PRELOAD
      value: /usr/local/lib/libmimalloc.so
    image: registry.k8s.io/ingress-nginx/controller:v1.9.4@sha256:5b161f051d017e55d358435f295f5e9a297e66158f136321d9b04520ec6c48a3
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - /wait-shutdown
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: controller
    ports:
    - containerPort: 80
      hostPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      name: https
      protocol: TCP
    - containerPort: 8443
      hostPort: 8443
      name: webhook
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
        memory: 90Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 101
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/local/certificates/
      name: webhook-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-c92mq
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: usagi
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: ingress-nginx
  serviceAccountName: ingress-nginx
  terminationGracePeriodSeconds: 300
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - name: webhook-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: cert
      - key: tls.key
        path: key
      secretName: ingress-nginx-admission
  - name: kube-api-access-c92mq
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: \"2023-12-16T15:22:57Z\"
    status: \"True\"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: \"2024-03-25T07:14:16Z\"
    status: \"True\"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: \"2024-03-25T07:14:16Z\"
    status: \"True\"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: \"2023-12-16T15:22:57Z\"
    status: \"True\"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://xxx
    image: sha256:5aa0bf4798fa2300b97564cc77480e6d0abac88f8bdc001c01eb4ab3b98b2fbf
    imageID: registry.k8s.io/ingress-nginx/controller@sha256:5b161f051d017e55d358435f295f5e9a297e66158f136321d9b04520ec6c48a3
    lastState:
      terminated:
        containerID: containerd://xxx
        exitCode: 255
        finishedAt: \"2024-03-25T07:08:20Z\"
        reason: Unknown
        startedAt: \"2024-02-12T08:14:25Z\"
    name: controller
    ready: true
    restartCount: 4
    started: true
    state:
      running:
        startedAt: \"2024-03-25T07:13:37Z\"
  hostIP: 192.168.0.10
  phase: Running
  podIP: 192.168.0.10
  podIPs:
  - ip: 192.168.0.10
  qosClass: Burstable
  startTime: \"2023-12-16T15:22:57Z\"
"""

['Snap takes a snapshot without dynamic values 1']
SnapShot = """
{
  \"apiVersion\": \"v1\",
  \"kind\": \"Pod\",
  \"metadata\": {
    \"annotations\": {
      \"kubectl.kubernetes.io/restartedAt\": \"2023-02-26T13:52:41Z\"
    },
    \"generateName\": \"ingress-nginx-controller-\",
    \"labels\": {
      \"app.kubernetes.io/component\": \"controller\",
      \"app.kubernetes.io/instance\": \"ingress-nginx\",
      \"app.kubernetes.io/managed-by\": \"Helm\",
      \"app.kubernetes.io/name\": \"ingress-nginx\",
      \"app.kubernetes.io/part-of\": \"ingress-nginx\",
      \"app.kubernetes.io/version\": \"1.9.4\",
      \"controller-revision-hash\": \"58c9997466\",
      \"helm.sh/chart\": \"ingress-nginx-4.8.4\",
      \"pod-template-generation\": \"5\"
    },
    \"name\": \"ingress-nginx-controller-2rqc5\",
    \"namespace\": \"ingress-nginx\",
    \"ownerReferences\": [
      {
        \"apiVersion\": \"apps/v1\",
        \"blockOwnerDeletion\": true,
        \"controller\": true,
        \"kind\": \"DaemonSet\",
        \"name\": \"ingress-nginx-controller\",
        \"uid\": \"\"
      }
    ]
  },
  \"spec\": {
    \"affinity\": {
      \"nodeAffinity\": {
        \"requiredDuringSchedulingIgnoredDuringExecution\": {
          \"nodeSelectorTerms\": [
            {
              \"matchFields\": [
                {
                  \"key\": \"metadata.name\",
                  \"operator\": \"In\",
                  \"values\": [
                    \"usagi\"
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    \"containers\": [
      {
        \"args\": [
          \"/nginx-ingress-controller\",
          \"--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller\",
          \"--election-id=ingress-nginx-leader\",
          \"--controller-class=k8s.io/ingress-nginx\",
          \"--ingress-class=nginx\",
          \"--configmap=$(POD_NAMESPACE)/ingress-nginx-controller\",
          \"--validating-webhook=:8443\",
          \"--validating-webhook-certificate=/usr/local/certificates/cert\",
          \"--validating-webhook-key=/usr/local/certificates/key\"
        ],
        \"env\": [
          {
            \"name\": \"POD_NAME\",
            \"valueFrom\": {
              \"fieldRef\": {
                \"apiVersion\": \"v1\",
                \"fieldPath\": \"metadata.name\"
              }
            }
          },
          {
            \"name\": \"POD_NAMESPACE\",
            \"valueFrom\": {
              \"fieldRef\": {
                \"apiVersion\": \"v1\",
                \"fieldPath\": \"metadata.namespace\"
              }
            }
          },
          {
            \"name\": \"LD_PRELOAD\",
            \"value\": \"/usr/local/lib/libmimalloc.so\"
          }
        ],
        \"image\": \"registry.k8s.io/ingress-nginx/controller:v1.9.4@sha256:5b161f051d017e55d358435f295f5e9a297e66158f136321d9b04520ec6c48a3\",
        \"imagePullPolicy\": \"IfNotPresent\",
        \"lifecycle\": {
          \"preStop\": {
            \"exec\": {
              \"command\": [
                \"/wait-shutdown\"
              ]
            }
          }
        },
        \"livenessProbe\": {
          \"failureThreshold\": 5,
          \"httpGet\": {
            \"path\": \"/healthz\",
            \"port\": 10254,
            \"scheme\": \"HTTP\"
          },
          \"initialDelaySeconds\": 10,
          \"periodSeconds\": 10,
          \"successThreshold\": 1,
          \"timeoutSeconds\": 1
        },
        \"name\": \"controller\",
        \"ports\": [
          {
            \"containerPort\": 80,
            \"hostPort\": 80,
            \"name\": \"http\",
            \"protocol\": \"TCP\"
          },
          {
            \"containerPort\": 443,
            \"hostPort\": 443,
            \"name\": \"https\",
            \"protocol\": \"TCP\"
          },
          {
            \"containerPort\": 8443,
            \"hostPort\": 8443,
            \"name\": \"webhook\",
            \"protocol\": \"TCP\"
          }
        ],
        \"readinessProbe\": {
          \"failureThreshold\": 3,
          \"httpGet\": {
            \"path\": \"/healthz\",
            \"port\": 10254,
            \"scheme\": \"HTTP\"
          },
          \"initialDelaySeconds\": 10,
          \"periodSeconds\": 10,
          \"successThreshold\": 1,
          \"timeoutSeconds\": 1
        },
        \"resources\": {
          \"requests\": {
            \"cpu\": \"100m\",
            \"memory\": \"90Mi\"
          }
        },
        \"securityContext\": {
          \"allowPrivilegeEscalation\": false,
          \"capabilities\": {
            \"add\": [
              \"NET_BIND_SERVICE\"
            ],
            \"drop\": [
              \"ALL\"
            ]
          },
          \"readOnlyRootFilesystem\": false,
          \"runAsNonRoot\": true,
          \"runAsUser\": 101,
          \"seccompProfile\": {
            \"type\": \"RuntimeDefault\"
          }
        },
        \"terminationMessagePath\": \"/dev/termination-log\",
        \"terminationMessagePolicy\": \"File\",
        \"volumeMounts\": [
          {
            \"mountPath\": \"/usr/local/certificates/\",
            \"name\": \"webhook-cert\",
            \"readOnly\": true
          },
          {
            \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",
            \"name\": \"kube-api-access-c92mq\",
            \"readOnly\": true
          }
        ]
      }
    ],
    \"dnsPolicy\": \"ClusterFirst\",
    \"enableServiceLinks\": true,
    \"hostNetwork\": true,
    \"nodeName\": \"usagi\",
    \"nodeSelector\": {
      \"kubernetes.io/os\": \"linux\"
    },
    \"preemptionPolicy\": \"PreemptLowerPriority\",
    \"priority\": 0,
    \"restartPolicy\": \"Always\",
    \"schedulerName\": \"default-scheduler\",
    \"securityContext\": {},
    \"serviceAccount\": \"ingress-nginx\",
    \"serviceAccountName\": \"ingress-nginx\",
    \"terminationGracePeriodSeconds\": 300,
    \"tolerations\": [
      {
        \"effect\": \"NoExecute\",
        \"key\": \"node.kubernetes.io/not-ready\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoExecute\",
        \"key\": \"node.kubernetes.io/unreachable\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoSchedule\",
        \"key\": \"node.kubernetes.io/disk-pressure\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoSchedule\",
        \"key\": \"node.kubernetes.io/memory-pressure\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoSchedule\",
        \"key\": \"node.kubernetes.io/pid-pressure\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoSchedule\",
        \"key\": \"node.kubernetes.io/unschedulable\",
        \"operator\": \"Exists\"
      },
      {
        \"effect\": \"NoSchedule\",
        \"key\": \"node.kubernetes.io/network-unavailable\",
        \"operator\": \"Exists\"
      }
    ],
    \"volumes\": [
      {
        \"name\": \"webhook-cert\",
        \"secret\": {
          \"defaultMode\": 420,
          \"items\": [
            {
              \"key\": \"tls.crt\",
              \"path\": \"cert\"
            },
            {
              \"key\": \"tls.key\",
              \"path\": \"key\"
            }
          ],
          \"secretName\": \"ingress-nginx-admission\"
        }
      },
      {
        \"name\": \"kube-api-access-c92mq\",
        \"projected\": {
          \"defaultMode\": 420,
          \"sources\": [
            {
              \"serviceAccountToken\": {
                \"expirationSeconds\": 3607,
                \"path\": \"token\"
              }
            },
            {
              \"configMap\": {
                \"items\": [
                  {
                    \"key\": \"ca.crt\",
                    \"path\": \"ca.crt\"
                  }
                ],
                \"name\": \"kube-root-ca.crt\"
              }
            },
            {
              \"downwardAPI\": {
                \"items\": [
                  {
                    \"fieldRef\": {
                      \"apiVersion\": \"v1\",
                      \"fieldPath\": \"metadata.namespace\"
                    },
                    \"path\": \"namespace\"
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  },
  \"status\": {
    \"conditions\": [
      {
        \"lastProbeTime\": null,
        \"lastTransitionTime\": \"2023-12-16T15:22:57Z\",
        \"status\": \"True\",
        \"type\": \"Initialized\"
      },
      {
        \"lastProbeTime\": null,
        \"lastTransitionTime\": \"2024-03-25T07:14:16Z\",
        \"status\": \"True\",
        \"type\": \"Ready\"
      },
      {
        \"lastProbeTime\": null,
        \"lastTransitionTime\": \"2024-03-25T07:14:16Z\",
        \"status\": \"True\",
        \"type\": \"ContainersReady\"
      },
      {
        \"lastProbeTime\": null,
        \"lastTransitionTime\": \"2023-12-16T15:22:57Z\",
        \"status\": \"True\",
        \"type\": \"PodScheduled\"
      }
    ],
    \"containerStatuses\": [
      {
        \"containerID\": \"containerd://xxx\",
        \"image\": \"sha256:5aa0bf4798fa2300b97564cc77480e6d0abac88f8bdc001c01eb4ab3b98b2fbf\",
        \"imageID\": \"registry.k8s.io/ingress-nginx/controller@sha256:5b161f051d017e55d358435f295f5e9a297e66158f136321d9b04520ec6c48a3\",
        \"lastState\": {
          \"terminated\": {
            \"containerID\": \"containerd://xxx\",
            \"exitCode\": 255,
            \"finishedAt\": \"2024-03-25T07:08:20Z\",
            \"reason\": \"Unknown\",
            \"startedAt\": \"2024-02-12T08:14:25Z\"
          }
        },
        \"name\": \"controller\",
        \"ready\": true,
        \"restartCount\": 4,
        \"started\": true,
        \"state\": {
          \"running\": {
            \"startedAt\": \"2024-03-25T07:13:37Z\"
          }
        }
      }
    ],
    \"hostIP\": \"192.168.0.10\",
    \"phase\": \"Running\",
    \"podIP\": \"192.168.0.10\",
    \"podIPs\": [
      {
        \"ip\": \"192.168.0.10\"
      }
    ],
    \"qosClass\": \"Burstable\",
    \"startTime\": \"2023-12-16T15:22:57Z\"
  }
}
"""
